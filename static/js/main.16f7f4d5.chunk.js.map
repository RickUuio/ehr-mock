{"version":3,"sources":["components/Patient.js","components/Provider.js","components/ProfileSelector.js","components/Header.js","components/Encounters.js","components/EncounterSummary.js","components/CreateReferral.js","components/ReferralSummary.js","components/StatusSelector.js","components/AddNote.js","components/Referrals.js","components/Profiles.js","App.js","reportWebVitals.js","index.js"],"names":["Patient","patient","className","style","color","firstName","lastName","dob","gender","mrn","fhirId","Provider","provider","uuid","ProfileSelector","profileName","switchProfile","role","aria-label","id","type","name","autoComplete","defaultChecked","onClick","htmlFor","Header","title","defaultProps","Encounters","encounterList","currentEncounter","changeCurrentEncounter","refreshEncounters","console","log","length","map","encounter","index","selected","resource","eClassName","visible","encounterSelected","href","fullUrl","period","start","split","class","display","EncounterSummary","toggleShowNewReferral","showNewReferral","sendNotificationUU","toggle","disabled","CreateReferral","onCreate","useState","referredToGroupIds","setReferredToGroupIds","referredFromGroupId","setReferredFromGroupId","networkId","setNetworkId","serviceType","setServiceType","description","setDescription","attachDocument","setAttachDocument","onSubmit","e","preventDefault","placeholder","readOnly","value","onChange","target","text","options","selectedIndex","rows","cols","checked","for","ReferralSummary","referral","showFhirSource","editReferralStatus","showAddNoteWindow","sendUUNotification","baseUrl","expandReferralId","setExpandReferralId","showSource","fullJson","findUUID","identifier","find","entry","system","toUpperCase","expandStatus","referralId","removeReferral","a","trackingItem","full_url","fetch","method","headers","Accept","body","JSON","stringify","res","json","data","item","response","status","rowColor","Task","data-bs-toggle","data-bs-target","ServiceRequest","aria-expanded","aria-controls","authoredOn","data-bs-placement","currentStatus","orderDetail","owner","Communication","core_referral_id","rel","pop","colSpan","scoope","resourceType","Practitioner","requester","supportingInfo","DocumentReference","lastModified","Organization","family","given","Consent","consent","scope","provision","end","documentReference","Binary","binary","contentType","download","communication","sent","sender","recipient","payload","contentString","contentReference","reference","includes","StatusSelector","showReferralStatus","currentReferralStatus","closeReferralStatusEdit","newReferralStatus","setNewReferralStatus","rejectReason","setRejectReason","rejectReasonNote","setRejectReasonNote","enforceBusinessRule","setEnforceBusinessRule","closeStatusEdit","changeStatus","newStatus","statusEnabled","stageColor","stage","colorDone","newStage","Modal","size","show","onHide","closeButton","Title","Body","rowSpan","display_name","option","Footer","Button","variant","reason","note","AddNote","showAddNote","closeAddNote","noteText","setNoteText","callResponse","setCallResponse","refreshCount","setRefreshCount","showMessageToast","setShowMessageToast","communicationList","setCommunicationList","waitMessage","setWaitMessage","useEffect","updateList","queryParams","total","sendNote","sentAt","Math","floor","Date","now","noteColor","noteAlign","responseTo","recipients","responseToStr","forEach","closeAddNoteWindow","backgroundColor","opacity","aria-live","aria-atomic","calssName","Referrals","referralList","updateReferralStatus","setShowNewReferral","setShowSource","setShowReferralStatus","setFullJson","setCurrentReferralStatus","editReferralId","setEditReferralId","setShowAddNote","currentReferral","setCurrentReferral","closeWindow","undefined","Profile_Epic","defaultPatient","defaultProvider","groupId","defaultEncounter","defaultDocumentReference","defaultBaseUrl","defaultNotificationUrl","accessToken","Profile_Epic_2","Profile_Logica","App","defaultProfile","defaultProfileName","currentProfileName","setCurrentProfileName","setPatient","setProvider","setCurrentEncounter","access_token","setAccessToken","setBaseUrl","notificationUrl","setNotificationUrl","referrals","setReferrals","encounters","setEncounters","sampleDocumentReference","setSampleDocumentReference","defaultToastMessage","toastMessage","setToastMessage","progress","setProgress","newProfile","getAccessToken","token","refreshProfileSettings","getEncounters","createReferral","nowISO","toISOString","url","intent","category","coding","code","priority","subject","newServiceRequestId","basedOn","newTaskId","partOf","newCommunicationId","getReferrals","fetchReferrals","encounterId","referralBaseUrl","Authorization","entryList","push","patientId","serviceRequestId","practitionerId","organizationId","entryId","fetchCommunications","communications","fetchDocumentReferences","documentReferences","fetchBinaries","binaryList","lookupUUReferralId","fetchConsents","consentList","sort","b","timeA","getTime","fetchEncounters","encounterBaseUrl","taskId","documentList","documentReferenceList","content","attachment","patientFhirId","fhirUrl","currentBaseUrl","notification","statusCode","message","privateKey","taskFhirId","resourceId","task","eTag","epicCode","mapToEpicCode","statusReason","etag","uuCode","setProfile","updateFhir","data-bs-dismiss","width","aria-valuenow","aria-valuemin","aria-valuemax","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16f7f4d5.chunk.js","sourcesContent":["import { FaRegUser } from 'react-icons/fa';\n\nconst Patient = ({ patient }) => {\n  return (\n    <div className=\"p-2\">\n      <h4 style={{ color: 'yellow' }}>\n        <FaRegUser />\n        {patient.firstName} {patient.lastName}\n      </h4>\n      <h6>\n        <span className=\"badge bg-light text-dark\">DOB</span> : {patient.dob}\n        <span> </span>\n        <span className=\"badge bg-light text-dark\">Gender</span> :{' '}\n        {patient.gender}\n      </h6>\n      <h6>\n        <span className=\"badge bg-light text-dark\">MRN</span> : {patient.mrn}\n      </h6>\n      <h6>\n        <span className=\"badge bg-light text-dark\">FHIR ID</span> :{' '}\n        {patient.fhirId}\n      </h6>\n    </div>\n  );\n};\n\nexport default Patient;\n","import { FaUserMd } from 'react-icons/fa';\n\nconst Provider = ({ provider }) => {\n  return (\n    <div className=\"p-2\">\n      <h4 style={{ color: 'HotPink' }}>\n        {provider.firstName} {provider.lastName} <FaUserMd></FaUserMd>\n      </h4>\n      <h6>\n        <span className=\"badge bg-light text-dark\">FHIR ID</span> :{' '}\n        {provider.fhirId}\n      </h6>\n      <h6>\n        <span className=\"badge bg-light text-dark\">UUID </span> :{' '}\n        {provider.uuid}\n      </h6>\n    </div>\n  );\n};\n\nexport default Provider;\n","const ProfileSelector = ({ profileName, switchProfile }) => {\n  return (\n    <div\n      className=\"btn-group mb-2\"\n      role=\"group\"\n      aria-label=\"Profile selector\"\n      id=\"profileGroup\"\n    >\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnProfile\"\n        id=\"profileEpic\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === 'Epic'}\n        onClick={() => {\n          profileName = 'Epic';\n          switchProfile('Epic');\n        }}\n      />\n      <label className=\"btn btn-outline-danger\" htmlFor=\"profileEpic\">\n        Calvin @Epic\n      </label>\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnProfile\"\n        id=\"profileEpic2\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === 'Epic2'}\n        onClick={() => {\n          profileName = 'Epic2';\n          switchProfile('Epic2');\n        }}\n      />\n      <label className=\"btn btn-outline-danger\" htmlFor=\"profileEpic2\">\n        Beverly @Epic\n      </label>\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnProfile\"\n        id=\"profileLogica\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === 'Logica'}\n        onClick={() => {\n          profileName = 'Logica';\n          switchProfile('Logica');\n        }}\n      />\n      <label className=\"btn btn-outline-info\" htmlFor=\"profileLogica\">\n        Beverly @Logica\n      </label>\n    </div>\n  );\n};\n\nexport default ProfileSelector;\n","import PropTypes from 'prop-types';\nimport Patient from './Patient';\nimport Provider from './Provider';\nimport ProfileSelector from './ProfileSelector';\nimport { FaFire } from 'react-icons/fa';\n\nconst Header = ({ title, patient, provider, profileName, switchProfile }) => {\n  return (\n    <header>\n      <div id=\"navbarTop\">\n        <div className=\"row\">\n          <div className=\"col-lg-6 col-md-12 order-lg-2\">\n            <h2 className=\"pt-4\">\n              <FaFire style={{ color: '#d60c05ee' }} /> {title}\n            </h2>\n            <ProfileSelector\n              profileName={profileName}\n              switchProfile={switchProfile}\n            />\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 order-lg-1\">\n            <Patient patient={patient} />\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 order-lg-3\">\n            <Provider provider={provider} />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: 'Mock EHR : : Social Care Referrals',\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n// const headingStyle = {\n//   color: \"white\",\n//   backgroundColor: \"#2c405a\",\n// };\n\nexport default Header;\n","import { FcRefresh } from 'react-icons/fc';\nimport { FaCalendarCheck } from 'react-icons/fa';\n\nconst Encounters = ({\n  encounterList,\n  currentEncounter = 'smart-2',\n  changeCurrentEncounter,\n  refreshEncounters,\n}) => {\n  const refresh = () => {\n    console.log(\"Retrieving patient's encounters\");\n    refreshEncounters();\n  };\n\n  const setCurrentEncounter = (encounterSelected) => {\n    changeCurrentEncounter(encounterSelected);\n  };\n\n  return (\n    <div className=\"encounter col-md-3 col-lg-2 mx-0 px-0\">\n      <div\n        className=\"btn btn-default btn-lg btn-block table-hover mx-0\"\n        onClick={refresh}\n      >\n        All Encounters\n        <div className=\"badge bg-primary mx-2\">{encounterList.length}</div>\n        <FcRefresh />\n      </div>\n\n      <dl>\n        {encounterList.map((encounter, index) => {\n          const selected = encounter.resource.id === currentEncounter;\n          const eClassName = selected\n            ? 'row list-hover m-0 px-2 text-break selected'\n            : 'row list-hover m-0 px-2 text-break';\n          const visible = selected ? 'visible' : 'invisible';\n\n          return (\n            <div\n              key={index}\n              className={eClassName}\n              onClick={() => setCurrentEncounter(encounter.resource.id)}\n            >\n              <dt>\n                <a href={encounter.fullUrl}>\n                  {encounter.resource.id}{' '}\n                  <FaCalendarCheck className={visible} />\n                </a>\n              </dt>\n              <dd>\n                {<div>{encounter.resource.period.start.split('T')[0]}</div>}\n                {<div> {encounter.resource.class.display}</div>}\n              </dd>\n            </div>\n          );\n        })}\n      </dl>\n    </div>\n  );\n};\n\nexport default Encounters;\n","const EncounterSummary = ({\n  toggleShowNewReferral,\n  showNewReferral,\n  currentEncounter,\n  sendNotificationUU,\n  profileName,\n}) => {\n  const toggle = () => {\n    toggleShowNewReferral();\n  };\n\n  const sendNotification = () => {\n    console.log('sending an encounter notification to Unite Us...');\n    sendNotificationUU();\n  };\n\n  return (\n    <div className=\"encounterSummary\">\n      <div className=\"row pt-2 row-cols-1 row-cols-lg-3\">\n        <div className=\"col mx-auto text-break\">\n          <h4>Current Encounter: {currentEncounter}</h4>\n        </div>\n        <div className=\"col\">\n          {!showNewReferral ? (\n            <button\n              className=\"btn btn-primary btn-block mx-1\"\n              onClick={toggle}\n              disabled={profileName !== 'Logica'}\n            >\n              Create New Referral\n            </button>\n          ) : (\n            <button\n              className=\"btn btn-warning btn-block col mx-1\"\n              onClick={toggle}\n            >\n              Cancel New Referral\n            </button>\n          )}\n        </div>\n        <div className=\"col\">\n          <button\n            className=\"btn btn-primary btn-block col mx-1\"\n            onClick={sendNotification}\n          >\n            Send Notification to Unite Us\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EncounterSummary;\n","import { useState } from 'react';\nimport { GrAttachment } from 'react-icons/gr';\n\nexport const CreateReferral = ({ onCreate, toggleShowNewReferral }) => {\n  const [referredToGroupIds, setReferredToGroupIds] = useState('');\n  const [referredFromGroupId, setReferredFromGroupId] = useState('');\n  const [networkId, setNetworkId] = useState('');\n  const [serviceType, setServiceType] = useState('');\n  const [description, setDescription] = useState('');\n  const [attachDocument, setAttachDocument] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    /*     if (!serviceType) {\n      alert('Please select a service for the referral!');\n      return;\n    } */\n\n    onCreate({\n      serviceType,\n      description,\n      referredToGroupIds,\n      referredFromGroupId,\n      networkId,\n      attachDocument,\n    });\n\n    setReferredToGroupIds('');\n    setReferredFromGroupId('demo-hospital');\n    setNetworkId('demo-network');\n    setServiceType('');\n    setDescription('');\n    setAttachDocument(false);\n  };\n\n  const cancelReferralCreation = () => {\n    toggleShowNewReferral();\n  };\n  return (\n    <div className=\"newReferral\">\n      <form className=\"add-form\" onSubmit={onSubmit}>\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SENDING NETWORK</label>\n              <div>\n                <input\n                  className=\"form-select\"\n                  type=\"text\"\n                  placeholder=\"Healthy Demo Network\"\n                  readOnly\n                  disabled\n                  value={networkId}\n                  onChange={(e) => setNetworkId(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">RECEIVING NETWORK</label>\n              <div>\n                <input\n                  className=\"form-select\"\n                  type=\"text\"\n                  readOnly\n                  disabled\n                  placeholder=\"Healthy Demo Network\"\n                  value={networkId}\n                  onChange={(e) => setNetworkId(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SENDER</label>\n              <div>\n                <input\n                  className=\"form-select\"\n                  type=\"text\"\n                  readOnly\n                  disabled\n                  placeholder=\"Local Hospital Center\"\n                  value={referredFromGroupId}\n                  onChange={(e) => setReferredFromGroupId(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-lg-6\">\n            {/* <div className=\"form-group\">\n              <label className=\"col-form-label\">SERVICE TYPE</label>\n              <div>\n                <select\n                  className=\"form-select\"\n                  value={serviceType.value}\n                  onChange={(e) =>\n                    setServiceType({\n                      value: e.target.value,\n                      text: e.target.options[e.target.selectedIndex].text,\n                    })\n                  }\n                >\n                  <option>Select a service ...</option>\n                  <option value=\"f020d616-5016-4fb7-9fad-91d8d99cd7a1\">\n                    Emergency Food\n                  </option>\n                  <option value=\"f6760383-7fc4-442b-b686-fc5055bfec06\">\n                    Emergency Housing\n                  </option>\n                </select>\n              </div>\n            </div>\n */}\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">RECEIPIENT</label>\n              <div>\n                <select\n                  className=\"form-select\"\n                  value={referredToGroupIds.value}\n                  onChange={(e) =>\n                    setReferredToGroupIds({\n                      value: e.target.value,\n                      text: e.target.options[e.target.selectedIndex].text,\n                    })\n                  }\n                >\n                  <option>Select an organization ...</option>\n\n                  {/*                   <option value=\"15179\">\n                    NC Housing & Transportation Services\n                  </option> */}\n                  <option value=\"15195\">\n                    Asian Resource - SacramentoWorks\n                  </option>\n                  <option value=\"15191\">\n                    BusRides Sustainable Transportation Act - BusRides Transport\n                  </option>\n                  <option value=\"15199\">\n                    Cumberland Legal Assistance - Youth Services\n                  </option>\n                  <option value=\"14742\">\n                    Housing California - Housing Assistance\n                  </option>\n                  <option value=\"15207\">\n                    James Bentley Treatment Program - Mental Health Skill\n                    Building\n                  </option>\n                  <option value=\"15211\">Kroger - Food Benefits Program</option>\n                  <option value=\"15215\">Legal Aid - Housing Law</option>\n                  <option value=\"15219\">\n                    Planned Parenthood Mohawk Hudson - Saratoga Springs Center -\n                    Youth Health Promoters\n                  </option>\n                  <option value=\"14733\">\n                    River City Food Bank - Food Pantry\n                  </option>\n                  <option value=\"15183\">\n                    Santa Fe Medical Clinic - Medical Services\n                  </option>\n                  <option value=\"15184\">\n                    Santa Fe Medical Clinic - Dental Services\n                  </option>\n                  <option value=\"15200\">\n                    St. Mary's Shelter - Men's Emergency Shelter\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">INITIAL COMMUNICATION</label>\n              <div>\n                <textarea\n                  className=\"form-control\"\n                  rows=\"3\"\n                  cols=\"50\"\n                  placeholder=\"Enter a description for the referral\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <div className=\"form-check form-switch mx-2 text-start\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  id=\"flexSwitchCheckDefault\"\n                  checked={attachDocument}\n                  onChange={(e) => setAttachDocument(e.target.checked)}\n                />\n                <label\n                  className=\"form-check-label\"\n                  for=\"flexSwitchCheckDefault\"\n                >\n                  Attach document to the communication{' '}\n                  <GrAttachment></GrAttachment>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row d-inline\">\n          <input\n            value=\"Cancel\"\n            className=\"btn btn-warning col-md-6 mt-4\"\n            onClick={cancelReferralCreation}\n            readOnly\n          />\n\n          <input\n            value=\"Submit\"\n            className=\"btn btn-primary col-md-6 mt-4\"\n            onClick={onSubmit}\n            readOnly\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateReferral;\n","import { IoOpenOutline, IoCloudDownloadSharp } from 'react-icons/io5';\nimport { useState } from 'react';\n// import { MdExpandLess, MdExpandMore } from \"react-icons/md\";\nimport { FaEdit } from 'react-icons/fa';\nimport { BiMessageEdit } from 'react-icons/bi';\n\nfunction ReferralSummary({\n  referral,\n  showFhirSource,\n  editReferralStatus,\n  showAddNoteWindow,\n  baseUrl,\n  sendUUNotification,\n}) {\n  const [expandReferralId, setExpandReferralId] = useState('');\n\n  const showSource = (fullJson) => {\n    showFhirSource(fullJson, true);\n  };\n\n  const editStatus = (referralId, currentStatus) => {\n    editReferralStatus(referralId, currentStatus);\n  };\n\n  let findUUID = (resource) => {\n    const cboUUID = resource.identifier.find(\n      (entry) =>\n        entry.system.toUpperCase() ===\n        'HTTPS://UNITEUS.COM/IO/STRUCTUREDEFINITION/CBO-UUID'\n    );\n    return cboUUID;\n  };\n\n  const toggleExpand = (referralId) => {\n    if (expandReferralId === referralId) setExpandReferralId('');\n    else setExpandReferralId(referralId);\n  };\n\n  const expandStatus = (referralId) => {\n    return expandReferralId === referralId;\n  };\n\n  const rowColor = (status) => {\n    switch (status) {\n      case 'accepted':\n        return 'primary';\n      case 'in-progress':\n        return 'info';\n      case 'rejected':\n        return 'danger';\n      case 'failed':\n        return 'danger';\n      case 'completed':\n        return 'success';\n      case 'cancelled':\n        return 'danger';\n      default:\n        return 'light';\n    }\n  };\n\n  const removeReferral = async () => {\n    const fullUrl = referral.trackingItem.full_url;\n    console.log('remove referral: ', fullUrl);\n    const url =\n      'https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/resource_tracking/delete';\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343',\n      },\n      body: JSON.stringify({\n        full_url: fullUrl,\n      }),\n    });\n    const data = await res.json();\n    const item = data.response;\n    referral.trackingItem = null;\n    setExpandReferralId('');\n    console.log('remove item: ', item);\n    return item;\n  };\n\n  const sendCommunicationNotification = (fhirId) => {\n    console.log('sending a communication notification to Unite Us...');\n    sendUUNotification(fhirId, 'Communication');\n  };\n\n  const sendTaskNotification = (fhirId) => {\n    console.log('sending a task notification to Unite Us...');\n    sendUUNotification(fhirId, 'Task');\n  };\n\n  return (\n    <>\n      <tr\n        className={\n          'align-middle table-' + rowColor(referral.Task?.resource?.status)\n        }\n        data-bs-toggle=\"collapse\"\n        data-bs-target={'#referral' + referral.ServiceRequest.resource.id}\n        aria-expanded=\"false\"\n        aria-controls={'referral' + referral.ServiceRequest.resource.id}\n        onClick={() => toggleExpand(referral.ServiceRequest.resource.id)}\n        role=\"button\"\n      >\n        <td>{referral.ServiceRequest.resource.authoredOn}</td>\n        <td>\n          <div\n            className=\"btn btn-outline-primary my-0\"\n            data-bs-toggle=\"tooltip\"\n            title=\"Click to edit referral status\"\n            data-bs-placement=\"top\"\n            onClick={() =>\n              editStatus(\n                referral.Task?.resource?.id,\n                referral.Task?.resource?.status\n              )\n            }\n          >\n            {referral.Task?.resource?.status} <FaEdit></FaEdit>\n          </div>\n        </td>\n        <td>\n          {referral.ServiceRequest.resource.orderDetail\n            ? referral.ServiceRequest.resource.orderDetail[0].text\n            : 'Not Confirmed'}\n        </td>\n        <td>{referral.Task?.resource?.owner?.display}</td>\n        <td>\n          <div role=\"button\" onClick={() => showAddNoteWindow(referral)}>\n            <div className=\"badge bg-primary\">\n              {referral.Communication?.length || '0'}\n            </div>{' '}\n            <BiMessageEdit className=\"text-primary \" />\n          </div>\n        </td>\n        {/* <td>\n          <div className=\"form-check form-switch mx-2 text-start\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              role=\"button\"\n              id={\"flexSwitchCheck\" + referral.ServiceRequest.resource.id}\n              checked={expandStatus(referral.ServiceRequest.resource.id)}\n              onChange={() => toggleExpand(referral.ServiceRequest.resource.id)}\n            />\n            <label\n              className=\"form-check-label\"\n              role=\"button\"\n              for={\"flexSwitchCheck\" + referral.ServiceRequest.resource.id}\n            >\n              Fhir Resources{\" \"}\n              {expandStatus(referral.ServiceRequest.resource.id) ? (\n                <MdExpandLess></MdExpandLess>\n              ) : (\n                <MdExpandMore></MdExpandMore>\n              )}\n            </label>\n          </div>\n        </td> */}\n        <td>\n          {referral.trackingItem ? (\n            <a\n              href={`https://app.uniteustraining.com/dashboard/referrals/sent/all/${referral.trackingItem.core_referral_id}`}\n              data-bs-toggle=\"tooltip\"\n              title={referral.trackingItem.core_referral_id}\n              data-bs-placement=\"top\"\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              {'...' + referral.trackingItem.core_referral_id.split('-').pop()}\n            </a>\n          ) : null}\n        </td>\n        <td>{expandStatus(referral.ServiceRequest.resource.id) ? '-' : '+'}</td>\n      </tr>\n      <tr\n        className={\n          expandStatus(referral.ServiceRequest.resource.id)\n            ? 'table-light'\n            : 'collapse'\n        }\n        id={'referral' + referral.ServiceRequest.resource.id}\n      >\n        <td colSpan=\"7\">\n          <div className=\"row px-3\">\n            <table className=\"table table-sm align-middle text-start\">\n              <tbody>\n                {referral.trackingItem ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() => showSource(referral.trackingItem)}\n                      >\n                        Task Tracking <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      Referral created in Unite Us{' '}\n                      <a\n                        href={`https://app.uniteustraining.com/dashboard/referrals/sent/all/${referral.trackingItem.core_referral_id}`}\n                        data-bs-toggle=\"tooltip\"\n                        title={referral.trackingItem.core_referral_id}\n                        data-bs-placement=\"top\"\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        {referral.trackingItem.core_referral_id}\n                      </a>\n                    </td>\n                    <td>\n                      <button\n                        className=\"btn btn-sm btn-danger\"\n                        onClick={removeReferral}\n                      >\n                        Remove Referral Link\n                      </button>\n                    </td>\n                  </tr>\n                ) : null}\n                <tr>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() =>\n                        showSource(referral.ServiceRequest.resource)\n                      }\n                    >\n                      {referral.ServiceRequest.resource.resourceType}{' '}\n                      <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td colSpan=\"2\">\n                    Referral was authored on{' '}\n                    <div className=\"btn btn-outline-primary disabled\">\n                      {referral.ServiceRequest.resource.authoredOn}\n                    </div>{' '}\n                    by{' '}\n                    <div\n                      className=\"btn btn-outline-primary\"\n                      onClick={() => showSource(referral.Practitioner.resource)}\n                    >\n                      {referral.ServiceRequest.resource.requester.display}{' '}\n                      <IoOpenOutline />\n                    </div>\n                    .{' '}\n                    {referral.ServiceRequest.resource.orderDetail ? (\n                      <span>\n                        {'Service type is '}\n                        <div className=\"btn btn-outline-primary disabled\">\n                          {referral.ServiceRequest.resource.orderDetail[0].text}\n                        </div>\n                        .\n                      </span>\n                    ) : (\n                      'Service type has not been confirmed yet.'\n                    )}\n                    {referral.ServiceRequest.resource.supportingInfo ? (\n                      <span>\n                        {' '}\n                        Attached is a supporting document of\n                        <div\n                          className=\"btn btn-outline-primary\"\n                          onClick={() =>\n                            showSource(referral.DocumentReference[0])\n                          }\n                        >\n                          {referral.DocumentReference[0].type.text}{' '}\n                          <IoOpenOutline />\n                        </div>\n                      </span>\n                    ) : null}\n                  </td>\n                </tr>\n                <tr>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() => showSource(referral.Task.resource)}\n                    >\n                      {referral.Task.resource.resourceType} <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td>\n                    <span>\n                      Referral status is{' '}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Task?.resource?.status}\n                      </div>\n                      , last modified on{' '}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Task?.resource?.lastModified}\n                      </div>\n                    </span>{' '}\n                    <span>\n                      Recipient is{' '}\n                      <div\n                        className=\"btn btn-outline-primary\"\n                        onClick={() =>\n                          showSource(referral.Organization?.resource)\n                        }\n                      >\n                        {referral.Task?.resource?.owner?.display}{' '}\n                        <IoOpenOutline />\n                      </div>\n                    </span>\n                  </td>\n                  <td>\n                    <button\n                      className=\"btn btn-sm btn-primary\"\n                      onClick={() =>\n                        sendTaskNotification(referral.Task?.resource?.id)\n                      }\n                    >\n                      Send Task Notification\n                    </button>\n                  </td>\n                </tr>\n                {referral.Organization ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() =>\n                          showSource(referral.Organization.resource)\n                        }\n                      >\n                        {referral.Organization.resource.resourceType}{' '}\n                        <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      <span>\n                        Recipient is{' '}\n                        <div className=\"btn btn-outline-primary disabled\">\n                          {referral.Organization.resource.name}\n                        </div>\n                      </span>\n                      {findUUID(referral.Organization.resource) ? (\n                        <span>\n                          Their Unite Us UUID is{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {findUUID(referral.Organization.resource).value}\n                          </div>\n                        </span>\n                      ) : null}\n                    </td>\n                    <td>\n                      {/*                       <button className=\"btn btn-sm btn-primary disabled\">\n                        Look up UU Provider\n                      </button> */}\n                    </td>\n                  </tr>\n                ) : null}\n                {referral.Patient ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() => showSource(referral.Patient.resource)}\n                      >\n                        {referral.Patient.resource.resourceType}{' '}\n                        <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Patient.resource.name[0].family},{' '}\n                        {referral.Patient.resource.name[0].given[0]}\n                      </div>\n                    </td>\n                    <td>\n                      {/*                       <button className=\"btn btn-sm btn-primary disabled\">\n                        Look up UU Client\n                      </button> */}\n                    </td>\n                  </tr>\n                ) : null}\n                {referral.Practitioner ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() =>\n                          showSource(referral.Practitioner.resource)\n                        }\n                      >\n                        {referral.Practitioner.resource.resourceType}{' '}\n                        <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Practitioner.resource.name[0].family},{' '}\n                        {referral.Practitioner.resource.name[0].given[0]}\n                      </div>\n                    </td>\n                    <td>\n                      {/*                       <button className=\"btn btn-sm btn-primary disabled\">\n                        Look up UU User\n                      </button> */}\n                    </td>\n                  </tr>\n                ) : null}\n\n                {referral.Consent?.map((consent, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(consent.resource)}\n                        >\n                          {consent.resource.resourceType} <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          Consent status is{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.status}\n                          </div>\n                          . Scope is{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.scope?.text}\n                          </div>\n                          . Provision period is from\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.provision?.period?.start}\n                          </div>\n                          to\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.provision?.period?.end}\n                          </div>\n                        </span>\n                      </td>\n                      <td>\n                        {/*                         <button className=\"btn btn-sm btn-primary disabled\">\n                          Check UU Consent\n                        </button> */}\n                      </td>\n                    </tr>\n                  );\n                })}\n\n                {referral.DocumentReference?.map((documentReference, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(documentReference)}\n                        >\n                          {documentReference.resourceType} <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          Document type is{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {documentReference.type.text}\n                          </div>\n                          . Document description is{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {documentReference.description}\n                          </div>\n                        </span>\n                      </td>\n                      <td>\n                        {/*                         <button className=\"btn btn-sm btn-primary disabled\">\n                          Check Document Status\n                        </button> */}\n                      </td>\n                    </tr>\n                  );\n                })}\n\n                {referral.Binary?.map((binary, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(binary)}\n                        >\n                          {binary.resourceType} <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td colSpan=\"2\">\n                        <span>\n                          Content type is{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {binary.contentType}\n                          </div>\n                          .\n                        </span>{' '}\n                        <div className=\"btn btn-link\">\n                          <a\n                            download=\"Epic_CRN.pdf\"\n                            href={`data:application/pdf;base64,${binary.data}`}\n                            title=\"Download pdf document\"\n                          >\n                            Click to download PDF file <IoCloudDownloadSharp />\n                          </a>\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n\n                {referral.Communication?.map((communication, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(communication.resource)}\n                        >\n                          {communication.resource.resourceType}{' '}\n                          <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          On{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {communication.resource?.sent}\n                          </div>\n                          , sent from{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {communication.resource?.sender.display}\n                          </div>\n                          to{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {communication.resource?.recipient[0].display}\n                          </div>\n                          .\n                        </span>\n                        {communication.resource.payload ? (\n                          <div>\n                            {' '}\n                            Note message:{' '}\n                            <div className=\"btn btn-outline-primary disabled\">\n                              {communication.resource.payload[0].contentString}\n                            </div>\n                          </div>\n                        ) : (\n                          <span> Note message is empty.</span>\n                        )}\n                        {communication.resource.payload &&\n                        communication.resource.payload[1]?.contentReference ? (\n                          <div>\n                            {' '}\n                            A{' '}\n                            <div\n                              className=\"btn btn-outline-primary\"\n                              onClick={() =>\n                                showSource(referral.DocumentReference[0])\n                              }\n                            >\n                              document <IoOpenOutline />\n                            </div>{' '}\n                            was attached to the communication.\n                          </div>\n                        ) : null}\n                      </td>\n                      <td>\n                        {communication.resource.sender.reference.includes(\n                          'Practitioner/'\n                        ) ? (\n                          <button\n                            className=\"btn btn-sm btn-primary\"\n                            onClick={() =>\n                              sendCommunicationNotification(\n                                communication.resource.id\n                              )\n                            }\n                          >\n                            Send Communication Notification\n                          </button>\n                        ) : (\n                          <button\n                            className=\"btn btn-sm btn-warning\"\n                            onClick={() => showAddNoteWindow(referral)}\n                          >\n                            Add a new note\n                          </button>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </td>\n      </tr>\n    </>\n  );\n}\n\nexport default ReferralSummary;\n","import { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { FaAngleDoubleRight, FaFlagCheckered } from 'react-icons/fa';\nimport { AiOutlineStop } from 'react-icons/ai';\n\nconst StatusSelector = ({\n  showReferralStatus,\n  currentReferralStatus,\n  closeReferralStatusEdit,\n  profileName,\n}) => {\n  const [newReferralStatus, setNewReferralStatus] = useState('');\n  const [rejectReason, setRejectReason] = useState({\n    value: 'Please select a reason ...',\n  });\n  const [rejectReasonNote, setRejectReasonNote] = useState('');\n  const [enforceBusinessRule, setEnforceBusinessRule] = useState(false);\n\n  const closeStatusEdit = () => {\n    setNewReferralStatus('');\n    setRejectReason({ value: 'Please select a reason ...' });\n    setRejectReasonNote('');\n    closeReferralStatusEdit(null);\n  };\n\n  const submitStatusChange = () => {\n    setNewReferralStatus(newReferralStatus);\n    closeReferralStatusEdit({\n      value: newReferralStatus,\n      rejectReason: { reason: rejectReason, note: rejectReasonNote },\n    });\n  };\n\n  const changeStatus = (newStatus) => {\n    console.log('new status is: ', newStatus);\n    setNewReferralStatus(newStatus);\n  };\n\n  const statusEnabled = (status) => {\n    if (!enforceBusinessRule) return true;\n    // if (profileName === \"Logica\") return true;\n\n    switch (status) {\n      case 'requested':\n        if (\n          currentReferralStatus === 'requested' ||\n          currentReferralStatus === 'accepted' ||\n          currentReferralStatus === 'rejected' ||\n          currentReferralStatus === ''\n        )\n          return true;\n        else return false;\n      case 'accepted':\n      case 'rejected':\n        if (\n          currentReferralStatus === 'requested' ||\n          currentReferralStatus === 'accepted' ||\n          currentReferralStatus === 'rejected' ||\n          currentReferralStatus === ''\n        )\n          return true;\n        else return false;\n\n      case 'completed':\n      case 'failed':\n        if (currentReferralStatus === 'in-progress') return true;\n        else return false;\n\n      default:\n        return false;\n    }\n  };\n\n  const rejectReasonOptions = () => {\n    const uuRejectReasons = [\n      {\n        display_name: 'Not Eligible',\n        value: 'Client is not eligible for our services',\n      },\n      {\n        display_name: 'Duplicate',\n        value: 'Duplicate, case already exists in the system',\n      },\n      {\n        display_name: 'No Capacity',\n        value: 'We do not have capacity to serve client',\n      },\n      {\n        display_name: 'Do Not Provide Service',\n        value: 'We do not provide the services requested/needed',\n      },\n      {\n        display_name: 'Unable to Contact Client',\n        value: 'We were unable to contact the client',\n      },\n      { display_name: 'Other', value: 'Other' },\n    ];\n\n    return uuRejectReasons.map((option) => {\n      return <option value={option.value}>{option.display_name}</option>;\n    });\n  };\n\n  const rowColor = (status) => {\n    switch (status) {\n      case 'accepted':\n        return 'primary';\n      case 'in-progress':\n        return 'info';\n      case 'rejected':\n        return 'danger';\n      case 'failed':\n        return 'danger';\n      case 'completed':\n        return 'success';\n      case 'cancelled':\n        return 'danger';\n      case 'requested':\n        return 'secondary';\n      default:\n        return 'dark';\n    }\n  };\n\n  const stageColor = (stage) => {\n    const colorDone = rowColor(newReferralStatus || currentReferralStatus);\n    const colorNotDone = 'table-secondary';\n    let newStage = 1;\n\n    switch (newReferralStatus || currentReferralStatus) {\n      case 'requested':\n        newStage = 1;\n        break;\n      case 'accepted':\n        newStage = 2;\n        break;\n      case 'in-progress':\n        newStage = 3;\n        break;\n      case 'completed':\n        newStage = 4;\n        break;\n      default:\n        newStage = 5;\n    }\n    return newStage < stage ? colorNotDone : 'table-' + colorDone;\n  };\n\n  return (\n    <Modal\n      id=\"referralStatus\"\n      size=\"lg\"\n      show={showReferralStatus}\n      onHide={closeStatusEdit}\n    >\n      <Modal.Header className=\"bg-light\" closeButton>\n        <Modal.Title>Update Referral Status</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"row my-3 text-center\">\n          <div className=\"col-6\">\n            {'Current Stauts: '}\n            <div\n              className={'btn btn-outline-' + rowColor(currentReferralStatus)}\n            >\n              {currentReferralStatus}\n            </div>\n          </div>\n          <div className=\"col-6\">\n            {'New Status    : '}\n            <div\n              className={\n                'btn active btn-outline-' +\n                rowColor(newReferralStatus || currentReferralStatus)\n              }\n            >\n              {newReferralStatus || currentReferralStatus}\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"btn-group mb-2 text-center container-fluid\"\n          role=\"group\"\n          aria-label=\"Referral status selector\"\n          id=\"statusGroup\"\n        >\n          <table className=\"table table-bordered table-sm\">\n            <thead>\n              <tr>\n                <th className={stageColor(1)}>\n                  INITIATE{' '}\n                  <span className=\"float-end\">\n                    <FaAngleDoubleRight />\n                  </span>\n                </th>\n                <th className={stageColor(2)}>\n                  RESPONSE{' '}\n                  <span className=\"float-end\">\n                    <FaAngleDoubleRight />\n                  </span>\n                </th>\n                <th className={stageColor(3)}>\n                  CONFIRM{' '}\n                  <span className=\"float-end\">\n                    <FaAngleDoubleRight />\n                  </span>\n                </th>\n                <th className={stageColor(4)}>\n                  RESOLVE{' '}\n                  <span className=\"float-end\">\n                    <FaFlagCheckered />\n                  </span>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td rowSpan=\"3\" className=\"table-light\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusRequested\"\n                      autoComplete=\"off\"\n                      value=\"requested\"\n                      defaultChecked={currentReferralStatus === 'requested'}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled('requested')}\n                    />\n                    <label\n                      class=\"btn btn-outline-secondary\"\n                      htmlFor=\"statusRequested\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('requested') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      requested <AiOutlineStop className=\"invisible\" />\n                    </label>\n                  </div>\n                </td>\n\n                <td colSpan=\"3\" className=\"table-light\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check btn-block\"\n                      name=\"btnStatus\"\n                      id=\"statusCancelled\"\n                      autoComplete=\"off\"\n                      value=\"cancelled\"\n                      defaultChecked={currentReferralStatus === 'cancelled'}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled('cancelled')}\n                    />\n                    <label\n                      class=\"btn btn-outline-danger\"\n                      htmlFor=\"statusCancelled\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('cancelled') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      cancelled{' '}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                  </div>\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusAccepted\"\n                      autoComplete=\"off\"\n                      value=\"accepted\"\n                      defaultChecked={currentReferralStatus === 'accepted'}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled('accepted')}\n                    />\n                    <label\n                      class=\"btn btn-outline-primary\"\n                      htmlFor=\"statusAccepted\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('accepted') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      accepted <AiOutlineStop className=\"invisible\" />\n                    </label>\n                  </div>\n                </td>\n                <td className=\"table-light\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusInProgress\"\n                      autoComplete=\"off\"\n                      value=\"in-progress\"\n                      defaultChecked={currentReferralStatus === 'in-progress'}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled('in-progress')}\n                    />\n                    <label\n                      class=\"btn btn-outline-info\"\n                      htmlFor=\"statusInProgress\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('in-progress') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      in-progress <AiOutlineStop className=\"invisible\" />\n                    </label>\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusCompleted\"\n                      autoComplete=\"off\"\n                      value=\"completed\"\n                      defaultChecked={currentReferralStatus === 'completed'}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled('completed')}\n                    />\n                    <label\n                      class=\"btn btn-outline-success\"\n                      htmlFor=\"statusCompleted\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('completed') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      completed{' '}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusFailed\"\n                      autoComplete=\"off\"\n                      value=\"failed\"\n                      defaultChecked={currentReferralStatus === 'failed'}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled('failed')}\n                    />\n                    <label\n                      class=\"btn btn-outline-danger\"\n                      htmlFor=\"statusFailed\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('failed') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      failed{' '}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                  </div>\n                </td>\n              </tr>\n\n              <tr>\n                <td colSpan=\"3\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn btn-sm btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusRejected\"\n                      autoComplete=\"off\"\n                      value=\"rejected\"\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      defaultChecked={currentReferralStatus === 'rejected'}\n                      disabled={!statusEnabled('rejected')}\n                    />\n                    <label\n                      class=\"btn btn-outline-danger\"\n                      htmlFor=\"statusRejected\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('rejected') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      rejected{' '}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                    <div\n                      className={\n                        newReferralStatus === 'rejected' ? '' : 'd-none'\n                      }\n                    >\n                      <div className=\"form-group\">\n                        <label className=\"col-form-label\">REJECT REASON</label>\n                        <div>\n                          <select\n                            className=\"form-select\"\n                            value={rejectReason.value}\n                            onChange={(e) =>\n                              setRejectReason({\n                                value: e.target.value,\n                                text: e.target.options[e.target.selectedIndex]\n                                  .text,\n                              })\n                            }\n                          >\n                            <option>Select a reason ...</option>\n                            {rejectReasonOptions()}\n                          </select>\n                        </div>\n                      </div>\n\n                      <div className=\"form-group\">\n                        <label className=\"col-form-label\">NOTE</label>\n                        <div>\n                          <textarea\n                            className=\"form-control\"\n                            rows=\"3\"\n                            cols=\"50\"\n                            placeholder=\"Enter a note for the reject reason\"\n                            value={rejectReasonNote}\n                            onChange={(e) =>\n                              setRejectReasonNote(e.target.value)\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <div className=\"col form-check form-switch mx-2 float-start text-start\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            role=\"button\"\n            id=\"flexSwitchBusinessRule\"\n            checked={enforceBusinessRule}\n            onChange={() => setEnforceBusinessRule(!enforceBusinessRule)}\n          />\n          <label\n            className=\"form-check-label\"\n            role=\"button\"\n            htmlFor=\"flexSwitchBusinessRule\"\n          >\n            Enforce Epic Business Rules\n          </label>\n        </div>\n\n        <Button className=\"col\" variant=\"warning\" onClick={closeStatusEdit}>\n          Cancel\n        </Button>\n        <Button className=\"col\" variant=\"primary\" onClick={submitStatusChange}>\n          Submit\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default StatusSelector;\n","import { useState, useEffect, useRef } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { BiMessage } from 'react-icons/bi';\nimport { TiDeleteOutline } from 'react-icons/ti';\n\nimport {\n  FaAngleDoubleRight,\n  FaAngleDoubleLeft,\n  FaFlagCheckered,\n} from 'react-icons/fa';\nimport { IoOpenOutline, IoCloudDownloadSharp } from 'react-icons/io5';\nimport { CgAttachment } from 'react-icons/cg';\n\nconst AddNote = ({ showAddNote, referral, closeAddNote, baseUrl }) => {\n  const [noteText, setNoteText] = useState('');\n  const [callResponse, setCallResponse] = useState('');\n  const [refreshCount, setRefreshCount] = useState(0);\n  const [showMessageToast, setShowMessageToast] = useState(false);\n  const [communicationList, setCommunicationList] = useState([]);\n  const [waitMessage, setWaitMessage] = useState(\n    'Sending communication note ...'\n  );\n\n  useEffect(() => {\n    setCommunicationList(referral?.Communication);\n    console.log('useEffect cl:', communicationList);\n  }, [referral]);\n\n  useEffect(() => {\n    const updateList = async () => {\n      setWaitMessage('Retriving communcation notes ...');\n      setShowMessageToast(true);\n\n      const url =\n        'https://fhir-crn.uniteustraining.com/rick/mockapi/request/search';\n\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Accept: 'application/json',\n          'x-api-key': 'sfsdfddfdsfsdfs32342343',\n        },\n        body: JSON.stringify({\n          baseUrl: baseUrl,\n          resourceType: 'Communication',\n          queryParams: {\n            'part-of': referral?.Task.resource.id,\n          },\n        }),\n      });\n      const data = await res.json();\n\n      if (data.response?.body?.total > 0) {\n        setCommunicationList(data.response?.body?.entry);\n        referral.Communication = data.response?.body?.entry;\n      }\n\n      setShowMessageToast(false);\n    };\n\n    if (referral?.Task) updateList();\n    setNoteText('');\n    //setCallResponse(\"\");\n  }, [refreshCount]);\n\n  const sendNote = async () => {\n    setWaitMessage('Sending communication note ...');\n    setShowMessageToast(true);\n    const url =\n      'https://fhir-crn.uniteustraining.com/rick/mockapi/communication_out/process';\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343',\n      },\n      body: JSON.stringify({\n        note: noteText,\n        referralId: referral?.trackingItem?.core_referral_id,\n        sentAt: Math.floor(Date.now() / 1000),\n      }),\n    });\n    const data = await res.json();\n    setCallResponse(JSON.stringify(data));\n    setRefreshCount(refreshCount + 1);\n    setShowMessageToast(false);\n    return;\n  };\n\n  const sender = (communication) => {\n    if (communication) {\n      const senderName = communication.resource?.sender?.display;\n      let senderType;\n\n      if (\n        communication.resource?.sender?.reference?.split('/')[0] ===\n        'Organization'\n      )\n        senderType = 'cbo';\n      else senderType = 'ehr';\n      const senderInfo = { name: senderName, type: senderType };\n      return senderInfo;\n    }\n\n    return null;\n  };\n\n  const noteColor = (communication) => {\n    if (sender(communication)?.type === 'ehr') return 'seashell';\n    else return 'aliceblue';\n  };\n\n  const noteAlign = (communication) => {\n    if (sender(communication)?.type === 'ehr') return 'start';\n    else return 'end';\n  };\n\n  const responseTo = (communication) => {\n    const recipients = communication.resource?.recipient;\n    let responseToStr = 'Replied to: ';\n    recipients.forEach((entry) => {\n      responseToStr += entry.display + ', ';\n    });\n    return responseToStr;\n  };\n\n  const closeAddNoteWindow = () => {\n    //setCommunicationList([]);\n    setCallResponse('');\n    closeAddNote();\n  };\n\n  return (\n    <>\n      <Modal\n        id=\"addNote\"\n        size=\"lg\"\n        show={showAddNote}\n        onHide={closeAddNoteWindow}\n      >\n        <Modal.Header className=\"bg-light\" closeButton>\n          <Modal.Title>Referral Communications</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <table className=\"table table-responsive table-hover\">\n            <tbody>\n              {communicationList?.map((entry, index) => (\n                <tr>\n                  <td className=\"p-0\">\n                    <table className=\"table table-borderless m-0 p-0\">\n                      <tbody>\n                        <tr>\n                          <td className=\"text-center text-secondary\">\n                            {entry.resource?.sent}\n                          </td>\n                        </tr>\n\n                        {sender(entry).type === 'cbo' ? (\n                          <tr\n                            className={`text-${noteAlign(\n                              entry\n                            )} text-secondary`}\n                          >\n                            <td className=\"py-0\">{responseTo(entry)}</td>{' '}\n                          </tr>\n                        ) : (\n                          <tr\n                            className={`text-${noteAlign(\n                              entry\n                            )} text-secondary`}\n                          >\n                            <td className=\"py-0\">From: {sender(entry).name}</td>\n                          </tr>\n                        )}\n                        <tr className={`text-${noteAlign(entry)}`}>\n                          <td style={{ backgroundColor: noteColor(entry) }}>\n                            <div\n                              className={`btn mt-0 mx-0 text-start disabled text-body`}\n                              style={{ opacity: 1 }}\n                            >\n                              {entry.resource?.payload\n                                ? entry.resource?.payload[0]?.contentString\n                                : '[empty]'}\n                            </div>\n                            {entry.resource?.payload &&\n                            entry.resource?.payload[1]?.contentReference ? (\n                              <p>\n                                <CgAttachment />\n                                Document attachment\n                              </p>\n                            ) : null}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          {referral?.trackingItem ? (\n            <div className=\"form-group\">\n              <div className=\"d-flex\">\n                <label className=\"col-form-label col-6 vertical-bottom\">\n                  NEW NOTE\n                </label>\n                <div className=\"btn btn-primary col-6\" onClick={sendNote}>\n                  Send\n                </div>\n              </div>\n              <div\n                className={\n                  showMessageToast\n                    ? 'toast bg-warning text-secondary show'\n                    : 'toast'\n                }\n                role=\"alert\"\n                aria-live=\"assertive\"\n                aria-atomic=\"true\"\n                id=\"messageToastModal\"\n              >\n                <div className=\"toast-header\">\n                  <strong className=\"me-auto\">Please Wait ...</strong>\n                </div>\n                <div className=\"toast-body\">\n                  {waitMessage}{' '}\n                  <div className=\"spinner-border text-warning\" role=\"status\">\n                    <span className=\"visually-hidden\">...</span>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <textarea\n                  className=\"form-control\"\n                  rows=\"3\"\n                  cols=\"50\"\n                  placeholder=\"Enter a new note\"\n                  value={noteText}\n                  onChange={(e) => setNoteText(e.target.value)}\n                />\n              </div>\n              {callResponse === '' ? null : (\n                <div className=\"row\">\n                  <div className=\"col-10\">\n                    <pre>{callResponse}</pre>{' '}\n                  </div>\n                  <div className=\"col-2\">\n                    <TiDeleteOutline\n                      calssName=\"col-2\"\n                      onClick={() => {\n                        setCallResponse('');\n                      }}\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : null}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            className=\"col\"\n            variant=\"warning\"\n            onClick={closeAddNoteWindow}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddNote;\n","import EncounterSummary from './EncounterSummary';\nimport CreateReferral from './CreateReferral';\nimport ReferralSummary from './ReferralSummary';\nimport StatusSelector from './StatusSelector';\nimport AddNote from './AddNote';\nimport { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nfunction Referrals({\n  onCreate,\n  referralList,\n  currentEncounter,\n  sendNotificationUU,\n  profileName,\n  updateReferralStatus,\n  baseUrl,\n  sendUUNotification,\n}) {\n  const [showNewReferral, setShowNewReferral] = useState(false);\n  const [showSource, setShowSource] = useState(false);\n  const [showReferralStatus, setShowReferralStatus] = useState(false);\n  const [fullJson, setFullJson] = useState();\n  const [currentReferralStatus, setCurrentReferralStatus] = useState('');\n  //const [newReferralStatus, setNewReferralStatus] = useState(\n  //  currentReferralStatus\n  //);\n  const [editReferralId, setEditReferralId] = useState();\n  const [showAddNote, setShowAddNote] = useState(false);\n  const [currentReferral, setCurrentReferral] = useState();\n\n  const toggleShowNewReferral = () => {\n    setShowNewReferral((showNewReferral) => !showNewReferral);\n  };\n\n  const onCreateReferral = (referral) => {\n    onCreate(referral);\n    toggleShowNewReferral();\n  };\n\n  const showFhirSource = (fullJson, show) => {\n    setFullJson(fullJson);\n    setShowSource(show);\n  };\n\n  const closeWindow = () => setShowSource(false);\n\n  const editReferralStatus = (referralId, currentStatus) => {\n    setShowReferralStatus(true);\n    setEditReferralId(referralId);\n    setCurrentReferralStatus(currentStatus);\n    //setNewReferralStatus(\"\");\n  };\n\n  const closeReferralStatusEdit = (newStatus) => {\n    setShowReferralStatus(false);\n    if (newStatus !== null) {\n      //setNewReferralStatus(newReferralStatus.value);\n      console.log('new status: ', newStatus.value, newStatus.rejectReason);\n      updateReferralStatus(editReferralId, newStatus);\n    } //else setNewReferralStatus(\"\");\n  };\n\n  const showAddNoteWindow = (referral) => {\n    setCurrentReferral(referral);\n    setShowAddNote(true);\n  };\n  const closeAddNote = () => {\n    setShowAddNote(false);\n  };\n\n  return (\n    <div className=\"col-md-9 col-lg-10 px-0\">\n      <div className=\"referrals\">\n        {/*         <EncounterSummary\n          toggleShowNewReferral={toggleShowNewReferral}\n          showNewReferral={showNewReferral}\n          currentEncounter={currentEncounter}\n          sendNotificationUU={sendNotificationUU}\n          profileName={profileName}\n        /> \n        {showNewReferral ? (\n          <CreateReferral\n            onCreate={onCreateReferral}\n            toggleShowNewReferral={toggleShowNewReferral}\n          />\n        ) : null} */}\n        <div className=\"referralList\">\n          {/* <div className=\"h5 py-3\">\n            This encounter has{\" \"}\n            {referralList.length > 1\n              ? referralList.length + \" referrals.\"\n              : referralList.length === 1\n              ? \" 1 referral.\"\n              : \" no referrals.\"}\n          </div> */}\n\n          <EncounterSummary\n            toggleShowNewReferral={toggleShowNewReferral}\n            showNewReferral={showNewReferral}\n            currentEncounter={currentEncounter}\n            sendNotificationUU={sendNotificationUU}\n            profileName={profileName}\n          />\n          {showNewReferral ? (\n            <CreateReferral\n              onCreate={onCreateReferral}\n              toggleShowNewReferral={toggleShowNewReferral}\n            />\n          ) : null}\n          {referralList.length > 0 ? (\n            <div className=\"table-responsive\">\n              <table className=\"table table-hover\">\n                <thead>\n                  <tr>\n                    <th>DATE SENT</th>\n                    <th>STATUS</th>\n                    <th>SERVICE TYPE</th>\n                    <th>RECEIPIENT</th>\n                    <th>NOTES</th>\n                    <th>UU REFERRAL</th>\n                    <th>+/-</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {referralList.map((referral, index) => (\n                    <ReferralSummary\n                      key={index}\n                      referral={referral}\n                      showFhirSource={showFhirSource}\n                      editReferralStatus={editReferralStatus}\n                      showAddNoteWindow={showAddNoteWindow}\n                      baseUrl={baseUrl}\n                      sendUUNotification={sendUUNotification}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : null}\n        </div>\n      </div>\n\n      <Modal id=\"fhirSource\" size=\"lg\" show={showSource} onHide={closeWindow}>\n        <Modal.Header className=\"bg-light\" closeButton>\n          <Modal.Title>\n            {fullJson?.resourceType} : {fullJson?.id}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <pre id=\"json\">{JSON.stringify(fullJson, undefined, 2)}</pre>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"warning\" onClick={closeWindow}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <StatusSelector\n        showReferralStatus={showReferralStatus}\n        currentReferralStatus={currentReferralStatus}\n        closeReferralStatusEdit={closeReferralStatusEdit}\n        profileName={profileName}\n      ></StatusSelector>\n\n      <AddNote\n        showAddNote={showAddNote}\n        referral={currentReferral}\n        communicationList={currentReferral?.Communication}\n        closeAddNote={closeAddNote}\n        baseUrl={baseUrl}\n      ></AddNote>\n    </div>\n  );\n}\n\nexport default Referrals;\n","export const Profile_Epic = {\n  name: 'Epic',\n\n  defaultPatient: {\n    firstName: 'Calvin',\n    lastName: 'Ccm',\n    gender: 'Male',\n    dob: '01/01/1990',\n    mrn: '203724',\n    fhirId: 'e4ikKcC2Rp3EsZQh8Ac6C5A3',\n    uuid: 'b5318891-3dc8-426a-af50-531e106ad1a1',\n  },\n\n  defaultProvider: {\n    firstName: 'Case',\n    lastName: 'Manager',\n    fhirId: 'eaToFIkaJ32mO4K002q3BLw3',\n    uuid: '94e5f7ee-1425-42bc-8833-3474b687b125',\n    groupId: 'bf4aa373-81eb-4da5-9980-2d3e51c57b3c',\n    networkId: '145ca925-ba86-490d-b404-35f4fe5ada66',\n  },\n\n  defaultEncounter: 'eEDcHpsgsD0Pv4Ih8HnfOxA3', //\"enZf6GWN2rMGQWF1rqqDgNg3\",\n  defaultDocumentReference: 'e1.cnazaNgltIElLYGLL4Sg3',\n  defaultBaseUrl:\n    'https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4',\n  defaultNotificationUrl:\n    'https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService',\n  accessToken:\n    'e2a4575581b3f57203e182b0b1f3dcea479baecd31bef125cc57f6dd4b8905ac',\n};\n\nexport const Profile_Epic_2 = {\n  name: 'Epic2',\n\n  defaultPatient: {\n    firstName: 'Beverly',\n    lastName: 'Ccm',\n    gender: 'Female',\n    dob: '01/01/1940',\n    mrn: '203722',\n    fhirId: 'egHmZUd91rLItB1AqGV49Pg3',\n    uuid: 'b5318891-3dc8-426a-af50-531e106ad1a1',\n  },\n\n  defaultProvider: {\n    firstName: 'Case',\n    lastName: 'Manager',\n    fhirId: 'eaToFIkaJ32mO4K002q3BLw3',\n    uuid: '94e5f7ee-1425-42bc-8833-3474b687b125',\n    groupId: 'bf4aa373-81eb-4da5-9980-2d3e51c57b3c',\n    networkId: '145ca925-ba86-490d-b404-35f4fe5ada66',\n  },\n\n  defaultEncounter: 'eFBT3k94CLm3fCPMNlKH2DQ3', //\"enZf6GWN2rMGQWF1rqqDgNg3\",\n  defaultDocumentReference: 'e.-1q0eXQDEZ.9mNdXwVjYA3',\n  defaultBaseUrl:\n    'https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4',\n  defaultNotificationUrl:\n    'https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService',\n  accessToken:\n    'e2a4575581b3f57203e182b0b1f3dcea479baecd31bef125cc57f6dd4b8905ac',\n};\n\nexport const Profile_Logica = {\n  name: 'Logica',\n\n  defaultPatient: {\n    firstName: 'Beverly',\n    lastName: 'Ccm',\n    gender: 'Female',\n    dob: '01/01/1940',\n    mrn: '203722',\n    fhirId: '14730',\n    uuid: 'b5318891-3dc8-426a-af50-531e106ad1a1',\n  },\n  defaultProvider: {\n    firstName: 'Demo',\n    lastName: 'Provider',\n    fhirId: '14734',\n    uuid: '94e5f7ee-1425-42bc-8833-3474b687b125',\n    groupId: 'bf4aa373-81eb-4da5-9980-2d3e51c57b3c',\n    networkId: '145ca925-ba86-490d-b404-35f4fe5ada66',\n  },\n\n  defaultEncounter: '14801',\n  defaultDocumentReference: '14740',\n\n  defaultBaseUrl: 'https://api.logicahealth.org/uufhircrn/open',\n\n  defaultNotificationUrl:\n    'https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService',\n  accessToken: '',\n};\n","import './App.css';\nimport Header from './components/Header';\nimport Encounters from './components/Encounters';\nimport Referrals from './components/Referrals';\nimport { useState, useEffect } from 'react';\nimport {\n  Profile_Epic,\n  Profile_Epic_2,\n  Profile_Logica,\n} from './components/Profiles';\n\nfunction App() {\n  const defaultProfile = Profile_Epic;\n  const defaultProfileName = defaultProfile.name;\n  const [currentProfileName, setCurrentProfileName] =\n    useState(defaultProfileName);\n  //const [profile, setProfile] = useState(defaultProfile);\n  const [patient, setPatient] = useState(defaultProfile.defaultPatient);\n  const [provider, setProvider] = useState(defaultProfile.defaultProvider);\n  const [currentEncounter, setCurrentEncounter] = useState(\n    defaultProfile.defaultEncounter\n  );\n  const [accessToken, setAccessToken] = useState(defaultProfile.access_token);\n  const [baseUrl, setBaseUrl] = useState(defaultProfile.defaultBaseUrl);\n  const [notificationUrl, setNotificationUrl] = useState(\n    defaultProfile.defaultNotificationUrl\n  );\n  const [referrals, setReferrals] = useState([]);\n  const [encounters, setEncounters] = useState([]);\n\n  const [sampleDocumentReference, setSampleDocumentReference] = useState('');\n\n  const defaultToastMessage = 'Retrieving FHIR resources ... ';\n  const [toastMessage, setToastMessage] = useState(defaultToastMessage);\n  const [showMessageToast, setShowMessageToast] = useState(true);\n  const toggleShowMessageToast = () => setShowMessageToast(!showMessageToast);\n\n  const [progress, setProgress] = useState('0%');\n\n  const switchProfile = async (profileName) => {\n    //if (profileName === currentProfileName) return\n    setProgress('0%');\n    setToastMessage(defaultToastMessage);\n    setShowMessageToast(true);\n\n    console.log('Switch to profile: ', profileName);\n    setCurrentProfileName(profileName);\n    let newProfile; //'= profileName === \"Logica\" ? Profile_Logica : Profile_Epic;\n    switch (profileName) {\n      case 'Logica':\n        newProfile = Profile_Logica;\n        break;\n      case 'Epic2':\n        newProfile = Profile_Epic_2;\n        break;\n      default:\n        newProfile = Profile_Epic;\n    }\n    setPatient(newProfile.defaultPatient);\n    setProvider(newProfile.defaultProvider);\n    setBaseUrl(newProfile.defaultBaseUrl);\n    setNotificationUrl(newProfile.defaultNotificationUrl);\n    if (newProfile.name === 'Logica') {\n      setAccessToken(newProfile.accessToken);\n    } else {\n      let token = await getAccessToken();\n      setAccessToken(token);\n    }\n\n    setShowMessageToast(false);\n    setProgress('0%');\n    //setToastMessage(\"\");\n  };\n\n  const refreshProfileSettings = async () => {\n    const encounterList = await getEncounters(patient.fhirId, baseUrl);\n    if (encounterList?.length > 0) {\n      await changeCurrentEncounter(encounterList[0].resource.id, baseUrl);\n    }\n  };\n\n  // Create a referral\n  const createReferral = async (referral) => {\n    setProgress('0%');\n    setToastMessage('Sending create requests ... ');\n    setShowMessageToast(true);\n\n    console.log('create referral: ', referral);\n    const nowISO = new Date().toISOString();\n\n    // Create ServiceRequest\n    let url = baseUrl + '/ServiceRequest';\n    let resource = {\n      resourceType: 'ServiceRequest',\n      status: 'active',\n      intent: 'plan',\n      category: [\n        {\n          coding: [\n            {\n              system: 'http://snomed.info/sct',\n              code: '307835004',\n              display: 'Referral by service',\n            },\n          ],\n          text: 'Referral by service',\n        },\n      ],\n      priority: 'routine',\n      subject: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + ', ' + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      authoredOn: nowISO,\n      requester: [\n        {\n          reference: `Practitioner/${provider.fhirId}`,\n          display: provider.firstName + ' ' + provider.lastName,\n        },\n      ],\n      /*       orderDetail: {\n        text: referral.serviceType.text,\n        coding: [\n          {\n            system: 'Unite Us',\n            code: referral.serviceType.value,\n            display: referral.serviceType.text,\n          },\n        ],\n      }, */\n    };\n\n    if (referral.attachDocument && sampleDocumentReference.length > 0) {\n      resource.supportingInfo = [\n        {\n          reference: `DocumentReference/${sampleDocumentReference}`,\n        },\n      ];\n    }\n\n    let res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(resource),\n    });\n\n    let data = await res.json();\n    let newServiceRequestId = data.id;\n    console.log('server request id: ', newServiceRequestId);\n\n    // Create Task\n    url = baseUrl + '/Task';\n    resource = {\n      resourceType: 'Task',\n      basedOn: [\n        {\n          reference: `ServiceRequest/${newServiceRequestId}`,\n        },\n      ],\n      status: 'requested',\n      intent: 'plan',\n      priority: 'routine',\n      for: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + ', ' + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      authoredOn: nowISO,\n      lastModified: nowISO,\n      requester: [\n        {\n          reference: `Practitioner/${provider.fhirId}`,\n          display: provider.firstName + ' ' + provider.lastName,\n        },\n      ],\n      // description:\n      //   referral.description +\n      //   \"/n referred to : \" +\n      //   referral.referredToGroupIds.text +\n      //   \" [\" +\n      //   referral.referredToGroupIds.value +\n      //   \"]\",\n      owner: {\n        reference: `Organization/${referral.referredToGroupIds.value}`,\n        display: referral.referredToGroupIds.text,\n      },\n    };\n\n    setProgress('5%');\n\n    res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(resource),\n    });\n\n    data = await res.json();\n    let newTaskId = data.id;\n    console.log('Task id: ', newTaskId);\n\n    // Create initial Communication\n    url = baseUrl + '/Communication';\n    resource = {\n      resourceType: 'Communication',\n      basedOn: [\n        {\n          reference: `ServiceRequest/${newServiceRequestId}`,\n        },\n      ],\n      partOf: [\n        {\n          reference: `Task/${newTaskId}`,\n        },\n      ],\n      status: 'in-progress',\n      subject: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + ', ' + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      sent: nowISO,\n      recipient: [\n        {\n          reference: `Organization/${referral.referredToGroupIds.value}`,\n          display: referral.referredToGroupIds.text,\n        },\n      ],\n      sender: {\n        reference: `Practitioner/${provider.fhirId}`,\n        display: provider.firstName + ' ' + provider.lastName,\n      },\n    };\n\n    if (referral.description.length > 0) {\n      resource.payload = [\n        {\n          contentString: referral.description,\n        },\n      ];\n    }\n\n    if (referral.attachDocument && sampleDocumentReference.length > 0) {\n      resource.payload = [\n        ...resource.payload,\n        {\n          contentReference: {\n            reference: `DocumentReference/${sampleDocumentReference}`,\n          },\n        },\n      ];\n    }\n\n    res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(resource),\n    });\n\n    data = await res.json();\n    let newCommunicationId = data.id;\n    console.log('Communication id: ', newCommunicationId);\n\n    await getReferrals();\n\n    setProgress('100%');\n    setShowMessageToast(false);\n  };\n\n  const fetchReferrals = async (\n    encounterId = currentEncounter,\n    referralBaseUrl = baseUrl\n  ) => {\n    // fetching Task + ServiceRequest\n    //setToastMessage(\"Fetching FHIR resources: \\n Tasks ... \\n ServiceRequests ... \");\n    setToastMessage(defaultToastMessage);\n    setProgress('10%');\n\n    const url =\n      referralBaseUrl +\n      '/Task?encounter=' +\n      encounterId +\n      '&_include=Task%3Apatient&_include=Task%3Aencounter&_include=Task%3Arequester&_include=Task%3A' +\n      'based-on' + //(currentProfileName === \"Epic\" ? \"basedon\" : \"based-on\") + \"%3AServiceRequest\" +\n      '&_include=Task%3Aowner%3AOrganization';\n\n    const res = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        Authorization: accessToken?.length > 0 ? 'bearer ' + accessToken : '',\n      },\n    });\n    const data = await res.json();\n    let entryList = data.total === 0 ? [] : data.entry;\n    if (!entryList) return [];\n    console.log('Task bundle received: ', entryList);\n\n    // //_include works at Epic, no need to fetch ServiceRequest seperatedly\n    // const url2 = baseUrl + \"/ServiceRequest?encounter=\" + encounterId;\n    // const res2 = await fetch(url2, {\n    //   method: \"GET\",\n    //   headers: {\n    //     \"Content-type\": \"application/json\",\n    //     Accept: \"application/json\",\n    //     Authorization: accessToken.length > 0 ? \"bearer \" + accessToken : \"\",\n    //   },\n    // });\n    // const data2 = await res2.json();\n    // let entryList2 = data2.total === 0 ? [] : data2.entry;\n    // entryList = entryList.concat(entryList2);\n\n    //filter ServiceRequest and Task\n    // if (entryList.length > 0) {\n    //   entryList = entryList.filter((entry) => {\n    //     return (\n    //       entry.resource.resourceType === \"ServiceRequest\" ||\n    //       entry.resource.resourceType === \"Task\"\n    //     );\n    //   });\n    // }\n\n    // Take all the Task\n    let referralList = [];\n    entryList.forEach((entry, index) => {\n      if (entry.resource.resourceType === 'Task') {\n        let referral = {\n          id: 'Task/' + entry.resource.id,\n          Task: entry,\n        };\n        referralList.push(referral);\n      }\n    });\n\n    // Group the other resources with the Task\n    referralList.forEach((referral, index) => {\n      const resource = referral?.Task?.resource;\n      if (!resource) return;\n\n      const patientId = resource.for?.reference;\n      const serviceRequestId = resource.basedOn[0].reference;\n      const practitionerId = resource.requester?.reference;\n      const organizationId = resource.owner?.reference;\n\n      entryList.forEach((entry, index) => {\n        let entryId = entry.resource.id;\n        switch (entry.resource.resourceType) {\n          case 'ServiceRequest': {\n            if (serviceRequestId === `ServiceRequest/${entryId}`)\n              referral.ServiceRequest = entry;\n            break;\n          }\n          case 'Patient': {\n            if (patientId === `Patient/${entryId}`) referral.Patient = entry;\n            break;\n          }\n          case 'Organization': {\n            if (organizationId === `Organization/${entryId}`)\n              referral.Organization = entry;\n            break;\n          }\n          case 'Practitioner': {\n            if (practitionerId === `Practitioner/${entryId}`)\n              referral.Practitioner = entry;\n            break;\n          }\n          default:\n        }\n      });\n    });\n\n    // Fetch Communications for each Task\n    //setToastMessage((a) => { return a + \"\\n Communications ... \"});\n    setProgress('40%');\n    for (let referral of referralList) {\n      const referralId = referral?.Task?.resource?.id;\n      const communications = await fetchCommunications(referralId);\n      referral.Communication = communications.entry;\n    }\n\n    // Fetch DocumentReferences for each ServiceRequest\n    //setToastMessage((a) => { return a + \"\\n DocumentReferences ... \"});\n    setProgress('70%');\n    for (let referral of referralList) {\n      const documentReferences = await fetchDocumentReferences(referral);\n      if (documentReferences?.length > 0) {\n        referral.DocumentReference = documentReferences;\n        setSampleDocumentReference(referral.DocumentReference[0].id);\n        console.log('documentReference', referral.DocumentReference);\n        console.log('sampleDocumentReference', sampleDocumentReference);\n      }\n    }\n\n    // Fetch Binaries for all DocumentReferences\n    //setToastMessage((a) => { return a + \"\\nBinaries ... \"});\n    setProgress('85%');\n    for (let referral of referralList) {\n      if (referral.DocumentReference?.length > 0) {\n        const binaryList = await fetchBinaries(referral.DocumentReference);\n        if (binaryList?.length > 0) {\n          referral.Binary = binaryList;\n        }\n      }\n    }\n\n    setProgress('95%');\n    // look up referral UUID in AWS DDB\n    for (let referral of referralList) {\n      if (referral.Task?.resource?.id) {\n        const trackingItem = await lookupUUReferralId(\n          `${baseUrl}/Task/${referral.Task?.resource?.id}`\n        );\n        if (trackingItem) referral.trackingItem = trackingItem;\n      }\n    }\n\n    //referralList = referralList.filter((entry) => {\n    //  return entry.Task;\n    //});\n\n    // Fetch Consents\n    //if (currentProfileName === \"Epic\") {\n    //setToastMessage((a) => { return a + \"\\n Consents ... \"});\n    const consentList = await fetchConsents();\n    if (consentList?.length > 0) {\n      referralList.forEach((entry, index) => {\n        entry.Consent = consentList;\n      });\n    }\n    //}\n\n    console.log('referral list', referralList);\n    referralList.sort((a, b) => {\n      const timeA = new Date(a.ServiceRequest.resource.authoredOn).getTime();\n      const timeB = new Date(b.ServiceRequest.resource.authoredOn).getTime();\n      return timeB - timeA;\n    });\n\n    setProgress('100%');\n    return referralList;\n  };\n\n  const fetchEncounters = async (\n    patientId = patient.fhirId,\n    encounterBaseUrl = baseUrl\n  ) => {\n    const url = encounterBaseUrl + '/Encounter?patient=' + patientId;\n    const res = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        Authorization:\n          accessToken?.length > 0 && currentProfileName !== 'Logica'\n            ? 'bearer ' + accessToken\n            : '',\n      },\n    });\n    const data = await res.json();\n\n    const encounterList = data.total > 0 ? data.entry : [];\n\n    encounterList.sort((a, b) => {\n      const timeA = new Date(a.resource?.period?.start).getTime();\n      const timeB = new Date(b.resource?.period?.start).getTime();\n      return timeB - timeA;\n    });\n    console.log('encounter', encounterList);\n    return encounterList;\n  };\n\n  // Fetch Communications for a Task\n  const fetchCommunications = async (taskId) => {\n    const url = baseUrl + '/Communication?part-of=' + taskId;\n\n    const res = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        Authorization: accessToken?.length > 0 ? 'bearer ' + accessToken : '',\n      },\n    });\n    const data = await res.json();\n    console.log('communications: ', data);\n    return data;\n  };\n\n  // Fetch DocumentReferences for a ServiceRequest\n  const fetchDocumentReferences = async (referral) => {\n    const documentList = [];\n    const supportingInfo = referral?.ServiceRequest?.resource?.supportingInfo;\n\n    if (!supportingInfo) return documentList;\n\n    for (let entry of supportingInfo) {\n      const url = baseUrl + '/' + entry.reference;\n      const res = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json',\n          Accept: 'application/json',\n          Authorization: accessToken?.length > 0 ? 'bearer ' + accessToken : '',\n        },\n      });\n      const data = await res.json();\n      console.log('documentReference: ', data);\n      if (data?.resourceType === 'DocumentReference') documentList.push(data);\n    }\n\n    return documentList;\n  };\n\n  // Fetch DocumentReferences for a ServiceRequest\n  const fetchBinaries = async (documentReferenceList) => {\n    const binaryList = [];\n\n    if (!documentReferenceList) return binaryList;\n\n    for (let entry of documentReferenceList) {\n      const url = baseUrl + '/' + entry.content[0]?.attachment?.url;\n      const res = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json',\n          Accept: 'application/fhir+json',\n          Authorization: accessToken?.length > 0 ? 'bearer ' + accessToken : '',\n        },\n      });\n      const data = await res.json();\n      if (data?.resourceType === 'Binary') {\n        binaryList.push(data);\n      }\n    }\n\n    return binaryList;\n  };\n\n  // Fetch Consent for a Patient\n  const fetchConsents = async (\n    patientFhirId = patient.fhirId,\n    category = currentProfileName === 'Logica'\n      ? '64292-6'\n      : 'http://loinc.org|64292-6',\n    status = 'active'\n  ) => {\n    const url = `${baseUrl}/Consent?patient=${patientFhirId}&category=${category}&status=${status}`;\n    const res = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        Authorization: accessToken?.length > 0 ? 'bearer ' + accessToken : '',\n      },\n    });\n    const data = await res.json();\n    console.log('consent: ', data);\n    return data.entry;\n  };\n\n  const lookupUUReferralId = async (fhirUrl) => {\n    const url =\n      'https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/resource_tracking/read';\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343',\n      },\n      body: JSON.stringify({\n        full_url: fhirUrl,\n      }),\n    });\n    const data = await res.json();\n    const item = data.response?.item;\n    console.log('Found item: ', item);\n    return item;\n  };\n\n  const changeCurrentEncounter = async (encounterSelected, currentBaseUrl) => {\n    //if (encounterSelected === currentEncounter) return;\n    setProgress('0%');\n    setToastMessage(defaultToastMessage);\n    setShowMessageToast(true);\n\n    setCurrentEncounter(encounterSelected);\n    await getReferrals(encounterSelected, currentBaseUrl);\n\n    setShowMessageToast(false);\n    setProgress('0%');\n    //setToastMessage(\"\");\n\n    return;\n  };\n\n  const getReferrals = async (encounterSelected, referralBaseUrl) => {\n    const data = await fetchReferrals(encounterSelected, referralBaseUrl);\n    setReferrals(data);\n  };\n\n  const getEncounters = async (patientId, encounterBaseUrl) => {\n    setProgress('0%');\n    setShowMessageToast(true);\n\n    const data = await fetchEncounters(patientId, encounterBaseUrl);\n    setEncounters(data);\n\n    setShowMessageToast(false);\n    setProgress('0%');\n    //setToastMessage(\"\");\n\n    return data;\n  };\n\n  const sendUUNotification = async (fhirId, type) => {\n    setToastMessage(`Sending ${type} notification to Unite Us ... `);\n    setProgress('25%');\n    setShowMessageToast(true);\n\n    const notification = {\n      resourceType: 'Bundle',\n      type: 'Event',\n      entry: [\n        {\n          fullUrl: baseUrl + '/' + type + '/' + fhirId,\n        },\n      ],\n    };\n    const url =\n      'https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService';\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343',\n      },\n      body: JSON.stringify(notification),\n    });\n\n    setProgress('80%');\n\n    const data = await res.json();\n\n    console.log('notification response: ', data);\n    setProgress('100%');\n    setToastMessage(data.statusCode + ': ' + data.message);\n    setProgress('hide');\n\n    return data;\n  };\n\n  /* const sendCommunicationNotification = async (fhirId) => {\n    setToastMessage('Sending communication notification to Unite Us ... ');\n    setProgress('25%');\n    setShowMessageToast(true);\n\n    const notification = {\n      resourceType: 'Bundle',\n      type: 'Event',\n      entry: [\n        {\n          fullUrl: baseUrl + '/Communication/' + fhirId,\n        },\n      ],\n    };\n    const url =\n      'https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService';\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343',\n      },\n      body: JSON.stringify(notification),\n    });\n\n    setProgress('80%');\n\n    const data = await res.json();\n\n    console.log('notification response: ', data);\n    setProgress('100%');\n    setToastMessage(data.statusCode + ': ' + data.message);\n    setProgress('hide');\n\n    return data;\n  }; */\n\n  const sendNotificationUU = async () => {\n    setToastMessage('Sending encounter notification to Unite Us ... ');\n    setProgress('25%');\n    setShowMessageToast(true);\n\n    const url = notificationUrl;\n    const notification = {\n      resourceType: 'Bundle',\n      type: 'Event',\n      entry: [\n        {\n          fullUrl: baseUrl + '/Encounter/' + currentEncounter,\n        },\n      ],\n    };\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343', //\"wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03\",\n      },\n      body: JSON.stringify(notification),\n    });\n    setProgress('80%');\n    const data = await res.json();\n    console.log('notification response: ', data);\n    setProgress('100%');\n    setToastMessage(data.statusCode + ': ' + data.message);\n    setProgress('hide');\n    return data;\n  };\n\n  const getAccessToken = async () => {\n    const url =\n      'https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/authentication/token';\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343', //\"wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03\",\n      },\n      body: JSON.stringify({\n        privateKey: null,\n      }),\n    });\n    const data = await res.json();\n    const token = data.body['access_token'];\n    console.log('access token ', token);\n    return token;\n  };\n\n  const updateReferralStatus = async (taskFhirId, newStatus) => {\n    console.log('new status: ', newStatus);\n    setProgress('0%');\n    setToastMessage('Updating Task Status ...');\n    setShowMessageToast(true);\n\n    // fetch the Task first\n    let url =\n      'https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/request/read';\n    let res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343',\n      },\n      body: JSON.stringify({\n        baseUrl: baseUrl,\n        resourceType: 'Task',\n        resourceId: taskFhirId,\n      }),\n    });\n    let data = await res.json();\n    let task = data.response.body;\n    let headers = data.response.headers;\n    let eTag =\n      currentProfileName === 'Logica'\n        ? headers['etag'][0]\n        : headers['e-tag'][0];\n    console.log('task: ', task);\n    console.log('headers', headers);\n\n    setProgress('5%');\n    // update status and match header\n    task.status = newStatus.value;\n    let epicCode = mapToEpicCode(newStatus.rejectReason.reason.text);\n    if (newStatus.value === 'rejected') {\n      task.statusReason = {\n        coding: [\n          {\n            system:\n              currentProfileName === 'Logica'\n                ? 'HTTPS://UNITEUS.COM/IO/STRUCTUREDEFINITION/STATUS-REASON'\n                : 'urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025',\n            code: epicCode.code,\n            display: epicCode.display,\n          },\n        ],\n        text: `${newStatus.rejectReason.reason.value}. ${newStatus.rejectReason.note}`,\n      };\n    }\n    console.log('new task: ', task);\n\n    // send Task update requester\n    url =\n      'https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/request/update';\n    res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343',\n      },\n      body: JSON.stringify({\n        baseUrl: baseUrl,\n        resourceType: 'Task',\n        resourceId: taskFhirId,\n        etag: eTag,\n        resource: task,\n      }),\n    });\n\n    setProgress('10%');\n    setToastMessage('Retrieving FHIR Resources ...');\n    await getReferrals(currentEncounter, baseUrl);\n    setShowMessageToast(false);\n    setProgress('0%');\n    return;\n  };\n\n  const mapToEpicCode = (uuCode) => {\n    switch (uuCode) {\n      case 'Not Eligible':\n        return {\n          system: 'urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025',\n          code: '104',\n          display:\n            'Patient does not meet the level of care required for admission',\n        };\n      case 'No Capacity':\n        return {\n          system: 'urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025',\n          code: '101',\n          display: 'Facility Full',\n        };\n      case 'Do Not Provide Service':\n        return {\n          system: 'urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025',\n          code: '103',\n          display: \"Facility cannot provide for patient's needs\",\n        };\n      case 'Duplicate':\n      case 'Unable to Contact Client':\n      case 'Other':\n      default:\n        return {\n          system: 'urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025',\n          code: '99',\n          display: 'Other (Comment)',\n        };\n    }\n  };\n\n  useEffect(() => {\n    const setProfile = async (profileName) => {\n      await switchProfile(profileName);\n    };\n\n    setProfile(defaultProfileName);\n  }, []);\n\n  useEffect(() => {\n    const updateFhir = async () => {\n      await refreshProfileSettings();\n    };\n\n    updateFhir();\n  }, [accessToken]);\n\n  return (\n    <div className=\"App\">\n      <Header\n        patient={patient}\n        provider={provider}\n        profileName={currentProfileName}\n        switchProfile={switchProfile}\n      />\n\n      <div\n        className={\n          showMessageToast ? 'toast bg-warning text-secondary show' : 'toast'\n        }\n        role=\"alert\"\n        aria-live=\"assertive\"\n        aria-atomic=\"true\"\n        id=\"messageToast\"\n      >\n        <div className=\"toast-header\">\n          <strong className=\"me-auto\">Please Wait ...</strong>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"messageToast\"\n            aria-label=\"Close\"\n            onClick={() => {\n              setShowMessageToast(false);\n            }}\n          ></button>\n        </div>\n        <div className=\"toast-body\">\n          {toastMessage}\n          {progress === 'hide' ? null : (\n            <>\n              <div className=\"spinner-border text-warning\" role=\"status\">\n                <span className=\"visually-hidden\">...</span>\n              </div>\n              <div className=\"progress my-2\">\n                <div\n                  className=\"progress-bar bg-warning progress-bar-striped progress-bar-animated\"\n                  role=\"progressbar\"\n                  style={{ width: progress }}\n                  aria-valuenow=\"0\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n\n      <div className=\"container-fluid px-0\">\n        <div className=\"row mt-0 mx-0\">\n          <Encounters\n            encounterList={encounters}\n            currentEncounter={currentEncounter}\n            changeCurrentEncounter={changeCurrentEncounter}\n            refreshEncounters={getEncounters}\n          />\n          <Referrals\n            onCreate={createReferral}\n            referralList={referrals}\n            currentEncounter={currentEncounter}\n            sendNotificationUU={sendNotificationUU}\n            profileName={currentProfileName}\n            updateReferralStatus={updateReferralStatus}\n            baseUrl={baseUrl}\n            sendUUNotification={sendUUNotification}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}