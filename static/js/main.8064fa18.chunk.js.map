{"version":3,"sources":["components/Patient.js","components/Provider.js","components/ProfileSelector.js","components/Header.js","components/Encounters.js","components/EncounterSummary.js","components/CreateReferral.js","components/ReferralSummary.js","components/Referrals.js","components/Profiles.js","App.js","reportWebVitals.js","index.js"],"names":["Patient","patient","className","style","color","firstName","lastName","dob","gender","mrn","fhirId","Provider","provider","uuid","ProfileSelector","profileName","switchProfile","role","aria-label","type","name","id","autoComplete","defaultChecked","onClick","class","htmlFor","Header","title","defaultProps","Encounters","encounterList","currentEncounter","changeCurrentEncounter","refreshEncounters","console","log","length","map","encounter","index","selected","resource","eClassName","visible","encounterSelected","href","fullUrl","period","start","split","display","EncounterSummary","toggleShowNewReferral","showNewReferral","sendNotificationUU","toggle","disabled","CreateReferral","onCreate","useState","referredToGroupIds","setReferredToGroupIds","referredFromGroupId","setReferredFromGroupId","networkId","setNetworkId","serviceType","setServiceType","description","setDescription","onSubmit","e","preventDefault","alert","placeholder","readOnly","value","onChange","target","text","options","selectedIndex","rows","cols","ReferralSummary","referral","show","setShow","fullJson","setFullJson","showSource","closeWindow","scoope","ServiceRequest","resourceType","Task","Practitioner","Modal","size","onHide","closeButton","Title","Body","JSON","stringify","undefined","Footer","Button","variant","Referrals","referralList","setShowNewReferral","Profile_Epic","defaultPatient","defaultProvider","groupId","defaultEncounter","defaultBaseUrl","defaultNotificationUrl","accessToken","Profile_Logica","App","defaultProfile","defaultProfileName","currentProfileName","setCurrentProfileName","setPatient","setProvider","setCurrentEncounter","access_token","setAccessToken","baseUrl","setBaseUrl","notificationUrl","setNotificationUrl","referrals","setReferrals","encounters","setEncounters","a","newProfile","getAccessToken","token","refreshProfileSettings","getEncounters","createReferral","nowISO","Date","toISOString","url","status","intent","category","coding","system","code","priority","subject","reference","authoredOn","requester","orderDetail","fetch","method","headers","body","res","json","data","newId","basedOn","for","lastModified","owner","identifier","use","getReferrals","fetchReferrals","encounterId","referralBaseUrl","Accept","Authorization","entryList","total","entry","forEach","push","patientId","serviceRequestId","practitionerId","organizationId","entryId","Organization","sort","b","timeA","getTime","fetchEncounters","encounterBaseUrl","currentBaseUrl","notification","privateKey","useEffect","setProfile","updateFhir","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8064fa18.chunk.js","sourcesContent":["import { FaRegUser } from \"react-icons/fa\";\n\nconst Patient = ({patient}) => {\n  return (\n    <div className=\"p-2\">\n      <h4 style = {{ color: \"yellow\"}}>\n          <FaRegUser /> {patient.firstName} {patient.lastName}\n      </h4>\n      <h6>\n      <span className='badge badge-light'>DOB</span> : {patient.dob}\n      <span>    </span> \n      <span className='badge badge-light'>Gender</span> : {patient.gender}\n      </h6>\n      <h6><span className='badge badge-light'>MRN</span> : {patient.mrn}</h6>\n      <h6><span className='badge badge-light'>FHIR ID</span> : {patient.fhirId}</h6>\n    </div>\n  );\n};\n\nexport default Patient;\n","import { FaUserMd } from \"react-icons/fa\";\n\nconst Provider = ({ provider }) => {\n  return (\n    <div className=\"p-2\">\n      <h4 style={{ color: \"HotPink\" }}>\n        {provider.firstName} {provider.lastName} <FaUserMd></FaUserMd>\n      </h4>\n      <h6><span className='badge badge-light'>FHIR ID</span> : {provider.fhirId}</h6>\n      <h6><span className='badge badge-light'>UUID </span> : {provider.uuid}</h6>\n    </div>\n  );\n};\n\nexport default Provider;\n","const ProfileSelector = ({ profileName, switchProfile }) => {\n  return (\n    <div className=\"btn-group mb-2\" role=\"group\" aria-label=\"Basic mixed styles example\">\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnradio\"\n        id=\"profileEpic\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === \"Epic\"}\n        onClick={() => {\n          profileName = \"Epic\";\n          switchProfile(\"Epic\");\n        }}\n      />\n      <label class=\"btn btn-outline-danger\" htmlFor=\"profileEpic\">\n        Epic AppOrchard\n      </label>\n\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnradio\"\n        id=\"profileLogica\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === \"Logica\"}\n        onClick={() => {\n          profileName = \"Logica\";\n          switchProfile(\"Logica\");\n        }}\n      />\n      <label className=\"btn btn-outline-info\" htmlFor=\"profileLogica\">\n        Logica Health\n      </label>\n    </div>\n  );\n};\n\nexport default ProfileSelector;\n","import PropTypes from \"prop-types\";\nimport Patient from \"./Patient\";\nimport Provider from \"./Provider\";\nimport ProfileSelector from \"./ProfileSelector\";\nimport { FaFire } from \"react-icons/fa\";\n\nconst Header = ({ title, patient, provider, profileName, switchProfile }) => {\n  return (\n    <header>\n      <div id=\"navbarTop\">\n        <div className=\"row\">\n          <div className=\"col-lg-6 col-md-12 order-lg-2\">\n            <h2 className=\"pt-4\">\n              <FaFire style={{ color: \"#d60c05ee\" }} /> {title}\n            </h2>\n            <ProfileSelector profileName = {profileName} switchProfile = {switchProfile} />\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 order-lg-1\">\n            <Patient patient={patient} />\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 order-lg-3\">\n            <Provider provider={provider} />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: \"Mock EHR : : Social Care Referrals\",\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n// const headingStyle = {\n//   color: \"white\",\n//   backgroundColor: \"#2c405a\",\n// };\n\nexport default Header;\n","import {FcRefresh} from 'react-icons/fc'\nimport {FaCalendarCheck} from 'react-icons/fa'\n\nconst Encounters = ({ encounterList, currentEncounter = 'smart-2', changeCurrentEncounter, refreshEncounters }) => {\n  const refresh = () => {\n    console.log(\"Retrieving patient's encounters\");\n    refreshEncounters();\n  };\n\n  const setCurrentEncounter = (encounterSelected) => {\n    changeCurrentEncounter(encounterSelected)\n  }\n\n  return (\n    <div className=\"encounter col-md-3 col-lg-2 mx-0 px-0\">\n      <div\n        className=\"btn btn-default btn-lg btn-block table-hover mx-0\"\n        onClick={refresh}\n      >\n        All Encounters\n        <div className=\"badge badge-primary mx-2\">{encounterList.length}</div>\n        <FcRefresh />\n      </div>\n\n      <dl>\n        {encounterList.map((encounter, index) => {\n          const selected = (encounter.resource.id === currentEncounter)\n          const eClassName = selected\n            ? \"row table-hover m-0 px-2 selected\"\n            : \"row table-hover m-0 px-2\";\n          const visible = selected\n            ? \"visible\"\n            : \"invisible\";\n\n            return <div key={index} className={eClassName} onClick={() => setCurrentEncounter(encounter.resource.id)}>\n            <dt>\n              <a href={encounter.fullUrl}>{encounter.resource.id} <FaCalendarCheck className={visible} /></a>\n            </dt>\n            <dd>\n              { <div>{encounter.resource.period.start.split(\"T\")[0]}</div> }\n              { <div> {encounter.resource.class.display}</div> }\n            </dd>\n          </div>\n        }\n        )\n      }\n      </dl>\n    </div>\n  );\n};\n\nexport default Encounters;\n","const EncounterSummary = ({\n  toggleShowNewReferral,\n  showNewReferral,\n  currentEncounter,\n  sendNotificationUU,\n  profileName,\n}) => {\n  const toggle = () => {\n    toggleShowNewReferral();\n  };\n\n  const sendNotification = () => {\n    console.log(\"sending an encounter notification to Unite Us...\");\n    sendNotificationUU();\n  };\n\n  return (\n    <div className=\"encounterSummary\">\n      <div className=\"h4 pt-2 d-inline-block\">\n        Current Encounter: {currentEncounter}\n      </div>\n      <div\n        className=\"btn btn-primary d-inline float-end\"\n        onClick={sendNotification}\n      >\n        Send Notification to Unite Us\n      </div>\n      {!showNewReferral ? (\n        <button\n          className=\"btn btn-primary d-inline float-end\"\n          onClick={toggle}\n          disabled = {profileName === 'Epic'}\n        >\n          Create new referral\n        </button>\n      ) : (\n        <div className=\"btn btn-warning d-inline float-end\" onClick={toggle}>\n          Cancel New Referral\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EncounterSummary;\n","import { useState } from \"react\";\n\nexport const CreateReferral = ({ onCreate, toggleShowNewReferral }) => {\n  const [referredToGroupIds, setReferredToGroupIds] = useState(\"\");\n  const [referredFromGroupId, setReferredFromGroupId] = useState(\"\");\n  const [networkId, setNetworkId] = useState(\"\");\n  const [serviceType, setServiceType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!serviceType) {\n      alert(\"Please select a service for the referral!\");\n      return;\n    }\n\n    onCreate({\n      serviceType,\n      description,\n      referredToGroupIds,\n      referredFromGroupId,\n      networkId,\n    });\n\n    setReferredToGroupIds(\"\");\n    setReferredFromGroupId(\"demo-hospital\");\n    setNetworkId(\"demo-network\");\n    setServiceType(\"\");\n    setDescription(\"\");\n  };\n\n  const cancelReferralCreation = () => {\n    toggleShowNewReferral();\n  };\n  return (\n    <div className=\"newReferral\">\n      <form className=\"add-form\" onSubmit={onSubmit}>\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SENDING NETWORK</label>\n              <div>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Healthy Demo Network\"\n                  readOnly\n                  value={networkId}\n                  onChange={(e) => setNetworkId(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SENDER</label>\n              <div>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  readOnly\n                  placeholder=\"Local Hospital Center\"\n                  value={referredFromGroupId}\n                  onChange={(e) => setReferredFromGroupId(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SERVICE TYPE</label>\n              <div>\n                <select\n                  className=\"form-control\"\n                  value={serviceType.value}\n                  onChange={(e) =>\n                    setServiceType({\n                      value: e.target.value,\n                      text: e.target.options[e.target.selectedIndex].text,\n                    })\n                  }\n                >\n                  <option>Select a service ...</option>\n                  <option value=\"e281c5da-5fbd-41ea-a32e-6efc32f0a156\">\n                    Clothing and Household Goods\n                  </option>\n                  <option value=\"f020d616-5016-4fb7-9fad-91d8d99cd7a1\">\n                    Emergency Food\n                  </option>\n                  <option value=\"f6760383-7fc4-442b-b686-fc5055bfec06\">\n                    Emergency Housing\n                  </option>\n                  <option value=\"ba3eb996-9647-453f-abe4-c04dc84c319e\">\n                    Food Assistance\n                  </option>\n                  <option value=\"5c7dec03-e340-4b48-8d4b-f24af7410a3a\">\n                    Housing and Shelter\n                  </option>\n                  <option value=\"eceb120f-4888-4c42-957f-c90fd5582f83\">\n                    Transportation\n                  </option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-6\">\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">RECEIVING NETWORK</label>\n              <div>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  readOnly\n                  placeholder=\"Healthy Demo Network\"\n                  value={networkId}\n                  onChange={(e) => setNetworkId(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">RECEIPIENT</label>\n              <div>\n                <select\n                  className=\"form-control\"\n                  value={referredToGroupIds.value}\n                  onChange={(e) =>\n                    setReferredToGroupIds({\n                      value: e.target.value,\n                      text: e.target.options[e.target.selectedIndex].text,\n                    })\n                  }\n                >\n                  <option>Select an organization ...</option>\n                  <option value=\"b8835025-bf3f-455f-9b1d-5efda6772b98\">\n                    BusRides Sustainable Transportation Act\n                  </option>\n                  <option value=\"ebea1516-6343-4f76-980f-a637e580cfd3\">\n                    Housing California\n                  </option>\n                  <option value=\"3491714a-aa7e-4a9c-a4d7-c8fe7c6b0bc0\">\n                    River City Food Bank\n                  </option>\n                  <option value=\"9dd692cb-4eb3-46cb-a178-ab9eda2c83f6\">\n                    St. Mary's Shelter\n                  </option>\n                  <option value=\"8d18165d-0c32-4f82-b331-ef537f4382aa\">\n                    The Food Pantries for the Capital District\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">DESCRIPTION</label>\n              <div>\n                <textarea\n                  className=\"form-control\"\n                  rows=\"3\"\n                  cols=\"50\"\n                  placeholder=\"Enter a description for the referral\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row d-inline\">\n          <input\n            value=\"Cancel\"\n            className=\"btn btn-warning col-md-6 mt-4\"\n            onClick={cancelReferralCreation}\n            readOnly\n          />\n\n          <input\n            value=\"Submit\"\n            className=\"btn btn-primary col-md-6 mt-4\"\n            onClick={onSubmit}\n            readOnly\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateReferral;\n","import { IoOpenOutline } from \"react-icons/io5\";\nimport { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction ReferralSummary({ referral }) {\n  const [show, setShow] = useState(false);\n  const [fullJson, setFullJson] = useState();\n\n  const showSource = (fullJson) => {\n    setFullJson(fullJson);\n    setShow(true);\n  };\n\n  const closeWindow = () => setShow(false);\n\n  return (\n    <>\n      <div className=\"row table-hover px-3\">\n        <table className=\"table table-sm align-middle text-start\">\n          <tbody>\n            <tr>\n              <th scoope=\"row\">\n                {referral.ServiceRequest.resource.resourceType}\n              </th>\n              <td>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-link\"\n                  onClick={() => showSource(referral.ServiceRequest)}\n                >\n                  {referral.ServiceRequest.resource.id} <IoOpenOutline />\n                </button>\n              </td>\n            </tr>\n            <tr>\n              <th scoope=\"row\">{referral.Task.resource.resourceType}</th>\n              <td>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-link\"\n                  onClick={() => showSource(referral.Task)}\n                >\n                  {referral.Task.resource.id} <IoOpenOutline />\n                </button>\n              </td>\n            </tr>\n            {referral.Patient ? (\n              <tr>\n                <th scoope=\"row\">{referral.Patient.resource.resourceType}</th>\n                <td>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-link\"\n                    onClick={() => showSource(referral.Patient)}\n                  >\n                    {referral.Patient.resource.id} <IoOpenOutline />\n                  </button>\n                </td>\n              </tr>\n            ) : null}\n            {referral.Practitioner ? (\n              <tr>\n                <th scoope=\"row\">\n                  {referral.Practitioner.resource.resourceType}\n                </th>\n                <td>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-link\"\n                    onClick={() => showSource(referral.Practitioner)}\n                  >\n                    {referral.Practitioner.resource.id} <IoOpenOutline />\n                  </button>\n                </td>\n              </tr>\n            ) : null}\n          </tbody>\n        </table>\n      </div>\n\n      <Modal size=\"lg\" show={show} onHide={closeWindow}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {fullJson?.resource.resourceType} : {fullJson?.resource.id}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <pre id=\"json\">{JSON.stringify(fullJson, undefined, 2)}</pre>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"warning\" onClick={closeWindow}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={closeWindow}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default ReferralSummary;\n","import EncounterSummary from \"./EncounterSummary\";\nimport CreateReferral from \"./CreateReferral\";\nimport { useState } from \"react\";\nimport ReferralSummary from \"./ReferralSummary\";\n\nfunction Referrals({ onCreate, referralList, currentEncounter, sendNotificationUU, profileName }) {\n  const [showNewReferral, setShowNewReferral] = useState(false);\n\n  const toggleShowNewReferral = () => {\n    setShowNewReferral((showNewReferral) => !showNewReferral);\n  };\n\n  const onCreateReferral = (referral) => {\n    onCreate(referral);\n    toggleShowNewReferral();\n  };\n  return (\n    <div className=\"col-md-9 col-lg-10 px-0\">\n      <div className=\"referrals\">\n        <EncounterSummary\n          toggleShowNewReferral={toggleShowNewReferral}\n          showNewReferral={showNewReferral}\n          currentEncounter={currentEncounter}\n          sendNotificationUU={sendNotificationUU}\n          profileName={profileName}\n        />\n        {showNewReferral ? (\n          <CreateReferral\n            onCreate={onCreateReferral}\n            toggleShowNewReferral={toggleShowNewReferral}\n          />\n        ) : null}\n        <div className=\"referralList\">\n          <div className=\"h5 py-3\">This encounter has {referralList.length > 1 ? referralList.length + ' referrals.' : referralList.length === 1 ? ' 1 referral.' : ' no referrals.'}</div>\n          {referralList.length > 0\n            ? referralList.map((referral, index) => (\n                <ReferralSummary key={index} referral = {referral}/>\n              ))\n            : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Referrals;\n","export const Profile_Epic = {\n  name: 'Epic',\n\n  defaultPatient: {\n    firstName: \"Beverly\",\n    lastName: \"Ccm\",\n    gender: \"Female\",\n    dob: \"01/01/1940\",\n    mrn: \"203722\",\n    fhirId: \"egHmZUd91rLItB1AqGV49Pg3\",\n    uuid: \"b5318891-3dc8-426a-af50-531e106ad1a1\",\n  },\n\n  defaultProvider: {\n    firstName: \"Case\",\n    lastName: \"Manager\",\n    fhirId: \"eaToFIkaJ32mO4K002q3BLw3\",\n    uuid: \"94e5f7ee-1425-42bc-8833-3474b687b125\",\n    groupId: \"bf4aa373-81eb-4da5-9980-2d3e51c57b3c\",\n    networkId: \"145ca925-ba86-490d-b404-35f4fe5ada66\",\n  },\n\n  defaultEncounter: \"eFBT3k94CLm3fCPMNlKH2DQ3\", //\"enZf6GWN2rMGQWF1rqqDgNg3\",\n  defaultBaseUrl:\n    \"https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4\",\n  defaultNotificationUrl:\n    \"https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService\",\n  accessToken : \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ1cm46ZXBpYzphcHBvcmNoYXJkLmN1cnByb2QiLCJjbGllbnRfaWQiOiIyYWViZDQ1Ni02YzlmLTRlYmYtYWU4ZS0wYjc4MTA1MTY0NGEiLCJlcGljLmVjaSI6InVybjplcGljOkN1cnJlbnQtQXBwLU9yY2hhcmQtUHJvZHVjdGlvbiIsImVwaWMubWV0YWRhdGEiOiJVUjEteFpubkdGNUFCMWh2cVVwaXdSQ1hrYzh6bTNlZDh4TlpERjRWN2VPelQtOVlHSUNjaE4za1VpZzRhZ0FfakM1cEZVX3NCdk9QQ2QzV1ZpMHdjYzJTTFYwQU5XSkFGSXNRUnY4djhZVTZ6bXdSWHhvdEhzUEdTaHlQWURSeiIsImVwaWMudG9rZW50eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjIwMjc3MzEzLCJpYXQiOjE2MjAyNzM3MTMsImlzcyI6InVybjplcGljOmFwcG9yY2hhcmQuY3VycHJvZCIsImp0aSI6IjRmNjQ5ZGZlLWI0ODgtNDdlMi04YjdmLTBlMjkzNDY4YzRlNyIsIm5iZiI6MTYyMDI3MzcxMywic3ViIjoiZXhmbzZFNEVYaldzbmhBMU9HVkVsZ3czIn0.od55jY-8la1DDbALRliDJYmbt-hFVp5zNrVa6TqXvX4EQt8tZ3h-Puw61BHMPUFpe1SMJ6D3iRnsXz5Z29rbVO3Vb5-VryyJOv_PqTtjBLX3oI3WA7XLcsR6shp9Jc7X9kIMWRaXK-BoG3uhhMyA2_ueEn_2j2R6ra46zm2JTw-khrXcn1FxvJ2P6Azs5vwnEl2y6X1OPrkblFpFN2C0foWgiCVGFCwVmMghXoJPPNgge5DTSiAWV8PVF1LLQ24PM3tcU8JMIpu1Q52Cs5m1RSczstKJvDtNwgVeQdUGplMu720ykZG2h2BYc_cAQkfQlOS8fNrMKsm-0BD9AZVG4g\"\n};\n\nexport const Profile_Logica = {\n  name: 'Logica',\n\n  defaultPatient: {\n    firstName: \"Aaron\",\n    lastName: \"Alexis\",\n    gender: \"Male\",\n    dob: \"10/26/1989\",\n    mrn: \"smart-9995679\",\n    fhirId: \"smart-9995679\",\n    uuid: \"74216479-7594-413c-9835-9f00a51e5686\",\n  },\n\n  defaultProvider: {\n    firstName: \"Demo\",\n    lastName: \"Provider\",\n    fhirId: \"smart-Practitioner-71482713\",\n    uuid: \"94e5f7ee-1425-42bc-8833-3474b687b125\",\n    groupId: \"bf4aa373-81eb-4da5-9980-2d3e51c57b3c\",\n    networkId: \"145ca925-ba86-490d-b404-35f4fe5ada66\",\n  },\n\n  defaultEncounter: \"smart-5\",\n\n  defaultBaseUrl: \"https://api.logicahealth.org/uufhircrn/open\",\n\n  defaultNotificationUrl:\n    \"https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService\",\n  accessToken: \"\"\n};\n\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Encounters from \"./components/Encounters\";\nimport Referrals from \"./components/Referrals\";\nimport { useState, useEffect } from \"react\";\nimport { Profile_Epic, Profile_Logica } from \"./components/Profiles\";\n\nfunction App() {\n  const defaultProfile = Profile_Epic;\n  const defaultProfileName = defaultProfile.name;\n  const [currentProfileName, setCurrentProfileName] = useState(\n    defaultProfileName\n  );\n  //const [profile, setProfile] = useState(defaultProfile);\n  const [patient, setPatient] = useState(defaultProfile.defaultPatient);\n  const [provider, setProvider] = useState(defaultProfile.defaultProvider);\n  const [currentEncounter, setCurrentEncounter] = useState(\n    defaultProfile.defaultEncounter\n  );\n  const [accessToken, setAccessToken] = useState(defaultProfile.access_token);\n  const [baseUrl, setBaseUrl] = useState(defaultProfile.defaultBaseUrl);\n  const [notificationUrl, setNotificationUrl] = useState(\n    defaultProfile.defaultNotificationUrl\n  );\n  const [referrals, setReferrals] = useState([]);\n  const [encounters, setEncounters] = useState([]);\n\n  const switchProfile = async (profileName) => {\n    //if (profileName === currentProfileName) return\n\n    console.log(\"Switch to profile: \", profileName);\n    setCurrentProfileName(profileName);\n    const newProfile = profileName === \"Logica\" ? Profile_Logica : Profile_Epic;\n    setPatient(newProfile.defaultPatient);\n    setProvider(newProfile.defaultProvider);\n    setBaseUrl(newProfile.defaultBaseUrl);\n    setNotificationUrl(newProfile.defaultNotificationUrl);\n    if (newProfile.name === \"Epic\") {\n      let token = await getAccessToken();\n      setAccessToken(token);\n    } else setAccessToken(newProfile.accessToken);\n  };\n\n  const refreshProfileSettings = async () => {\n    const encounterList = await getEncounters(patient.fhirId, baseUrl);\n    if (encounterList?.length > 0) {\n      await changeCurrentEncounter(encounterList[0].resource.id, baseUrl);\n    }\n  };\n\n  // Create a referral\n  const createReferral = async (referral) => {\n    console.log(\"create referral: \", referral);\n    const nowISO = new Date().toISOString();\n\n    let url = baseUrl + \"/ServiceRequest\";\n    let resource = {\n      resourceType: \"ServiceRequest\",\n      status: \"active\",\n      intent: \"plan\",\n      category: [\n        {\n          coding: [\n            {\n              system: \"http://snomed.info/sct\",\n              code: \"307835004\",\n              display: \"Referral by service (finding)\",\n            },\n          ],\n          text: \"Referral by service\",\n        },\n      ],\n      priority: \"routine\",\n      subject: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.firstName + \" \" + patient.lastName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n        display: \"Hospital Admission\",\n      },\n      authoredOn: nowISO,\n      requester: [\n        {\n          reference: `Practitioner/${provider.fhirId}`,\n          display: provider.firstName + \" \" + provider.lastName,\n        },\n      ],\n      orderDetail: {\n        text: referral.serviceType.text,\n        coding: [\n          {\n            system: \"Unite Us\",\n            code: referral.serviceType.value,\n            display: referral.serviceType.text,\n          },\n        ],\n      },\n    };\n\n    let res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(resource),\n    });\n\n    let data = await res.json();\n    console.log(\"new referral: \", data);\n    let newId = data.id;\n    console.log(\"server request id: \", newId);\n\n    url = baseUrl + \"/Task\";\n    resource = {\n      resourceType: \"Task\",\n      basedOn: [\n        {\n          reference: `ServiceRequest/${newId}`,\n        },\n      ],\n      status: \"requested\",\n      intent: \"plan\",\n      priority: \"routine\",\n      for: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.firstName + \" \" + patient.lastName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n        display: \"Hospital Admission\",\n      },\n      authoredOn: nowISO, //\"2020-09-20T15:41:39Z\",\n      lastModified: nowISO,\n      requester: [\n        {\n          reference: `Practitioner/${provider.fhirId}`,\n          display: provider.firstName + \" \" + provider.lastName,\n        },\n      ],\n      description:\n        referral.description +\n        \"/n referred to : \" +\n        referral.referredToGroupIds.text +\n        \" [\" +\n        referral.referredToGroupIds.value +\n        \"]\",\n      owner: {\n        type: \"Organization\",\n        identifier: {\n          use: \"usual\",\n          system: \"Unite Us\",\n          value: referral.referredToGroupIds.value,\n        },\n        display: referral.referredToGroupIds.text,\n      },\n    };\n\n    res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(resource),\n    });\n\n    data = await res.json();\n    console.log(\"new referral: \", data);\n    newId = data.id;\n    console.log(\"Task id: \", newId);\n\n    await getReferrals();\n  };\n\n  const fetchReferrals = async (\n    encounterId = currentEncounter,\n    referralBaseUrl = baseUrl\n  ) => {\n    const url =\n      referralBaseUrl +\n      \"/Task?encounter=\" +\n      encounterId +\n      \"&_include=Task%3Apatient&_include=Task%3Aencounter&_include=Task%3Arequester&_include=Task%3A\" +\n      \"based-on\" +  //(currentProfileName === \"Epic\" ? \"basedon\" : \"based-on\") + \"%3AServiceRequest\" +\n      \"&_include=Task%3Aowner%3AOrganization\";\n\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n      },\n    });\n    const data = await res.json();\n    let entryList = data.total === 0 ? [] : data.entry;\n    if (!entryList) return [];\n    console.log(\"Task bundle received: \", entryList);\n\n    // //_include works at Epic, no need to fetch ServiceRequest seperatedly\n    // const url2 = baseUrl + \"/ServiceRequest?encounter=\" + encounterId;\n    // const res2 = await fetch(url2, {\n    //   method: \"GET\",\n    //   headers: {\n    //     \"Content-type\": \"application/json\",\n    //     Accept: \"application/json\",\n    //     Authorization: accessToken.length > 0 ? \"bearer \" + accessToken : \"\",\n    //   },\n    // });\n    // const data2 = await res2.json();\n    // let entryList2 = data2.total === 0 ? [] : data2.entry;\n    // entryList = entryList.concat(entryList2);\n\n    //filter ServiceRequest and Task\n    // if (entryList.length > 0) {\n    //   entryList = entryList.filter((entry) => {\n    //     return (\n    //       entry.resource.resourceType === \"ServiceRequest\" ||\n    //       entry.resource.resourceType === \"Task\"\n    //     );\n    //   });\n    // }\n\n    // First take all the Task\n    let referralList = [];\n    entryList.forEach((entry, index) => {\n      if (entry.resource.resourceType === \"Task\") {\n        let referral = {\n          id: \"Task/\" + entry.resource.id,\n          Task: entry,\n        };\n        referralList.push(referral);\n      }\n    });\n\n    referralList.forEach((referral, index) => {\n      const resource = referral?.Task?.resource;\n      if (!resource) return;\n\n      const patientId = resource.for?.reference;\n      const serviceRequestId = resource.basedOn[0].reference;\n      const practitionerId = resource.requester?.reference;\n      const organizationId = resource.owner?.reference;\n\n      entryList.forEach((entry, index) => {\n        let entryId = entry.resource.id;\n        switch (entry.resource.resourceType) {\n          case \"ServiceRequest\": {\n            if (serviceRequestId === `ServiceRequest/${entryId}`)\n              referral.ServiceRequest = entry;\n            break;\n          }\n          case \"Patient\": {\n            if (patientId === `Patient/${entryId}`) referral.Patient = entry;\n            break;\n          }\n          case \"Organization\": {\n            if (organizationId === `Organization/${entryId}`)\n              referral.Organization = entry;\n            break;\n          }\n          case \"Practitioner\": {\n            if (practitionerId === `Practitioner/${entryId}`)\n              referral.Practitioner = entry;\n            break;\n          }\n          default:\n        }\n      });\n    });\n\n    //referralList = referralList.filter((entry) => {\n    //  return entry.Task;\n    //});\n\n    console.log(\"referral list\", referralList);\n    referralList.sort((a, b) => {\n      const timeA = new Date(a.ServiceRequest.resource.authoredOn).getTime();\n      const timeB = new Date(b.ServiceRequest.resource.authoredOn).getTime();\n      return timeB - timeA;\n    });\n    return referralList;\n  };\n\n  const fetchEncounters = async (\n    patientId = patient.fhirId,\n    encounterBaseUrl = baseUrl\n  ) => {\n    const url = encounterBaseUrl + \"/Encounter?patient=\" + patientId;\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n      },\n    });\n    const data = await res.json();\n\n    const encounterList = data.total > 0 ? data.entry : [];\n\n    encounterList.sort((a, b) => {\n      const timeA = new Date(a.resource.period.start).getTime();\n      const timeB = new Date(b.resource.period.start).getTime();\n      return timeB - timeA;\n    });\n    console.log(\"encounter\", encounterList);\n    return encounterList;\n  };\n\n  const changeCurrentEncounter = async (encounterSelected, currentBaseUrl) => {\n    if (encounterSelected === currentEncounter) return;\n\n    setCurrentEncounter(encounterSelected);\n    await getReferrals(encounterSelected, currentBaseUrl);\n    return;\n  };\n\n  const getReferrals = async (encounterSelected, referralBaseUrl) => {\n    const data = await fetchReferrals(encounterSelected, referralBaseUrl);\n    setReferrals(data);\n  };\n\n  const getEncounters = async (patientId, encounterBaseUrl) => {\n    const data = await fetchEncounters(patientId, encounterBaseUrl);\n    setEncounters(data);\n    return data;\n  };\n\n  const sendNotificationUU = async () => {\n    const url = notificationUrl;\n    const notification = {\n      resourceType: \"Bundle\",\n      type: \"Event\",\n      entry: [\n        {\n          fullUrl: baseUrl + \"/Encounter/\" + currentEncounter,\n        },\n      ],\n    };\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"x-api-key\": \"sfsdfddfdsfsdfs32342343\", //\"wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03\",\n      },\n      body: JSON.stringify(notification),\n    });\n    const data = await res.json();\n    console.log(\"notification response: \", data);\n    return data;\n  };\n\n  const getAccessToken = async () => {\n    const url =\n      \"https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/authentication/token\";\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        \"x-api-key\": \"sfsdfddfdsfsdfs32342343\", //\"wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      body: JSON.stringify({\n        privateKey: null,\n      }),\n    });\n    const data = await res.json();\n    const token = data.body.access_token;\n    console.log(\"access token \", token);\n    return token;\n  };\n\n  useEffect(() => {\n    const setProfile = async (profileName) => {\n      await switchProfile(profileName);\n    };\n\n    setProfile(defaultProfileName);\n  }, []);\n\n  useEffect(() => {\n    const updateFhir = async () => {\n      await refreshProfileSettings();\n    };\n\n    updateFhir();\n  }, [accessToken]);\n\n  return (\n    <div className=\"App\">\n      <Header\n        patient={patient}\n        provider={provider}\n        profileName={currentProfileName}\n        switchProfile={switchProfile}\n      />\n      <div className=\"row mt-1 mx-0\">\n        <Encounters\n          encounterList={encounters}\n          currentEncounter={currentEncounter}\n          changeCurrentEncounter={changeCurrentEncounter}\n          refreshEncounters={getEncounters}\n        />\n        <Referrals\n          onCreate={createReferral}\n          referralList={referrals}\n          currentEncounter={currentEncounter}\n          sendNotificationUU={sendNotificationUU}\n          profileName={currentProfileName}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}