{"version":3,"sources":["components/Patient.js","components/Provider.js","components/ProfileSelector.js","components/Header.js","components/Encounters.js","components/EncounterSummary.js","components/CreateReferral.js","components/ReferralSummary.js","components/Referrals.js","components/Profiles.js","App.js","reportWebVitals.js","index.js"],"names":["Patient","patient","className","style","color","firstName","lastName","dob","gender","mrn","fhirId","Provider","provider","uuid","ProfileSelector","profileName","switchProfile","role","aria-label","type","name","id","autoComplete","defaultChecked","onClick","class","htmlFor","Header","title","defaultProps","Encounters","encounterList","currentEncounter","changeCurrentEncounter","refreshEncounters","console","log","length","map","encounter","index","selected","resource","eClassName","visible","encounterSelected","href","fullUrl","period","start","split","display","EncounterSummary","toggleShowNewReferral","showNewReferral","sendNotificationUU","toggle","disabled","CreateReferral","onCreate","useState","referredToGroupIds","setReferredToGroupIds","referredFromGroupId","setReferredFromGroupId","networkId","setNetworkId","serviceType","setServiceType","description","setDescription","onSubmit","e","preventDefault","alert","placeholder","readOnly","value","onChange","target","text","options","selectedIndex","rows","cols","ReferralSummary","referral","show","setShow","fullJson","setFullJson","showSource","closeWindow","findUUID","identifier","find","entry","system","toUpperCase","scoope","ServiceRequest","resourceType","authoredOn","Practitioner","requester","orderDetail","supportingInfo","DocumentReference","Task","status","lastModified","Organization","owner","family","given","Consent","consent","scope","provision","end","documentReference","Binary","binary","contentType","download","data","Communication","communication","sent","sender","recipient","payload","contentString","contentReference","Modal","size","onHide","closeButton","Title","Body","JSON","stringify","undefined","Footer","Button","variant","Referrals","referralList","setShowNewReferral","Profile_Epic","defaultPatient","defaultProvider","groupId","defaultEncounter","defaultBaseUrl","defaultNotificationUrl","accessToken","Profile_Logica","App","defaultProfile","defaultProfileName","currentProfileName","setCurrentProfileName","setPatient","setProvider","setCurrentEncounter","access_token","setAccessToken","baseUrl","setBaseUrl","notificationUrl","setNotificationUrl","referrals","setReferrals","encounters","setEncounters","a","newProfile","getAccessToken","token","refreshProfileSettings","getEncounters","createReferral","nowISO","Date","toISOString","url","intent","category","coding","code","priority","subject","reference","fetch","method","headers","body","res","json","newId","basedOn","for","use","getReferrals","fetchReferrals","encounterId","referralBaseUrl","Accept","Authorization","entryList","total","forEach","push","patientId","serviceRequestId","practitionerId","organizationId","entryId","referralId","fetchCommunications","communications","fetchDocumentReferences","documentReferences","fetchBinaries","binaryList","fetchConsents","consentList","sort","b","timeA","getTime","fetchEncounters","encounterBaseUrl","taskId","documentList","documentReferenceList","content","attachment","patientFhirId","currentBaseUrl","notification","privateKey","useEffect","setProfile","updateFhir","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91b4fc88.chunk.js","sourcesContent":["import { FaRegUser } from \"react-icons/fa\";\n\nconst Patient = ({patient}) => {\n  return (\n    <div className=\"p-2\">\n      <h4 style = {{ color: \"yellow\"}}>\n          <FaRegUser /> {patient.firstName} {patient.lastName}\n      </h4>\n      <h6>\n      <span className='badge bg-light text-dark'>DOB</span> : {patient.dob}\n      <span>    </span> \n      <span className='badge bg-light text-dark'>Gender</span> : {patient.gender}\n      </h6>\n      <h6><span className='badge bg-light text-dark'>MRN</span> : {patient.mrn}</h6>\n      <h6><span className='badge bg-light text-dark'>FHIR ID</span> : {patient.fhirId}</h6>\n    </div>\n  );\n};\n\nexport default Patient;\n","import { FaUserMd } from \"react-icons/fa\";\n\nconst Provider = ({ provider }) => {\n  return (\n    <div className=\"p-2\">\n      <h4 style={{ color: \"HotPink\" }}>\n        {provider.firstName} {provider.lastName} <FaUserMd></FaUserMd>\n      </h4>\n      <h6><span className='badge bg-light text-dark'>FHIR ID</span> : {provider.fhirId}</h6>\n      <h6><span className='badge bg-light text-dark'>UUID </span> : {provider.uuid}</h6>\n    </div>\n  );\n};\n\nexport default Provider;\n","const ProfileSelector = ({ profileName, switchProfile }) => {\n  return (\n    <div className=\"btn-group mb-2\" role=\"group\" aria-label=\"Basic mixed styles example\">\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnradio\"\n        id=\"profileEpic\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === \"Epic\"}\n        onClick={() => {\n          profileName = \"Epic\";\n          switchProfile(\"Epic\");\n        }}\n      />\n      <label class=\"btn btn-outline-danger\" htmlFor=\"profileEpic\">\n        Epic AppOrchard\n      </label>\n\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnradio\"\n        id=\"profileLogica\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === \"Logica\"}\n        onClick={() => {\n          profileName = \"Logica\";\n          switchProfile(\"Logica\");\n        }}\n      />\n      <label className=\"btn btn-outline-info\" htmlFor=\"profileLogica\">\n        Logica Health\n      </label>\n    </div>\n  );\n};\n\nexport default ProfileSelector;\n","import PropTypes from \"prop-types\";\nimport Patient from \"./Patient\";\nimport Provider from \"./Provider\";\nimport ProfileSelector from \"./ProfileSelector\";\nimport { FaFire } from \"react-icons/fa\";\n\nconst Header = ({ title, patient, provider, profileName, switchProfile }) => {\n  return (\n    <header>\n      <div id=\"navbarTop\">\n        <div className=\"row\">\n          <div className=\"col-lg-6 col-md-12 order-lg-2\">\n            <h2 className=\"pt-4\">\n              <FaFire style={{ color: \"#d60c05ee\" }} /> {title}\n            </h2>\n            <ProfileSelector profileName = {profileName} switchProfile = {switchProfile} />\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 order-lg-1\">\n            <Patient patient={patient} />\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 order-lg-3\">\n            <Provider provider={provider} />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: \"Mock EHR : : Social Care Referrals\",\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n// const headingStyle = {\n//   color: \"white\",\n//   backgroundColor: \"#2c405a\",\n// };\n\nexport default Header;\n","import {FcRefresh} from 'react-icons/fc'\nimport {FaCalendarCheck} from 'react-icons/fa'\n\nconst Encounters = ({ encounterList, currentEncounter = 'smart-2', changeCurrentEncounter, refreshEncounters }) => {\n  const refresh = () => {\n    console.log(\"Retrieving patient's encounters\");\n    refreshEncounters();\n  };\n\n  const setCurrentEncounter = (encounterSelected) => {\n    changeCurrentEncounter(encounterSelected)\n  }\n\n  return (\n    <div className=\"encounter col-md-3 col-lg-2 mx-0 px-0\">\n      <div\n        className=\"btn btn-default btn-lg btn-block table-hover mx-0\"\n        onClick={refresh}\n      >\n        All Encounters\n        <div className=\"badge bg-primary mx-2\">{encounterList.length}</div>\n        <FcRefresh />\n      </div>\n\n      <dl>\n        {encounterList.map((encounter, index) => {\n          const selected = (encounter.resource.id === currentEncounter)\n          const eClassName = selected\n            ? \"row table-hover m-0 px-2 selected\"\n            : \"row table-hover m-0 px-2\";\n          const visible = selected\n            ? \"visible\"\n            : \"invisible\";\n\n            return <div key={index} className={eClassName} onClick={() => setCurrentEncounter(encounter.resource.id)}>\n            <dt>\n              <a href={encounter.fullUrl}>{encounter.resource.id} <FaCalendarCheck className={visible} /></a>\n            </dt>\n            <dd>\n              { <div>{encounter.resource.period.start.split(\"T\")[0]}</div> }\n              { <div> {encounter.resource.class.display}</div> }\n            </dd>\n          </div>\n        }\n        )\n      }\n      </dl>\n    </div>\n  );\n};\n\nexport default Encounters;\n","const EncounterSummary = ({\n  toggleShowNewReferral,\n  showNewReferral,\n  currentEncounter,\n  sendNotificationUU,\n  profileName,\n}) => {\n  const toggle = () => {\n    toggleShowNewReferral();\n  };\n\n  const sendNotification = () => {\n    console.log(\"sending an encounter notification to Unite Us...\");\n    sendNotificationUU();\n  };\n\n  return (\n    <div className=\"encounterSummary\">\n      <div className=\"h4 pt-2 d-inline-block\">\n        Current Encounter: {currentEncounter}\n      </div>\n      <div\n        className=\"btn btn-primary d-inline float-end\"\n        onClick={sendNotification}\n      >\n        Send Notification to Unite Us\n      </div>\n      {!showNewReferral ? (\n        <button\n          className=\"btn btn-primary d-inline float-end\"\n          onClick={toggle}\n          disabled = {profileName === 'Epic'}\n        >\n          Create new referral\n        </button>\n      ) : (\n        <div className=\"btn btn-warning d-inline float-end\" onClick={toggle}>\n          Cancel New Referral\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EncounterSummary;\n","import { useState } from \"react\";\n\nexport const CreateReferral = ({ onCreate, toggleShowNewReferral }) => {\n  const [referredToGroupIds, setReferredToGroupIds] = useState(\"\");\n  const [referredFromGroupId, setReferredFromGroupId] = useState(\"\");\n  const [networkId, setNetworkId] = useState(\"\");\n  const [serviceType, setServiceType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!serviceType) {\n      alert(\"Please select a service for the referral!\");\n      return;\n    }\n\n    onCreate({\n      serviceType,\n      description,\n      referredToGroupIds,\n      referredFromGroupId,\n      networkId,\n    });\n\n    setReferredToGroupIds(\"\");\n    setReferredFromGroupId(\"demo-hospital\");\n    setNetworkId(\"demo-network\");\n    setServiceType(\"\");\n    setDescription(\"\");\n  };\n\n  const cancelReferralCreation = () => {\n    toggleShowNewReferral();\n  };\n  return (\n    <div className=\"newReferral\">\n      <form className=\"add-form\" onSubmit={onSubmit}>\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SENDING NETWORK</label>\n              <div>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Healthy Demo Network\"\n                  readOnly\n                  value={networkId}\n                  onChange={(e) => setNetworkId(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SENDER</label>\n              <div>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  readOnly\n                  placeholder=\"Local Hospital Center\"\n                  value={referredFromGroupId}\n                  onChange={(e) => setReferredFromGroupId(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SERVICE TYPE</label>\n              <div>\n                <select\n                  className=\"form-control\"\n                  value={serviceType.value}\n                  onChange={(e) =>\n                    setServiceType({\n                      value: e.target.value,\n                      text: e.target.options[e.target.selectedIndex].text,\n                    })\n                  }\n                >\n                  <option>Select a service ...</option>\n                  <option value=\"e281c5da-5fbd-41ea-a32e-6efc32f0a156\">\n                    Clothing and Household Goods\n                  </option>\n                  <option value=\"f020d616-5016-4fb7-9fad-91d8d99cd7a1\">\n                    Emergency Food\n                  </option>\n                  <option value=\"f6760383-7fc4-442b-b686-fc5055bfec06\">\n                    Emergency Housing\n                  </option>\n                  <option value=\"ba3eb996-9647-453f-abe4-c04dc84c319e\">\n                    Food Assistance\n                  </option>\n                  <option value=\"5c7dec03-e340-4b48-8d4b-f24af7410a3a\">\n                    Housing and Shelter\n                  </option>\n                  <option value=\"eceb120f-4888-4c42-957f-c90fd5582f83\">\n                    Transportation\n                  </option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-6\">\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">RECEIVING NETWORK</label>\n              <div>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  readOnly\n                  placeholder=\"Healthy Demo Network\"\n                  value={networkId}\n                  onChange={(e) => setNetworkId(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">RECEIPIENT</label>\n              <div>\n                <select\n                  className=\"form-control\"\n                  value={referredToGroupIds.value}\n                  onChange={(e) =>\n                    setReferredToGroupIds({\n                      value: e.target.value,\n                      text: e.target.options[e.target.selectedIndex].text,\n                    })\n                  }\n                >\n                  <option>Select an organization ...</option>\n                  <option value=\"b8835025-bf3f-455f-9b1d-5efda6772b98\">\n                    BusRides Sustainable Transportation Act\n                  </option>\n                  <option value=\"ebea1516-6343-4f76-980f-a637e580cfd3\">\n                    Housing California\n                  </option>\n                  <option value=\"3491714a-aa7e-4a9c-a4d7-c8fe7c6b0bc0\">\n                    River City Food Bank\n                  </option>\n                  <option value=\"9dd692cb-4eb3-46cb-a178-ab9eda2c83f6\">\n                    St. Mary's Shelter\n                  </option>\n                  <option value=\"8d18165d-0c32-4f82-b331-ef537f4382aa\">\n                    The Food Pantries for the Capital District\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">DESCRIPTION</label>\n              <div>\n                <textarea\n                  className=\"form-control\"\n                  rows=\"3\"\n                  cols=\"50\"\n                  placeholder=\"Enter a description for the referral\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row d-inline\">\n          <input\n            value=\"Cancel\"\n            className=\"btn btn-warning col-md-6 mt-4\"\n            onClick={cancelReferralCreation}\n            readOnly\n          />\n\n          <input\n            value=\"Submit\"\n            className=\"btn btn-primary col-md-6 mt-4\"\n            onClick={onSubmit}\n            readOnly\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateReferral;\n","import { IoOpenOutline, IoOpenSharp, IoCloudDownloadSharp, IoCloudDownloadOutline } from \"react-icons/io5\";\nimport { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction ReferralSummary({ referral }) {\n  const [show, setShow] = useState(false);\n  const [fullJson, setFullJson] = useState();\n  var cboUUID;\n\n  const showSource = (fullJson) => {\n    setFullJson(fullJson);\n    setShow(true);\n  };\n\n  const closeWindow = () => setShow(false);\n\n  let findUUID = (resource) => {\n    const cboUUID = resource.identifier.find(\n      (entry) =>\n        entry.system.toUpperCase() ===\n        \"HTTPS://UNITEUS.COM/IO/STRUCTUREDEFINITION/CBO-UUID\"\n    );\n    return cboUUID;\n  };\n\n  return (\n    <>\n      <div className=\"row table-hover px-3\">\n        <table className=\"table table-sm align-middle text-start\">\n          <tbody>\n            <tr>\n              <th scoope=\"row\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-link\"\n                  onClick={() => showSource(referral.ServiceRequest.resource)}\n                >\n                  {referral.ServiceRequest.resource.resourceType}{\" \"}\n                  <IoOpenOutline />\n                </button>\n              </th>\n              <td>\n                Referral was authored on{\" \"}\n                <div className=\"btn btn-outline-primary disabled\">\n                  {referral.ServiceRequest.resource.authoredOn}\n                </div>{\" \"}\n                by{\" \"}\n                <div\n                  className=\"btn btn-outline-primary\"\n                  onClick={() => showSource(referral.Practitioner.resource)}\n                >\n                  {referral.ServiceRequest.resource.requester.display}{\" \"}\n                  <IoOpenOutline />\n                </div>\n                .{\" \"}\n                {referral.ServiceRequest.resource.orderDetail ? (\n                  <span>\n                    {\"Service type is \"}\n                    <div className=\"btn btn-outline-primary disabled\">\n                      {referral.ServiceRequest.resource.orderDetail[0].text}\n                    </div>\n                    .\n                  </span>\n                ) : (\n                  \"Service type has not been confirmed yet.\"\n                )}\n                {referral.ServiceRequest.resource.supportingInfo ? (\n                  <span>\n                    {\" \"}\n                    Attached is a supporting document of\n                    <div\n                      className=\"btn btn-outline-primary\"\n                      onClick={() => showSource(referral.DocumentReference[0])}\n                    >\n                      {referral.DocumentReference[0].type.text}{\" \"}\n                      <IoOpenOutline />\n                    </div>\n                  </span>\n                ) : null}\n              </td>\n            </tr>\n            <tr>\n              <th scoope=\"row\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-link\"\n                  onClick={() => showSource(referral.Task.resource)}\n                >\n                  {referral.Task.resource.resourceType}{\" \"}\n                  <IoOpenOutline />\n                </button>\n              </th>\n              <td>\n                <span>\n                  Referral status is{\" \"}\n                  <div className=\"btn btn-outline-primary disabled\">\n                    {referral.Task?.resource?.status}\n                  </div>\n                  , last modified on{\" \"}\n                  <div className=\"btn btn-outline-primary disabled\">\n                    {referral.Task?.resource?.lastModified}\n                  </div>\n                </span>{\" \"}\n                <span>\n                  Recipient is{\" \"}\n                  <div\n                    className=\"btn btn-outline-primary\"\n                    onClick={() => showSource(referral.Organization?.resource)}\n                  >\n                    {referral.Task?.resource?.owner?.display}{\" \"}\n                    <IoOpenOutline />\n                  </div>\n                </span>\n              </td>\n            </tr>\n            {referral.Organization ? (\n              <tr>\n                <th scoope=\"row\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-link\"\n                    onClick={() => showSource(referral.Organization.resource)}\n                  >\n                    {referral.Organization.resource.resourceType}{\" \"}\n                    <IoOpenOutline />\n                  </button>\n                </th>\n                <td>\n                  <span>\n                    Recipient is{\" \"}\n                    <div className=\"btn btn-outline-primary disabled\">\n                      {referral.Organization.resource.name}\n                    </div>\n                  </span>\n                  {findUUID(referral.Organization.resource) ? (\n                    <span>\n                      Their Unite Us UUID is{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {findUUID(referral.Organization.resource).value}\n                      </div>\n                    </span>\n                  ) : null}\n                </td>\n              </tr>\n            ) : null}\n            {referral.Patient ? (\n              <tr>\n                <th scoope=\"row\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-link\"\n                    onClick={() => showSource(referral.Patient.resource)}\n                  >\n                    {referral.Patient.resource.resourceType}{\" \"}\n                    <IoOpenOutline />\n                  </button>\n                </th>\n                <td>\n                  <div className=\"btn btn-outline-primary disabled\">\n                    {referral.Patient.resource.name[0].family}, {referral.Patient.resource.name[0].given[0]}\n                  </div>\n                </td>\n              </tr>\n            ) : null}\n            {referral.Practitioner ? (\n              <tr>\n                <th scoope=\"row\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-link\"\n                    onClick={() => showSource(referral.Practitioner.resource)}\n                  >\n                    {referral.Practitioner.resource.resourceType}{\" \"}\n                    <IoOpenOutline />\n                  </button>\n                </th>\n                <td>\n                  <div className=\"btn btn-outline-primary disabled\">\n                    {referral.Practitioner.resource.name[0].family}, {referral.Practitioner.resource.name[0].given[0]}\n                  </div>\n                </td>\n              </tr>\n            ) : null}\n\n            {referral.Consent?.map((consent, index) => {\n              return (\n                <tr key={index}>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() => showSource(consent.resource)}\n                    >\n                      {consent.resource.resourceType}{\" \"}\n                      <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td>\n                    <span>\n                      Consent status is{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {consent.resource.status}\n                      </div>\n                      . Scope is{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {consent.resource.scope?.text}\n                      </div>.\n                      {\" \"}Provision period is from \n                      <div className=\"btn btn-outline-primary disabled\">\n                        {consent.resource.provision?.period?.start}\n                      </div>\n                       to \n                       <div className=\"btn btn-outline-primary disabled\">\n                        {consent.resource.provision?.period?.end}\n                      </div>\n                    </span>\n                  </td>\n                </tr>\n              );\n            })}\n\n\n            {referral.DocumentReference?.map((documentReference, index) => {\n              return (\n                <tr key={index}>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() => showSource(documentReference)}\n                    >\n                      {documentReference.resourceType}{\" \"}\n                      <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td>\n                    <span>\n                      Document type is{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {documentReference.type.text}\n                      </div>\n                      . Document description is{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {documentReference.description}\n                      </div>\n                    </span>\n                  </td>\n                </tr>\n              );\n            })}\n\n\n            {referral.Binary?.map((binary, index) => {\n              return (\n                <tr key={index}>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() => showSource(binary)}\n                    >\n                      {binary.resourceType}{\" \"}\n                      <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td>\n                    <span>\n                      Content type is{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {binary.contentType}\n                      </div>.\n                    </span>\n                    {\" \"}\n                    <div className=\"btn btn-link\"><a download='Epic_CRN.pdf' href={`data:application/pdf;base64,${binary.data}`} title='Download pdf document'>Click to download PDF file <IoCloudDownloadSharp /></a></div>\n                  </td>\n                </tr>\n              );\n            })}\n\n            {referral.Communication?.map((communication, index) => {\n              return (\n                <tr key={index}>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() => showSource(communication.resource)}\n                    >\n                      {communication.resource.resourceType}{\" \"}\n                      <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td>\n                    <span>\n                      On{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {communication.resource?.sent}\n                      </div>\n                      , sent from{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {communication.resource?.sender.display}\n                      </div>\n                      to{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {communication.resource?.recipient[0].display}\n                      </div>\n                      .\n                    </span>\n                    {communication.resource.payload ? (\n                      <p>\n                        {\" \"}\n                        Note message:{\" \"}\n                        <div className=\"btn btn-outline-primary disabled\">\n                          {communication.resource.payload[0].contentString}\n                        </div>\n                      </p>\n                    ) : (\n                      <span> Note message is empty.</span>\n                    )}\n                    {communication.resource.payload &&\n                    communication.resource.payload[1]?.contentReference ? (\n                      <p>\n                        {\" \"}\n                        A{\" \"}\n                        <div\n                          className=\"btn btn-outline-primary\"\n                          onClick={() =>\n                            showSource(referral.DocumentReference[0])\n                          }\n                        >\n                          document{\" \"}<IoOpenOutline />\n                        </div>{\" \"}\n                        was attached to the communication.\n                      </p>\n                    ) : null}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n\n      <Modal size=\"lg\" show={show} onHide={closeWindow}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {fullJson?.resourceType} : {fullJson?.id}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <pre id=\"json\">{JSON.stringify(fullJson, undefined, 2)}</pre>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"warning\" onClick={closeWindow}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default ReferralSummary;\n","import EncounterSummary from \"./EncounterSummary\";\nimport CreateReferral from \"./CreateReferral\";\nimport { useState } from \"react\";\nimport ReferralSummary from \"./ReferralSummary\";\n\nfunction Referrals({ onCreate, referralList, currentEncounter, sendNotificationUU, profileName }) {\n  const [showNewReferral, setShowNewReferral] = useState(false);\n\n  const toggleShowNewReferral = () => {\n    setShowNewReferral((showNewReferral) => !showNewReferral);\n  };\n\n  const onCreateReferral = (referral) => {\n    onCreate(referral);\n    toggleShowNewReferral();\n  };\n  return (\n    <div className=\"col-md-9 col-lg-10 px-0\">\n      <div className=\"referrals\">\n        <EncounterSummary\n          toggleShowNewReferral={toggleShowNewReferral}\n          showNewReferral={showNewReferral}\n          currentEncounter={currentEncounter}\n          sendNotificationUU={sendNotificationUU}\n          profileName={profileName}\n        />\n        {showNewReferral ? (\n          <CreateReferral\n            onCreate={onCreateReferral}\n            toggleShowNewReferral={toggleShowNewReferral}\n          />\n        ) : null}\n        <div className=\"referralList\">\n          <div className=\"h5 py-3\">This encounter has {referralList.length > 1 ? referralList.length + ' referrals.' : referralList.length === 1 ? ' 1 referral.' : ' no referrals.'}</div>\n          {referralList.length > 0\n            ? referralList.map((referral, index) => (\n                <ReferralSummary key={index} referral = {referral}/>\n              ))\n            : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Referrals;\n","export const Profile_Epic = {\n  name: 'Epic',\n\n  defaultPatient: {\n    firstName: \"Beverly\",\n    lastName: \"Ccm\",\n    gender: \"Female\",\n    dob: \"01/01/1940\",\n    mrn: \"203722\",\n    fhirId: \"egHmZUd91rLItB1AqGV49Pg3\",\n    uuid: \"b5318891-3dc8-426a-af50-531e106ad1a1\",\n  },\n\n  defaultProvider: {\n    firstName: \"Case\",\n    lastName: \"Manager\",\n    fhirId: \"eaToFIkaJ32mO4K002q3BLw3\",\n    uuid: \"94e5f7ee-1425-42bc-8833-3474b687b125\",\n    groupId: \"bf4aa373-81eb-4da5-9980-2d3e51c57b3c\",\n    networkId: \"145ca925-ba86-490d-b404-35f4fe5ada66\",\n  },\n\n  defaultEncounter: \"eFBT3k94CLm3fCPMNlKH2DQ3\", //\"enZf6GWN2rMGQWF1rqqDgNg3\",\n  defaultBaseUrl:\n    \"https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4\",\n  defaultNotificationUrl:\n    \"https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService\",\n  accessToken : \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ1cm46ZXBpYzphcHBvcmNoYXJkLmN1cnByb2QiLCJjbGllbnRfaWQiOiIyYWViZDQ1Ni02YzlmLTRlYmYtYWU4ZS0wYjc4MTA1MTY0NGEiLCJlcGljLmVjaSI6InVybjplcGljOkN1cnJlbnQtQXBwLU9yY2hhcmQtUHJvZHVjdGlvbiIsImVwaWMubWV0YWRhdGEiOiJVUjEteFpubkdGNUFCMWh2cVVwaXdSQ1hrYzh6bTNlZDh4TlpERjRWN2VPelQtOVlHSUNjaE4za1VpZzRhZ0FfakM1cEZVX3NCdk9QQ2QzV1ZpMHdjYzJTTFYwQU5XSkFGSXNRUnY4djhZVTZ6bXdSWHhvdEhzUEdTaHlQWURSeiIsImVwaWMudG9rZW50eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjIwMjc3MzEzLCJpYXQiOjE2MjAyNzM3MTMsImlzcyI6InVybjplcGljOmFwcG9yY2hhcmQuY3VycHJvZCIsImp0aSI6IjRmNjQ5ZGZlLWI0ODgtNDdlMi04YjdmLTBlMjkzNDY4YzRlNyIsIm5iZiI6MTYyMDI3MzcxMywic3ViIjoiZXhmbzZFNEVYaldzbmhBMU9HVkVsZ3czIn0.od55jY-8la1DDbALRliDJYmbt-hFVp5zNrVa6TqXvX4EQt8tZ3h-Puw61BHMPUFpe1SMJ6D3iRnsXz5Z29rbVO3Vb5-VryyJOv_PqTtjBLX3oI3WA7XLcsR6shp9Jc7X9kIMWRaXK-BoG3uhhMyA2_ueEn_2j2R6ra46zm2JTw-khrXcn1FxvJ2P6Azs5vwnEl2y6X1OPrkblFpFN2C0foWgiCVGFCwVmMghXoJPPNgge5DTSiAWV8PVF1LLQ24PM3tcU8JMIpu1Q52Cs5m1RSczstKJvDtNwgVeQdUGplMu720ykZG2h2BYc_cAQkfQlOS8fNrMKsm-0BD9AZVG4g\"\n};\n\nexport const Profile_Logica = {\n  name: 'Logica',\n\n  defaultPatient: {\n    firstName: \"Aaron\",\n    lastName: \"Alexis\",\n    gender: \"Male\",\n    dob: \"10/26/1989\",\n    mrn: \"smart-9995679\",\n    fhirId: \"smart-9995679\",\n    uuid: \"74216479-7594-413c-9835-9f00a51e5686\",\n  },\n\n  defaultProvider: {\n    firstName: \"Demo\",\n    lastName: \"Provider\",\n    fhirId: \"smart-Practitioner-71482713\",\n    uuid: \"94e5f7ee-1425-42bc-8833-3474b687b125\",\n    groupId: \"bf4aa373-81eb-4da5-9980-2d3e51c57b3c\",\n    networkId: \"145ca925-ba86-490d-b404-35f4fe5ada66\",\n  },\n\n  defaultEncounter: \"smart-5\",\n\n  defaultBaseUrl: \"https://api.logicahealth.org/uufhircrn/open\",\n\n  defaultNotificationUrl:\n    \"https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService\",\n  accessToken: \"\"\n};\n\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Encounters from \"./components/Encounters\";\nimport Referrals from \"./components/Referrals\";\nimport { useState, useEffect } from \"react\";\nimport { Profile_Epic, Profile_Logica } from \"./components/Profiles\";\n\nfunction App() {\n  const defaultProfile = Profile_Epic;\n  const defaultProfileName = defaultProfile.name;\n  const [currentProfileName, setCurrentProfileName] = useState(\n    defaultProfileName\n  );\n  //const [profile, setProfile] = useState(defaultProfile);\n  const [patient, setPatient] = useState(defaultProfile.defaultPatient);\n  const [provider, setProvider] = useState(defaultProfile.defaultProvider);\n  const [currentEncounter, setCurrentEncounter] = useState(\n    defaultProfile.defaultEncounter\n  );\n  const [accessToken, setAccessToken] = useState(defaultProfile.access_token);\n  const [baseUrl, setBaseUrl] = useState(defaultProfile.defaultBaseUrl);\n  const [notificationUrl, setNotificationUrl] = useState(\n    defaultProfile.defaultNotificationUrl\n  );\n  const [referrals, setReferrals] = useState([]);\n  const [encounters, setEncounters] = useState([]);\n\n  const switchProfile = async (profileName) => {\n    //if (profileName === currentProfileName) return\n\n    console.log(\"Switch to profile: \", profileName);\n    setCurrentProfileName(profileName);\n    const newProfile = profileName === \"Logica\" ? Profile_Logica : Profile_Epic;\n    setPatient(newProfile.defaultPatient);\n    setProvider(newProfile.defaultProvider);\n    setBaseUrl(newProfile.defaultBaseUrl);\n    setNotificationUrl(newProfile.defaultNotificationUrl);\n    if (newProfile.name === \"Epic\") {\n      let token = await getAccessToken();\n      setAccessToken(token);\n    } else setAccessToken(newProfile.accessToken);\n  };\n\n  const refreshProfileSettings = async () => {\n    const encounterList = await getEncounters(patient.fhirId, baseUrl);\n    if (encounterList?.length > 0) {\n      await changeCurrentEncounter(encounterList[0].resource.id, baseUrl);\n    }\n  };\n\n  // Create a referral\n  const createReferral = async (referral) => {\n    console.log(\"create referral: \", referral);\n    const nowISO = new Date().toISOString();\n\n    let url = baseUrl + \"/ServiceRequest\";\n    let resource = {\n      resourceType: \"ServiceRequest\",\n      status: \"active\",\n      intent: \"plan\",\n      category: [\n        {\n          coding: [\n            {\n              system: \"http://snomed.info/sct\",\n              code: \"307835004\",\n              display: \"Referral by service (finding)\",\n            },\n          ],\n          text: \"Referral by service\",\n        },\n      ],\n      priority: \"routine\",\n      subject: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.firstName + \" \" + patient.lastName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n        display: \"Hospital Admission\",\n      },\n      authoredOn: nowISO,\n      requester: [\n        {\n          reference: `Practitioner/${provider.fhirId}`,\n          display: provider.firstName + \" \" + provider.lastName,\n        },\n      ],\n      orderDetail: {\n        text: referral.serviceType.text,\n        coding: [\n          {\n            system: \"Unite Us\",\n            code: referral.serviceType.value,\n            display: referral.serviceType.text,\n          },\n        ],\n      },\n    };\n\n    let res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(resource),\n    });\n\n    let data = await res.json();\n    console.log(\"new referral: \", data);\n    let newId = data.id;\n    console.log(\"server request id: \", newId);\n\n    url = baseUrl + \"/Task\";\n    resource = {\n      resourceType: \"Task\",\n      basedOn: [\n        {\n          reference: `ServiceRequest/${newId}`,\n        },\n      ],\n      status: \"requested\",\n      intent: \"plan\",\n      priority: \"routine\",\n      for: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.firstName + \" \" + patient.lastName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n        display: \"Hospital Admission\",\n      },\n      authoredOn: nowISO, //\"2020-09-20T15:41:39Z\",\n      lastModified: nowISO,\n      requester: [\n        {\n          reference: `Practitioner/${provider.fhirId}`,\n          display: provider.firstName + \" \" + provider.lastName,\n        },\n      ],\n      description:\n        referral.description +\n        \"/n referred to : \" +\n        referral.referredToGroupIds.text +\n        \" [\" +\n        referral.referredToGroupIds.value +\n        \"]\",\n      owner: {\n        type: \"Organization\",\n        identifier: {\n          use: \"usual\",\n          system: \"Unite Us\",\n          value: referral.referredToGroupIds.value,\n        },\n        display: referral.referredToGroupIds.text,\n      },\n    };\n\n    res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(resource),\n    });\n\n    data = await res.json();\n    console.log(\"new referral: \", data);\n    newId = data.id;\n    console.log(\"Task id: \", newId);\n\n    await getReferrals();\n  };\n\n  const fetchReferrals = async (\n    encounterId = currentEncounter,\n    referralBaseUrl = baseUrl\n  ) => {\n    const url =\n      referralBaseUrl +\n      \"/Task?encounter=\" +\n      encounterId +\n      \"&_include=Task%3Apatient&_include=Task%3Aencounter&_include=Task%3Arequester&_include=Task%3A\" +\n      \"based-on\" + //(currentProfileName === \"Epic\" ? \"basedon\" : \"based-on\") + \"%3AServiceRequest\" +\n      \"&_include=Task%3Aowner%3AOrganization\";\n\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n      },\n    });\n    const data = await res.json();\n    let entryList = data.total === 0 ? [] : data.entry;\n    if (!entryList) return [];\n    console.log(\"Task bundle received: \", entryList);\n\n    // //_include works at Epic, no need to fetch ServiceRequest seperatedly\n    // const url2 = baseUrl + \"/ServiceRequest?encounter=\" + encounterId;\n    // const res2 = await fetch(url2, {\n    //   method: \"GET\",\n    //   headers: {\n    //     \"Content-type\": \"application/json\",\n    //     Accept: \"application/json\",\n    //     Authorization: accessToken.length > 0 ? \"bearer \" + accessToken : \"\",\n    //   },\n    // });\n    // const data2 = await res2.json();\n    // let entryList2 = data2.total === 0 ? [] : data2.entry;\n    // entryList = entryList.concat(entryList2);\n\n    //filter ServiceRequest and Task\n    // if (entryList.length > 0) {\n    //   entryList = entryList.filter((entry) => {\n    //     return (\n    //       entry.resource.resourceType === \"ServiceRequest\" ||\n    //       entry.resource.resourceType === \"Task\"\n    //     );\n    //   });\n    // }\n\n    // Take all the Task\n    let referralList = [];\n    entryList.forEach((entry, index) => {\n      if (entry.resource.resourceType === \"Task\") {\n        let referral = {\n          id: \"Task/\" + entry.resource.id,\n          Task: entry,\n        };\n        referralList.push(referral);\n      }\n    });\n\n    // Group the other resources with the Task\n    referralList.forEach((referral, index) => {\n      const resource = referral?.Task?.resource;\n      if (!resource) return;\n\n      const patientId = resource.for?.reference;\n      const serviceRequestId = resource.basedOn[0].reference;\n      const practitionerId = resource.requester?.reference;\n      const organizationId = resource.owner?.reference;\n\n      entryList.forEach((entry, index) => {\n        let entryId = entry.resource.id;\n        switch (entry.resource.resourceType) {\n          case \"ServiceRequest\": {\n            if (serviceRequestId === `ServiceRequest/${entryId}`)\n              referral.ServiceRequest = entry;\n            break;\n          }\n          case \"Patient\": {\n            if (patientId === `Patient/${entryId}`) referral.Patient = entry;\n            break;\n          }\n          case \"Organization\": {\n            if (organizationId === `Organization/${entryId}`)\n              referral.Organization = entry;\n            break;\n          }\n          case \"Practitioner\": {\n            if (practitionerId === `Practitioner/${entryId}`)\n              referral.Practitioner = entry;\n            break;\n          }\n          default:\n        }\n      });\n    });\n\n    // Fetch Communications for each Task\n    for (let referral of referralList) {\n      const referralId = referral?.Task?.resource?.id;\n      const communications = await fetchCommunications(referralId);\n      referral.Communication = communications.entry;\n    }\n\n    // Fetch DocumentReferences for each ServiceRequest\n    for (let referral of referralList) {\n      const documentReferences = await fetchDocumentReferences(referral);\n      if (documentReferences?.length > 0)\n        referral.DocumentReference = documentReferences;\n    }\n\n    // Fetch Binaries for all DocumentReferences\n    for (let referral of referralList) {\n      if (referral.DocumentReference?.length > 0) {\n        const binaryList = await fetchBinaries(referral.DocumentReference);\n        if (binaryList?.length > 0) {\n          referral.Binary = binaryList;\n        }\n      }\n    }\n\n    //referralList = referralList.filter((entry) => {\n    //  return entry.Task;\n    //});\n\n    // Fetch Consents\n    if (currentProfileName === \"Epic\") {\n      const consentList = await fetchConsents();\n      if (consentList?.length > 0) {\n        referralList.forEach((entry, index) => {\n          entry.Consent = consentList;\n        });\n      }\n    }\n\n    console.log(\"referral list\", referralList);\n    referralList.sort((a, b) => {\n      const timeA = new Date(a.ServiceRequest.resource.authoredOn).getTime();\n      const timeB = new Date(b.ServiceRequest.resource.authoredOn).getTime();\n      return timeB - timeA;\n    });\n    return referralList;\n  };\n\n  const fetchEncounters = async (\n    patientId = patient.fhirId,\n    encounterBaseUrl = baseUrl\n  ) => {\n    const url = encounterBaseUrl + \"/Encounter?patient=\" + patientId;\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n      },\n    });\n    const data = await res.json();\n\n    const encounterList = data.total > 0 ? data.entry : [];\n\n    encounterList.sort((a, b) => {\n      const timeA = new Date(a.resource.period.start).getTime();\n      const timeB = new Date(b.resource.period.start).getTime();\n      return timeB - timeA;\n    });\n    console.log(\"encounter\", encounterList);\n    return encounterList;\n  };\n\n  // Fetch Communications for a Task\n  const fetchCommunications = async (taskId) => {\n    const url = baseUrl + \"/Communication?part-of=\" + taskId;\n\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n      },\n    });\n    const data = await res.json();\n    console.log(\"communications: \", data);\n    return data;\n  };\n\n  // Fetch DocumentReferences for a ServiceRequest\n  const fetchDocumentReferences = async (referral) => {\n    const documentList = [];\n    const supportingInfo = referral?.ServiceRequest?.resource?.supportingInfo;\n\n    if (!supportingInfo) return documentList;\n\n    for (let entry of supportingInfo) {\n      const url = baseUrl + \"/\" + entry.reference;\n      const res = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n        },\n      });\n      const data = await res.json();\n      console.log(\"documentReference: \", data);\n      if (data?.resourceType === \"DocumentReference\") documentList.push(data);\n    }\n\n    return documentList;\n  };\n\n  // Fetch DocumentReferences for a ServiceRequest\n  const fetchBinaries = async (documentReferenceList) => {\n    const binaryList = [];\n\n    if (!documentReferenceList) return binaryList;\n\n    for (let entry of documentReferenceList) {\n      const url = baseUrl + \"/\" + entry.content[0]?.attachment?.url;\n      const res = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Accept: \"application/fhir+json\",\n          Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n        },\n      });\n      const data = await res.json();\n      if (data?.resourceType === \"Binary\") {\n        const binary = {\n          resourceType: \"Binary\",\n          id: data.id,\n          contentType: data.contentType,\n        };\n        binaryList.push(data);\n      }\n    }\n\n    return binaryList;\n  };\n\n  // Fetch Consent for a Patient\n  const fetchConsents = async (\n    patientFhirId = patient.fhirId,\n    category = \"http://loinc.org|59284-0\",\n    status = \"active\"\n  ) => {\n    const url = `${baseUrl}/Consent?patient=${patientFhirId}&category=${category}&status=${status}`;\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n      },\n    });\n    const data = await res.json();\n    console.log(\"consent: \", data);\n    return data.entry;\n  };\n\n  const changeCurrentEncounter = async (encounterSelected, currentBaseUrl) => {\n    //if (encounterSelected === currentEncounter) return;\n\n    setCurrentEncounter(encounterSelected);\n    await getReferrals(encounterSelected, currentBaseUrl);\n    return;\n  };\n\n  const getReferrals = async (encounterSelected, referralBaseUrl) => {\n    const data = await fetchReferrals(encounterSelected, referralBaseUrl);\n    setReferrals(data);\n  };\n\n  const getEncounters = async (patientId, encounterBaseUrl) => {\n    const data = await fetchEncounters(patientId, encounterBaseUrl);\n    setEncounters(data);\n    return data;\n  };\n\n  const sendNotificationUU = async () => {\n    const url = notificationUrl;\n    const notification = {\n      resourceType: \"Bundle\",\n      type: \"Event\",\n      entry: [\n        {\n          fullUrl: baseUrl + \"/Encounter/\" + currentEncounter,\n        },\n      ],\n    };\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"x-api-key\": \"sfsdfddfdsfsdfs32342343\", //\"wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03\",\n      },\n      body: JSON.stringify(notification),\n    });\n    const data = await res.json();\n    console.log(\"notification response: \", data);\n    return data;\n  };\n\n  const getAccessToken = async () => {\n    const url =\n      \"https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/authentication/token\";\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        \"x-api-key\": \"sfsdfddfdsfsdfs32342343\", //\"wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      body: JSON.stringify({\n        privateKey: null,\n      }),\n    });\n    const data = await res.json();\n    const token = data.body.access_token;\n    console.log(\"access token \", token);\n    return token;\n  };\n\n  useEffect(() => {\n    const setProfile = async (profileName) => {\n      await switchProfile(profileName);\n    };\n\n    setProfile(defaultProfileName);\n  }, []);\n\n  useEffect(() => {\n    const updateFhir = async () => {\n      await refreshProfileSettings();\n    };\n\n    updateFhir();\n  }, [accessToken]);\n\n  return (\n    <div className=\"App\">\n      <Header\n        patient={patient}\n        provider={provider}\n        profileName={currentProfileName}\n        switchProfile={switchProfile}\n      />\n      <div className=\"row mt-1 mx-0\">\n        <Encounters\n          encounterList={encounters}\n          currentEncounter={currentEncounter}\n          changeCurrentEncounter={changeCurrentEncounter}\n          refreshEncounters={getEncounters}\n        />\n        <Referrals\n          onCreate={createReferral}\n          referralList={referrals}\n          currentEncounter={currentEncounter}\n          sendNotificationUU={sendNotificationUU}\n          profileName={currentProfileName}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}