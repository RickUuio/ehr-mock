{"version":3,"sources":["components/Patient.js","components/Provider.js","components/ProfileSelector.js","components/Header.js","components/Encounters.js","components/EncounterSummary.js","components/CreateReferral.js","components/ReferralSummary.js","components/StatusSelector.js","components/AddNote.js","components/Referrals.js","components/Profiles.js","App.js","reportWebVitals.js","index.js"],"names":["Patient","patient","className","style","color","firstName","lastName","dob","gender","mrn","fhirId","Provider","provider","uuid","ProfileSelector","profileName","switchProfile","role","aria-label","id","type","name","autoComplete","defaultChecked","onClick","htmlFor","Header","title","defaultProps","Encounters","encounterList","currentEncounter","changeCurrentEncounter","refreshEncounters","console","log","length","map","encounter","index","selected","resource","eClassName","visible","encounterSelected","href","fullUrl","period","start","split","class","display","EncounterSummary","toggleShowNewReferral","showNewReferral","sendNotificationUU","toggle","disabled","CreateReferral","onCreate","useState","referredToGroupIds","setReferredToGroupIds","referredFromGroupId","setReferredFromGroupId","networkId","setNetworkId","serviceType","setServiceType","description","setDescription","attachDocument","setAttachDocument","onSubmit","e","preventDefault","placeholder","readOnly","value","onChange","target","text","options","selectedIndex","rows","cols","checked","for","ReferralSummary","referral","showFhirSource","editReferralStatus","showAddNoteWindow","baseUrl","sendUUNotification","expandReferralId","setExpandReferralId","showSource","fullJson","findUUID","identifier","find","entry","system","toUpperCase","expandStatus","referralId","removeReferral","a","trackingItem","full_url","fetch","method","headers","Accept","body","JSON","stringify","res","json","data","item","response","removeCommunication","communication","received","comNum","status","rowColor","Task","data-bs-toggle","data-bs-target","ServiceRequest","aria-expanded","aria-controls","authoredOn","data-bs-placement","currentStatus","orderDetail","owner","Communication","core_referral_id","rel","pop","colSpan","scoope","resourceType","Practitioner","requester","supportingInfo","DocumentReference","lastModified","Organization","family","given","Consent","consent","scope","provision","end","documentReference","Binary","binary","contentType","download","sent","sender","recipient","payload","contentString","contentReference","reference","includes","StatusSelector","showReferralStatus","currentReferralStatus","closeReferralStatusEdit","newReferralStatus","setNewReferralStatus","rejectReason","setRejectReason","rejectReasonNote","setRejectReasonNote","enforceBusinessRule","setEnforceBusinessRule","closeStatusEdit","changeStatus","newStatus","statusEnabled","stageColor","stage","colorDone","newStage","Modal","size","show","onHide","closeButton","Title","Body","rowSpan","display_name","option","Footer","Button","variant","reason","note","AddNote","showAddNote","closeAddNote","noteText","setNoteText","callResponse","setCallResponse","refreshCount","setRefreshCount","showMessageToast","setShowMessageToast","communicationList","setCommunicationList","waitMessage","setWaitMessage","useEffect","updateList","queryParams","total","sendNote","sentAt","Math","floor","Date","now","noteColor","noteAlign","responseTo","recipients","responseToStr","forEach","closeAddNoteWindow","backgroundColor","opacity","aria-live","aria-atomic","calssName","Referrals","referralList","updateReferralStatus","setShowNewReferral","setShowSource","setShowReferralStatus","setFullJson","setCurrentReferralStatus","editReferralId","setEditReferralId","setShowAddNote","currentReferral","setCurrentReferral","closeWindow","undefined","Profile_Epic","defaultPatient","defaultProvider","groupId","defaultEncounter","defaultDocumentReference","defaultBaseUrl","defaultNotificationUrl","accessToken","Profile_Epic_2","Profile_Logica","App","defaultProfile","defaultProfileName","currentProfileName","setCurrentProfileName","setPatient","setProvider","setCurrentEncounter","access_token","setAccessToken","setBaseUrl","notificationUrl","setNotificationUrl","referrals","setReferrals","encounters","setEncounters","sampleDocumentReference","setSampleDocumentReference","defaultToastMessage","toastMessage","setToastMessage","progress","setProgress","newProfile","getAccessToken","token","refreshProfileSettings","getEncounters","createReferral","nowISO","toISOString","url","intent","category","coding","code","priority","subject","newServiceRequestId","basedOn","newTaskId","partOf","newCommunicationId","getReferrals","fetchReferrals","encounterId","referralBaseUrl","Authorization","entryList","push","patientId","serviceRequestId","practitionerId","organizationId","entryId","fetchCommunications","communications","checkCommunication","fetchDocumentReferences","documentReferences","fetchBinaries","binaryList","lookupUUReferralId","fetchConsents","consentList","sort","b","timeA","getTime","fetchEncounters","encounterBaseUrl","taskId","documentList","documentReferenceList","content","attachment","patientFhirId","fhirUrl","currentBaseUrl","notification","statusCode","message","privateKey","taskFhirId","resourceId","task","eTag","epicCode","mapToEpicCode","statusReason","etag","uuCode","setProfile","updateFhir","data-bs-dismiss","width","aria-valuenow","aria-valuemin","aria-valuemax","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d1d73b6.chunk.js","sourcesContent":["import { FaRegUser } from 'react-icons/fa';\n\nconst Patient = ({ patient }) => {\n  return (\n    <div className=\"p-2\">\n      <h4 style={{ color: 'yellow' }}>\n        <FaRegUser />\n        {patient.firstName} {patient.lastName}\n      </h4>\n      <h6>\n        <span className=\"badge bg-light text-dark\">DOB</span> : {patient.dob}\n        <span> </span>\n        <span className=\"badge bg-light text-dark\">Gender</span> :{' '}\n        {patient.gender}\n      </h6>\n      <h6>\n        <span className=\"badge bg-light text-dark\">MRN</span> : {patient.mrn}\n      </h6>\n      <h6>\n        <span className=\"badge bg-light text-dark\">FHIR ID</span> :{' '}\n        {patient.fhirId}\n      </h6>\n    </div>\n  );\n};\n\nexport default Patient;\n","import { FaUserMd } from 'react-icons/fa';\n\nconst Provider = ({ provider }) => {\n  return (\n    <div className=\"p-2\">\n      <h4 style={{ color: 'HotPink' }}>\n        {provider.firstName} {provider.lastName} <FaUserMd></FaUserMd>\n      </h4>\n      <h6>\n        <span className=\"badge bg-light text-dark\">FHIR ID</span> :{' '}\n        {provider.fhirId}\n      </h6>\n      <h6>\n        <span className=\"badge bg-light text-dark\">UUID </span> :{' '}\n        {provider.uuid}\n      </h6>\n    </div>\n  );\n};\n\nexport default Provider;\n","const ProfileSelector = ({ profileName, switchProfile }) => {\n  return (\n    <div\n      className=\"btn-group mb-2\"\n      role=\"group\"\n      aria-label=\"Profile selector\"\n      id=\"profileGroup\"\n    >\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnProfile\"\n        id=\"profileEpic\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === 'Epic'}\n        onClick={() => {\n          profileName = 'Epic';\n          switchProfile('Epic');\n        }}\n      />\n      <label className=\"btn btn-outline-danger\" htmlFor=\"profileEpic\">\n        Calvin @Epic\n      </label>\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnProfile\"\n        id=\"profileEpic2\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === 'Epic2'}\n        onClick={() => {\n          profileName = 'Epic2';\n          switchProfile('Epic2');\n        }}\n      />\n      <label className=\"btn btn-outline-danger\" htmlFor=\"profileEpic2\">\n        Beverly @Epic\n      </label>\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnProfile\"\n        id=\"profileLogica\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === 'Logica'}\n        onClick={() => {\n          profileName = 'Logica';\n          switchProfile('Logica');\n        }}\n      />\n      <label className=\"btn btn-outline-info\" htmlFor=\"profileLogica\">\n        Beverly @Logica\n      </label>\n    </div>\n  );\n};\n\nexport default ProfileSelector;\n","import PropTypes from 'prop-types';\nimport Patient from './Patient';\nimport Provider from './Provider';\nimport ProfileSelector from './ProfileSelector';\nimport { FaFire } from 'react-icons/fa';\n\nconst Header = ({ title, patient, provider, profileName, switchProfile }) => {\n  return (\n    <header>\n      <div id=\"navbarTop\">\n        <div className=\"row\">\n          <div className=\"col-lg-6 col-md-12 order-lg-2\">\n            <h2 className=\"pt-4\">\n              <FaFire style={{ color: '#d60c05ee' }} /> {title}\n            </h2>\n            <ProfileSelector\n              profileName={profileName}\n              switchProfile={switchProfile}\n            />\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 order-lg-1\">\n            <Patient patient={patient} />\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 order-lg-3\">\n            <Provider provider={provider} />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: 'Mock EHR : : Social Care Referrals',\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n// const headingStyle = {\n//   color: \"white\",\n//   backgroundColor: \"#2c405a\",\n// };\n\nexport default Header;\n","import { FcRefresh } from 'react-icons/fc';\nimport { FaCalendarCheck } from 'react-icons/fa';\n\nconst Encounters = ({\n  encounterList,\n  currentEncounter = 'smart-2',\n  changeCurrentEncounter,\n  refreshEncounters,\n}) => {\n  const refresh = () => {\n    console.log(\"Retrieving patient's encounters\");\n    refreshEncounters();\n  };\n\n  const setCurrentEncounter = (encounterSelected) => {\n    changeCurrentEncounter(encounterSelected);\n  };\n\n  return (\n    <div className=\"encounter col-md-3 col-lg-2 mx-0 px-0\">\n      <div\n        className=\"btn btn-default btn-lg btn-block table-hover mx-0\"\n        onClick={refresh}\n      >\n        All Encounters\n        <div className=\"badge bg-primary mx-2\">{encounterList.length}</div>\n        <FcRefresh />\n      </div>\n\n      <dl>\n        {encounterList.map((encounter, index) => {\n          const selected = encounter.resource.id === currentEncounter;\n          const eClassName = selected\n            ? 'row list-hover m-0 px-2 text-break selected'\n            : 'row list-hover m-0 px-2 text-break';\n          const visible = selected ? 'visible' : 'invisible';\n\n          return (\n            <div\n              key={index}\n              className={eClassName}\n              onClick={() => setCurrentEncounter(encounter.resource.id)}\n            >\n              <dt>\n                <a href={encounter.fullUrl}>\n                  {encounter.resource.id}{' '}\n                  <FaCalendarCheck className={visible} />\n                </a>\n              </dt>\n              <dd>\n                {<div>{encounter.resource.period.start.split('T')[0]}</div>}\n                {<div> {encounter.resource.class.display}</div>}\n              </dd>\n            </div>\n          );\n        })}\n      </dl>\n    </div>\n  );\n};\n\nexport default Encounters;\n","const EncounterSummary = ({\n  toggleShowNewReferral,\n  showNewReferral,\n  currentEncounter,\n  sendNotificationUU,\n  profileName,\n}) => {\n  const toggle = () => {\n    toggleShowNewReferral();\n  };\n\n  const sendNotification = () => {\n    console.log('sending an encounter notification to Unite Us...');\n    sendNotificationUU();\n  };\n\n  return (\n    <div className=\"encounterSummary\">\n      <div className=\"row pt-2 row-cols-1 row-cols-lg-3\">\n        <div className=\"col mx-auto text-break\">\n          <h4>Current Encounter: {currentEncounter}</h4>\n        </div>\n        <div className=\"col\">\n          {!showNewReferral ? (\n            <button\n              className=\"btn btn-primary btn-block mx-1\"\n              onClick={toggle}\n              disabled={profileName !== 'Logica'}\n            >\n              Create New Referral\n            </button>\n          ) : (\n            <button\n              className=\"btn btn-warning btn-block col mx-1\"\n              onClick={toggle}\n            >\n              Cancel New Referral\n            </button>\n          )}\n        </div>\n        <div className=\"col\">\n          <button\n            className=\"btn btn-primary btn-block col mx-1\"\n            onClick={sendNotification}\n          >\n            Send Encounter Notification\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EncounterSummary;\n","import { useState } from 'react';\nimport { GrAttachment } from 'react-icons/gr';\n\nexport const CreateReferral = ({ onCreate, toggleShowNewReferral }) => {\n  const [referredToGroupIds, setReferredToGroupIds] = useState('');\n  const [referredFromGroupId, setReferredFromGroupId] = useState('');\n  const [networkId, setNetworkId] = useState('');\n  const [serviceType, setServiceType] = useState('');\n  const [description, setDescription] = useState('');\n  const [attachDocument, setAttachDocument] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    /*     if (!serviceType) {\n      alert('Please select a service for the referral!');\n      return;\n    } */\n\n    onCreate({\n      serviceType,\n      description,\n      referredToGroupIds,\n      referredFromGroupId,\n      networkId,\n      attachDocument,\n    });\n\n    setReferredToGroupIds('');\n    setReferredFromGroupId('demo-hospital');\n    setNetworkId('demo-network');\n    setServiceType('');\n    setDescription('');\n    setAttachDocument(false);\n  };\n\n  const cancelReferralCreation = () => {\n    toggleShowNewReferral();\n  };\n  return (\n    <div className=\"newReferral\">\n      <form className=\"add-form\" onSubmit={onSubmit}>\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SENDING NETWORK</label>\n              <div>\n                <input\n                  className=\"form-select\"\n                  type=\"text\"\n                  placeholder=\"Healthy Demo Network\"\n                  readOnly\n                  disabled\n                  value={networkId}\n                  onChange={(e) => setNetworkId(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">RECEIVING NETWORK</label>\n              <div>\n                <input\n                  className=\"form-select\"\n                  type=\"text\"\n                  readOnly\n                  disabled\n                  placeholder=\"Healthy Demo Network\"\n                  value={networkId}\n                  onChange={(e) => setNetworkId(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SENDER</label>\n              <div>\n                <input\n                  className=\"form-select\"\n                  type=\"text\"\n                  readOnly\n                  disabled\n                  placeholder=\"Local Hospital Center\"\n                  value={referredFromGroupId}\n                  onChange={(e) => setReferredFromGroupId(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-lg-6\">\n            {/* <div className=\"form-group\">\n              <label className=\"col-form-label\">SERVICE TYPE</label>\n              <div>\n                <select\n                  className=\"form-select\"\n                  value={serviceType.value}\n                  onChange={(e) =>\n                    setServiceType({\n                      value: e.target.value,\n                      text: e.target.options[e.target.selectedIndex].text,\n                    })\n                  }\n                >\n                  <option>Select a service ...</option>\n                  <option value=\"f020d616-5016-4fb7-9fad-91d8d99cd7a1\">\n                    Emergency Food\n                  </option>\n                  <option value=\"f6760383-7fc4-442b-b686-fc5055bfec06\">\n                    Emergency Housing\n                  </option>\n                </select>\n              </div>\n            </div>\n */}\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">RECEIPIENT</label>\n              <div>\n                <select\n                  className=\"form-select\"\n                  value={referredToGroupIds.value}\n                  onChange={(e) =>\n                    setReferredToGroupIds({\n                      value: e.target.value,\n                      text: e.target.options[e.target.selectedIndex].text,\n                    })\n                  }\n                >\n                  <option>Select an organization ...</option>\n\n                  {/*                   <option value=\"15179\">\n                    NC Housing & Transportation Services\n                  </option> */}\n                  <option value=\"15195\">\n                    Asian Resource - SacramentoWorks\n                  </option>\n                  <option value=\"15191\">\n                    BusRides Sustainable Transportation Act - BusRides Transport\n                  </option>\n                  <option value=\"15199\">\n                    Cumberland Legal Assistance - Youth Services\n                  </option>\n                  <option value=\"14742\">\n                    Housing California - Housing Assistance\n                  </option>\n                  <option value=\"15207\">\n                    James Bentley Treatment Program - Mental Health Skill\n                    Building\n                  </option>\n                  <option value=\"15211\">Kroger - Food Benefits Program</option>\n                  <option value=\"15215\">Legal Aid - Housing Law</option>\n                  <option value=\"15219\">\n                    Planned Parenthood Mohawk Hudson - Saratoga Springs Center -\n                    Youth Health Promoters\n                  </option>\n                  <option value=\"14733\">\n                    River City Food Bank - Food Pantry\n                  </option>\n                  <option value=\"15183\">\n                    Santa Fe Medical Clinic - Medical Services\n                  </option>\n                  <option value=\"15184\">\n                    Santa Fe Medical Clinic - Dental Services\n                  </option>\n                  <option value=\"15200\">\n                    St. Mary's Shelter - Men's Emergency Shelter\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">INITIAL COMMUNICATION</label>\n              <div>\n                <textarea\n                  className=\"form-control\"\n                  rows=\"3\"\n                  cols=\"50\"\n                  placeholder=\"Enter a description for the referral\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <div className=\"form-check form-switch mx-2 text-start\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  id=\"flexSwitchCheckDefault\"\n                  checked={attachDocument}\n                  onChange={(e) => setAttachDocument(e.target.checked)}\n                />\n                <label\n                  className=\"form-check-label\"\n                  for=\"flexSwitchCheckDefault\"\n                >\n                  Attach document to the communication{' '}\n                  <GrAttachment></GrAttachment>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row d-inline\">\n          <input\n            value=\"Cancel\"\n            className=\"btn btn-warning col-md-6 mt-4\"\n            onClick={cancelReferralCreation}\n            readOnly\n          />\n\n          <input\n            value=\"Submit\"\n            className=\"btn btn-primary col-md-6 mt-4\"\n            onClick={onSubmit}\n            readOnly\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateReferral;\n","import { IoOpenOutline, IoCloudDownloadSharp } from 'react-icons/io5';\nimport { useState } from 'react';\n// import { MdExpandLess, MdExpandMore } from \"react-icons/md\";\nimport { FaEdit } from 'react-icons/fa';\nimport { BiMessageEdit } from 'react-icons/bi';\n\nfunction ReferralSummary({\n  referral,\n  showFhirSource,\n  editReferralStatus,\n  showAddNoteWindow,\n  baseUrl,\n  sendUUNotification,\n}) {\n  const [expandReferralId, setExpandReferralId] = useState('');\n\n  const showSource = (fullJson) => {\n    showFhirSource(fullJson, true);\n  };\n\n  const editStatus = (referralId, currentStatus) => {\n    editReferralStatus(referralId, currentStatus);\n  };\n\n  let findUUID = (resource) => {\n    const cboUUID = resource.identifier.find(\n      (entry) =>\n        entry.system.toUpperCase() ===\n        'HTTPS://UNITEUS.COM/IO/STRUCTUREDEFINITION/CBO-UUID'\n    );\n    return cboUUID;\n  };\n\n  const toggleExpand = (referralId) => {\n    if (expandReferralId === referralId) setExpandReferralId('');\n    else setExpandReferralId(referralId);\n  };\n\n  const expandStatus = (referralId) => {\n    return expandReferralId === referralId;\n  };\n\n  const rowColor = (status) => {\n    switch (status) {\n      case 'accepted':\n        return 'primary';\n      case 'in-progress':\n        return 'info';\n      case 'rejected':\n        return 'danger';\n      case 'failed':\n        return 'danger';\n      case 'completed':\n        return 'success';\n      case 'cancelled':\n        return 'danger';\n      default:\n        return 'light';\n    }\n  };\n\n  const removeReferral = async () => {\n    const fullUrl = referral.trackingItem.full_url;\n    console.log('remove referral: ', fullUrl);\n    const url =\n      'https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/resource_tracking/delete';\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343',\n      },\n      body: JSON.stringify({\n        full_url: fullUrl,\n      }),\n    });\n    const data = await res.json();\n    const item = data.response;\n    referral.trackingItem = null;\n    setExpandReferralId('');\n    console.log('remove item: ', item);\n    return item;\n  };\n\n  const removeCommunication = async (communication) => {\n    const fullUrl = `${baseUrl}/Communication/${communication.resource.id}`;\n    console.log('remove communication: ', fullUrl);\n    const url =\n      'https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/communication/delete';\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343',\n      },\n      body: JSON.stringify({\n        fullUrl: fullUrl,\n      }),\n    });\n    const data = await res.json();\n    const item = data.response;\n    communication.received = false;\n    referral.comNum = referral.comNum - 1;\n    setExpandReferralId('');\n    console.log('remove item: ', item);\n    return item;\n  };\n\n  const sendCommunicationNotification = (fhirId) => {\n    console.log('sending a communication notification to Unite Us...');\n    sendUUNotification(fhirId, 'Communication');\n  };\n\n  const sendTaskNotification = (fhirId) => {\n    console.log('sending a task notification to Unite Us...');\n    sendUUNotification(fhirId, 'Task');\n  };\n\n  return (\n    <>\n      <tr\n        className={\n          'align-middle table-' + rowColor(referral.Task?.resource?.status)\n        }\n        data-bs-toggle=\"collapse\"\n        data-bs-target={'#referral' + referral.ServiceRequest.resource.id}\n        aria-expanded=\"false\"\n        aria-controls={'referral' + referral.ServiceRequest.resource.id}\n        onClick={() => toggleExpand(referral.ServiceRequest.resource.id)}\n        role=\"button\"\n      >\n        <td>{referral.ServiceRequest.resource.authoredOn}</td>\n        <td>\n          <div\n            className=\"btn btn-outline-primary my-0\"\n            data-bs-toggle=\"tooltip\"\n            title=\"Click to edit referral status\"\n            data-bs-placement=\"top\"\n            onClick={() =>\n              editStatus(\n                referral.Task?.resource?.id,\n                referral.Task?.resource?.status\n              )\n            }\n          >\n            {referral.Task?.resource?.status} <FaEdit></FaEdit>\n          </div>\n        </td>\n        <td>\n          {referral.ServiceRequest.resource.orderDetail\n            ? referral.ServiceRequest.resource.orderDetail[0].text\n            : 'Not Confirmed'}\n        </td>\n        <td>{referral.Task?.resource?.owner?.display}</td>\n        <td>\n          <div role=\"button\" onClick={() => showAddNoteWindow(referral)}>\n            <div className=\"badge bg-primary\">\n              {referral.Communication?.length || '0'}\n            </div>{' '}\n            <BiMessageEdit className=\"text-primary \" />\n          </div>\n        </td>\n        {/* <td>\n          <div className=\"form-check form-switch mx-2 text-start\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              role=\"button\"\n              id={\"flexSwitchCheck\" + referral.ServiceRequest.resource.id}\n              checked={expandStatus(referral.ServiceRequest.resource.id)}\n              onChange={() => toggleExpand(referral.ServiceRequest.resource.id)}\n            />\n            <label\n              className=\"form-check-label\"\n              role=\"button\"\n              for={\"flexSwitchCheck\" + referral.ServiceRequest.resource.id}\n            >\n              Fhir Resources{\" \"}\n              {expandStatus(referral.ServiceRequest.resource.id) ? (\n                <MdExpandLess></MdExpandLess>\n              ) : (\n                <MdExpandMore></MdExpandMore>\n              )}\n            </label>\n          </div>\n        </td> */}\n        <td>\n          {referral.trackingItem ? (\n            <a\n              href={`https://app.uniteustraining.com/dashboard/referrals/sent/all/${referral.trackingItem.core_referral_id}`}\n              data-bs-toggle=\"tooltip\"\n              title={referral.trackingItem.core_referral_id}\n              data-bs-placement=\"top\"\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              {'...' + referral.trackingItem.core_referral_id.split('-').pop()}\n            </a>\n          ) : null}\n        </td>\n        <td>{expandStatus(referral.ServiceRequest.resource.id) ? '-' : '+'}</td>\n      </tr>\n      <tr\n        className={\n          expandStatus(referral.ServiceRequest.resource.id)\n            ? 'table-light'\n            : 'collapse'\n        }\n        id={'referral' + referral.ServiceRequest.resource.id}\n      >\n        <td colSpan=\"7\">\n          <div className=\"row px-3\">\n            <table className=\"table table-sm align-middle text-start\">\n              <tbody>\n                {referral.trackingItem ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() => showSource(referral.trackingItem)}\n                      >\n                        Task Tracking <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      Referral created in Unite Us{' '}\n                      <a\n                        href={`https://app.uniteustraining.com/dashboard/referrals/sent/all/${referral.trackingItem.core_referral_id}`}\n                        data-bs-toggle=\"tooltip\"\n                        title={referral.trackingItem.core_referral_id}\n                        data-bs-placement=\"top\"\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        {referral.trackingItem.core_referral_id}\n                      </a>\n                    </td>\n                    <td>\n                      <button\n                        className=\"btn btn-sm btn-danger\"\n                        onClick={removeReferral}\n                      >\n                        Remove Referral Link\n                      </button>\n                    </td>\n                  </tr>\n                ) : null}\n                <tr>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() =>\n                        showSource(referral.ServiceRequest.resource)\n                      }\n                    >\n                      {referral.ServiceRequest.resource.resourceType}{' '}\n                      <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td colSpan=\"2\">\n                    Referral was authored on{' '}\n                    <div className=\"btn btn-outline-primary disabled\">\n                      {referral.ServiceRequest.resource.authoredOn}\n                    </div>{' '}\n                    by{' '}\n                    <div\n                      className=\"btn btn-outline-primary\"\n                      onClick={() => showSource(referral.Practitioner.resource)}\n                    >\n                      {referral.ServiceRequest.resource.requester.display}{' '}\n                      <IoOpenOutline />\n                    </div>\n                    .{' '}\n                    {referral.ServiceRequest.resource.orderDetail ? (\n                      <span>\n                        {'Service type is '}\n                        <div className=\"btn btn-outline-primary disabled\">\n                          {referral.ServiceRequest.resource.orderDetail[0].text}\n                        </div>\n                        .\n                      </span>\n                    ) : (\n                      'Service type has not been confirmed yet.'\n                    )}\n                    {referral.ServiceRequest.resource.supportingInfo ? (\n                      <span>\n                        {' '}\n                        Attached is a supporting document of\n                        <div\n                          className=\"btn btn-outline-primary\"\n                          onClick={() =>\n                            showSource(referral.DocumentReference[0])\n                          }\n                        >\n                          {referral.DocumentReference[0].type.text}{' '}\n                          <IoOpenOutline />\n                        </div>\n                      </span>\n                    ) : null}\n                  </td>\n                </tr>\n                <tr>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() => showSource(referral.Task.resource)}\n                    >\n                      {referral.Task.resource.resourceType} <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td>\n                    <span>\n                      Referral status is{' '}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Task?.resource?.status}\n                      </div>\n                      , last modified on{' '}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Task?.resource?.lastModified}\n                      </div>\n                    </span>{' '}\n                    <span>\n                      Recipient is{' '}\n                      <div\n                        className=\"btn btn-outline-primary\"\n                        onClick={() =>\n                          showSource(referral.Organization?.resource)\n                        }\n                      >\n                        {referral.Task?.resource?.owner?.display}{' '}\n                        <IoOpenOutline />\n                      </div>\n                    </span>\n                  </td>\n                  <td>\n                    <button\n                      className=\"btn btn-sm btn-primary\"\n                      onClick={() =>\n                        sendTaskNotification(referral.Task?.resource?.id)\n                      }\n                    >\n                      Send Task Notification\n                    </button>\n                  </td>\n                </tr>\n                {referral.Organization ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() =>\n                          showSource(referral.Organization.resource)\n                        }\n                      >\n                        {referral.Organization.resource.resourceType}{' '}\n                        <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      <span>\n                        Recipient is{' '}\n                        <div className=\"btn btn-outline-primary disabled\">\n                          {referral.Organization.resource.name}\n                        </div>\n                      </span>\n                      {findUUID(referral.Organization.resource) ? (\n                        <span>\n                          Their Unite Us UUID is{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {findUUID(referral.Organization.resource).value}\n                          </div>\n                        </span>\n                      ) : null}\n                    </td>\n                    <td>\n                      {/*                       <button className=\"btn btn-sm btn-primary disabled\">\n                        Look up UU Provider\n                      </button> */}\n                    </td>\n                  </tr>\n                ) : null}\n                {referral.Patient ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() => showSource(referral.Patient.resource)}\n                      >\n                        {referral.Patient.resource.resourceType}{' '}\n                        <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Patient.resource.name[0].family},{' '}\n                        {referral.Patient.resource.name[0].given[0]}\n                      </div>\n                    </td>\n                    <td>\n                      {/*                       <button className=\"btn btn-sm btn-primary disabled\">\n                        Look up UU Client\n                      </button> */}\n                    </td>\n                  </tr>\n                ) : null}\n                {referral.Practitioner ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() =>\n                          showSource(referral.Practitioner.resource)\n                        }\n                      >\n                        {referral.Practitioner.resource.resourceType}{' '}\n                        <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Practitioner.resource.name[0].family},{' '}\n                        {referral.Practitioner.resource.name[0].given[0]}\n                      </div>\n                    </td>\n                    <td>\n                      {/*                       <button className=\"btn btn-sm btn-primary disabled\">\n                        Look up UU User\n                      </button> */}\n                    </td>\n                  </tr>\n                ) : null}\n\n                {referral.Consent?.map((consent, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(consent.resource)}\n                        >\n                          {consent.resource.resourceType} <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          Consent status is{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.status}\n                          </div>\n                          . Scope is{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.scope?.text}\n                          </div>\n                          . Provision period is from\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.provision?.period?.start}\n                          </div>\n                          to\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.provision?.period?.end}\n                          </div>\n                        </span>\n                      </td>\n                      <td>\n                        {/*                         <button className=\"btn btn-sm btn-primary disabled\">\n                          Check UU Consent\n                        </button> */}\n                      </td>\n                    </tr>\n                  );\n                })}\n\n                {referral.DocumentReference?.map((documentReference, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(documentReference)}\n                        >\n                          {documentReference.resourceType} <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          Document type is{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {documentReference.type.text}\n                          </div>\n                          . Document description is{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {documentReference.description}\n                          </div>\n                        </span>\n                      </td>\n                      <td>\n                        {/*                         <button className=\"btn btn-sm btn-primary disabled\">\n                          Check Document Status\n                        </button> */}\n                      </td>\n                    </tr>\n                  );\n                })}\n\n                {referral.Binary?.map((binary, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(binary)}\n                        >\n                          {binary.resourceType} <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td colSpan=\"2\">\n                        <span>\n                          Content type is{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {binary.contentType}\n                          </div>\n                          .\n                        </span>{' '}\n                        <div className=\"btn btn-link\">\n                          <a\n                            download=\"Epic_CRN.pdf\"\n                            href={`data:application/pdf;base64,${binary.data}`}\n                            title=\"Download pdf document\"\n                          >\n                            Click to download PDF file <IoCloudDownloadSharp />\n                          </a>\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n\n                {referral.Communication?.map((communication, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(communication.resource)}\n                        >\n                          {communication.resource.resourceType}{' '}\n                          <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          On{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {communication.resource?.sent}\n                          </div>\n                          , sent from{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {communication.resource?.sender.display}\n                          </div>\n                          to{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {communication.resource?.recipient[0].display}\n                          </div>\n                          .\n                        </span>\n                        {communication.resource.payload ? (\n                          <div>\n                            {' '}\n                            Note message:{' '}\n                            <div className=\"btn btn-outline-primary disabled\">\n                              {communication.resource.payload[0].contentString}\n                            </div>\n                          </div>\n                        ) : (\n                          <span> Note message is empty.</span>\n                        )}\n                        {communication.resource.payload &&\n                        communication.resource.payload[1]?.contentReference ? (\n                          <div>\n                            {' '}\n                            A{' '}\n                            <div\n                              className=\"btn btn-outline-primary\"\n                              onClick={() =>\n                                showSource(referral.DocumentReference[0])\n                              }\n                            >\n                              document <IoOpenOutline />\n                            </div>{' '}\n                            was attached to the communication.\n                          </div>\n                        ) : null}\n                      </td>\n                      <td>\n                        {communication.resource.sender.reference.includes(\n                          'Practitioner/'\n                        ) ? (\n                          communication.received ? (\n                            <button\n                              className=\"btn btn-sm btn-primary\"\n                              onClick={() =>\n                                sendCommunicationNotification(\n                                  communication.resource.id\n                                )\n                              }\n                            >\n                              {' '}\n                              Send Communication Notification\n                            </button>\n                          ) : (\n                            <button\n                              className=\"btn btn-sm btn-danger\"\n                              onClick={() => removeCommunication(communication)}\n                            >\n                              Remove Communication Link\n                            </button>\n                          )\n                        ) : (\n                          <button\n                            className=\"btn btn-sm btn-warning\"\n                            onClick={() => showAddNoteWindow(referral)}\n                          >\n                            Add a new note\n                          </button>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </td>\n      </tr>\n    </>\n  );\n}\n\nexport default ReferralSummary;\n","import { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { FaAngleDoubleRight, FaFlagCheckered } from 'react-icons/fa';\nimport { AiOutlineStop } from 'react-icons/ai';\n\nconst StatusSelector = ({\n  showReferralStatus,\n  currentReferralStatus,\n  closeReferralStatusEdit,\n  profileName,\n}) => {\n  const [newReferralStatus, setNewReferralStatus] = useState('');\n  const [rejectReason, setRejectReason] = useState({\n    value: 'Please select a reason ...',\n  });\n  const [rejectReasonNote, setRejectReasonNote] = useState('');\n  const [enforceBusinessRule, setEnforceBusinessRule] = useState(false);\n\n  const closeStatusEdit = () => {\n    setNewReferralStatus('');\n    setRejectReason({ value: 'Please select a reason ...' });\n    setRejectReasonNote('');\n    closeReferralStatusEdit(null);\n  };\n\n  const submitStatusChange = () => {\n    setNewReferralStatus(newReferralStatus);\n    closeReferralStatusEdit({\n      value: newReferralStatus,\n      rejectReason: { reason: rejectReason, note: rejectReasonNote },\n    });\n  };\n\n  const changeStatus = (newStatus) => {\n    console.log('new status is: ', newStatus);\n    setNewReferralStatus(newStatus);\n  };\n\n  const statusEnabled = (status) => {\n    if (!enforceBusinessRule) return true;\n    // if (profileName === \"Logica\") return true;\n\n    switch (status) {\n      case 'requested':\n        if (\n          currentReferralStatus === 'requested' ||\n          currentReferralStatus === 'accepted' ||\n          currentReferralStatus === 'rejected' ||\n          currentReferralStatus === ''\n        )\n          return true;\n        else return false;\n      case 'accepted':\n      case 'rejected':\n        if (\n          currentReferralStatus === 'requested' ||\n          currentReferralStatus === 'accepted' ||\n          currentReferralStatus === 'rejected' ||\n          currentReferralStatus === ''\n        )\n          return true;\n        else return false;\n\n      case 'completed':\n      case 'failed':\n        if (currentReferralStatus === 'in-progress') return true;\n        else return false;\n\n      default:\n        return false;\n    }\n  };\n\n  const rejectReasonOptions = () => {\n    const uuRejectReasons = [\n      {\n        display_name: 'Not Eligible',\n        value: 'Client is not eligible for our services',\n      },\n      {\n        display_name: 'Duplicate',\n        value: 'Duplicate, case already exists in the system',\n      },\n      {\n        display_name: 'No Capacity',\n        value: 'We do not have capacity to serve client',\n      },\n      {\n        display_name: 'Do Not Provide Service',\n        value: 'We do not provide the services requested/needed',\n      },\n      {\n        display_name: 'Unable to Contact Client',\n        value: 'We were unable to contact the client',\n      },\n      { display_name: 'Other', value: 'Other' },\n    ];\n\n    return uuRejectReasons.map((option) => {\n      return <option value={option.value}>{option.display_name}</option>;\n    });\n  };\n\n  const rowColor = (status) => {\n    switch (status) {\n      case 'accepted':\n        return 'primary';\n      case 'in-progress':\n        return 'info';\n      case 'rejected':\n        return 'danger';\n      case 'failed':\n        return 'danger';\n      case 'completed':\n        return 'success';\n      case 'cancelled':\n        return 'danger';\n      case 'requested':\n        return 'secondary';\n      default:\n        return 'dark';\n    }\n  };\n\n  const stageColor = (stage) => {\n    const colorDone = rowColor(newReferralStatus || currentReferralStatus);\n    const colorNotDone = 'table-secondary';\n    let newStage = 1;\n\n    switch (newReferralStatus || currentReferralStatus) {\n      case 'requested':\n        newStage = 1;\n        break;\n      case 'accepted':\n        newStage = 2;\n        break;\n      case 'in-progress':\n        newStage = 3;\n        break;\n      case 'completed':\n        newStage = 4;\n        break;\n      default:\n        newStage = 5;\n    }\n    return newStage < stage ? colorNotDone : 'table-' + colorDone;\n  };\n\n  return (\n    <Modal\n      id=\"referralStatus\"\n      size=\"lg\"\n      show={showReferralStatus}\n      onHide={closeStatusEdit}\n    >\n      <Modal.Header className=\"bg-light\" closeButton>\n        <Modal.Title>Update Referral Status</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"row my-3 text-center\">\n          <div className=\"col-6\">\n            {'Current Stauts: '}\n            <div\n              className={'btn btn-outline-' + rowColor(currentReferralStatus)}\n            >\n              {currentReferralStatus}\n            </div>\n          </div>\n          <div className=\"col-6\">\n            {'New Status    : '}\n            <div\n              className={\n                'btn active btn-outline-' +\n                rowColor(newReferralStatus || currentReferralStatus)\n              }\n            >\n              {newReferralStatus || currentReferralStatus}\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"btn-group mb-2 text-center container-fluid\"\n          role=\"group\"\n          aria-label=\"Referral status selector\"\n          id=\"statusGroup\"\n        >\n          <table className=\"table table-bordered table-sm\">\n            <thead>\n              <tr>\n                <th className={stageColor(1)}>\n                  INITIATE{' '}\n                  <span className=\"float-end\">\n                    <FaAngleDoubleRight />\n                  </span>\n                </th>\n                <th className={stageColor(2)}>\n                  RESPONSE{' '}\n                  <span className=\"float-end\">\n                    <FaAngleDoubleRight />\n                  </span>\n                </th>\n                <th className={stageColor(3)}>\n                  CONFIRM{' '}\n                  <span className=\"float-end\">\n                    <FaAngleDoubleRight />\n                  </span>\n                </th>\n                <th className={stageColor(4)}>\n                  RESOLVE{' '}\n                  <span className=\"float-end\">\n                    <FaFlagCheckered />\n                  </span>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td rowSpan=\"3\" className=\"table-light\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusRequested\"\n                      autoComplete=\"off\"\n                      value=\"requested\"\n                      defaultChecked={currentReferralStatus === 'requested'}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled('requested')}\n                    />\n                    <label\n                      class=\"btn btn-outline-secondary\"\n                      htmlFor=\"statusRequested\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('requested') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      requested <AiOutlineStop className=\"invisible\" />\n                    </label>\n                  </div>\n                </td>\n\n                <td colSpan=\"3\" className=\"table-light\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check btn-block\"\n                      name=\"btnStatus\"\n                      id=\"statusCancelled\"\n                      autoComplete=\"off\"\n                      value=\"cancelled\"\n                      defaultChecked={currentReferralStatus === 'cancelled'}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled('cancelled')}\n                    />\n                    <label\n                      class=\"btn btn-outline-danger\"\n                      htmlFor=\"statusCancelled\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('cancelled') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      cancelled{' '}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                  </div>\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusAccepted\"\n                      autoComplete=\"off\"\n                      value=\"accepted\"\n                      defaultChecked={currentReferralStatus === 'accepted'}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled('accepted')}\n                    />\n                    <label\n                      class=\"btn btn-outline-primary\"\n                      htmlFor=\"statusAccepted\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('accepted') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      accepted <AiOutlineStop className=\"invisible\" />\n                    </label>\n                  </div>\n                </td>\n                <td className=\"table-light\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusInProgress\"\n                      autoComplete=\"off\"\n                      value=\"in-progress\"\n                      defaultChecked={currentReferralStatus === 'in-progress'}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled('in-progress')}\n                    />\n                    <label\n                      class=\"btn btn-outline-info\"\n                      htmlFor=\"statusInProgress\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('in-progress') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      in-progress <AiOutlineStop className=\"invisible\" />\n                    </label>\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusCompleted\"\n                      autoComplete=\"off\"\n                      value=\"completed\"\n                      defaultChecked={currentReferralStatus === 'completed'}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled('completed')}\n                    />\n                    <label\n                      class=\"btn btn-outline-success\"\n                      htmlFor=\"statusCompleted\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('completed') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      completed{' '}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusFailed\"\n                      autoComplete=\"off\"\n                      value=\"failed\"\n                      defaultChecked={currentReferralStatus === 'failed'}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled('failed')}\n                    />\n                    <label\n                      class=\"btn btn-outline-danger\"\n                      htmlFor=\"statusFailed\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('failed') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      failed{' '}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                  </div>\n                </td>\n              </tr>\n\n              <tr>\n                <td colSpan=\"3\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn btn-sm btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusRejected\"\n                      autoComplete=\"off\"\n                      value=\"rejected\"\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      defaultChecked={currentReferralStatus === 'rejected'}\n                      disabled={!statusEnabled('rejected')}\n                    />\n                    <label\n                      class=\"btn btn-outline-danger\"\n                      htmlFor=\"statusRejected\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('rejected') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      rejected{' '}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                    <div\n                      className={\n                        newReferralStatus === 'rejected' ? '' : 'd-none'\n                      }\n                    >\n                      <div className=\"form-group\">\n                        <label className=\"col-form-label\">REJECT REASON</label>\n                        <div>\n                          <select\n                            className=\"form-select\"\n                            value={rejectReason.value}\n                            onChange={(e) =>\n                              setRejectReason({\n                                value: e.target.value,\n                                text: e.target.options[e.target.selectedIndex]\n                                  .text,\n                              })\n                            }\n                          >\n                            <option>Select a reason ...</option>\n                            {rejectReasonOptions()}\n                          </select>\n                        </div>\n                      </div>\n\n                      <div className=\"form-group\">\n                        <label className=\"col-form-label\">NOTE</label>\n                        <div>\n                          <textarea\n                            className=\"form-control\"\n                            rows=\"3\"\n                            cols=\"50\"\n                            placeholder=\"Enter a note for the reject reason\"\n                            value={rejectReasonNote}\n                            onChange={(e) =>\n                              setRejectReasonNote(e.target.value)\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <div className=\"col form-check form-switch mx-2 float-start text-start\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            role=\"button\"\n            id=\"flexSwitchBusinessRule\"\n            checked={enforceBusinessRule}\n            onChange={() => setEnforceBusinessRule(!enforceBusinessRule)}\n          />\n          <label\n            className=\"form-check-label\"\n            role=\"button\"\n            htmlFor=\"flexSwitchBusinessRule\"\n          >\n            Enforce Epic Business Rules\n          </label>\n        </div>\n\n        <Button className=\"col\" variant=\"warning\" onClick={closeStatusEdit}>\n          Cancel\n        </Button>\n        <Button className=\"col\" variant=\"primary\" onClick={submitStatusChange}>\n          Submit\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default StatusSelector;\n","import { useState, useEffect, useRef } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { BiMessage } from 'react-icons/bi';\nimport { TiDeleteOutline } from 'react-icons/ti';\n\nimport {\n  FaAngleDoubleRight,\n  FaAngleDoubleLeft,\n  FaFlagCheckered,\n} from 'react-icons/fa';\nimport { IoOpenOutline, IoCloudDownloadSharp } from 'react-icons/io5';\nimport { CgAttachment } from 'react-icons/cg';\n\nconst AddNote = ({ showAddNote, referral, closeAddNote, baseUrl }) => {\n  const [noteText, setNoteText] = useState('');\n  const [callResponse, setCallResponse] = useState('');\n  const [refreshCount, setRefreshCount] = useState(0);\n  const [showMessageToast, setShowMessageToast] = useState(false);\n  const [communicationList, setCommunicationList] = useState([]);\n  const [waitMessage, setWaitMessage] = useState(\n    'Sending communication note ...'\n  );\n\n  useEffect(() => {\n    setCommunicationList(referral?.Communication);\n    console.log('useEffect cl:', communicationList);\n  }, [referral]);\n\n  useEffect(() => {\n    const updateList = async () => {\n      setWaitMessage('Retriving communcation notes ...');\n      setShowMessageToast(true);\n\n      const url =\n        'https://fhir-crn.uniteustraining.com/rick/mockapi/request/search';\n\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Accept: 'application/json',\n          'x-api-key': 'sfsdfddfdsfsdfs32342343',\n        },\n        body: JSON.stringify({\n          baseUrl: baseUrl,\n          resourceType: 'Communication',\n          queryParams: {\n            'part-of': referral?.Task.resource.id,\n          },\n        }),\n      });\n      const data = await res.json();\n\n      if (data.response?.body?.total > 0) {\n        setCommunicationList(data.response?.body?.entry);\n        referral.Communication = data.response?.body?.entry;\n      }\n\n      setShowMessageToast(false);\n    };\n\n    if (referral?.Task) updateList();\n    setNoteText('');\n    //setCallResponse(\"\");\n  }, [refreshCount]);\n\n  const sendNote = async () => {\n    setWaitMessage('Sending communication note ...');\n    setShowMessageToast(true);\n    const url =\n      'https://fhir-crn.uniteustraining.com/rick/mockapi/communication_out/process';\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343',\n      },\n      body: JSON.stringify({\n        note: noteText,\n        referralId: referral?.trackingItem?.core_referral_id,\n        sentAt: Math.floor(Date.now() / 1000),\n      }),\n    });\n    const data = await res.json();\n    setCallResponse(JSON.stringify(data));\n    setRefreshCount(refreshCount + 1);\n    setShowMessageToast(false);\n    return;\n  };\n\n  const sender = (communication) => {\n    if (communication) {\n      const senderName = communication.resource?.sender?.display;\n      let senderType;\n\n      if (\n        communication.resource?.sender?.reference?.split('/')[0] ===\n        'Organization'\n      )\n        senderType = 'cbo';\n      else senderType = 'ehr';\n      const senderInfo = { name: senderName, type: senderType };\n      return senderInfo;\n    }\n\n    return null;\n  };\n\n  const noteColor = (communication) => {\n    if (sender(communication)?.type === 'ehr') return 'seashell';\n    else return 'aliceblue';\n  };\n\n  const noteAlign = (communication) => {\n    if (sender(communication)?.type === 'ehr') return 'start';\n    else return 'end';\n  };\n\n  const responseTo = (communication) => {\n    const recipients = communication.resource?.recipient;\n    let responseToStr = 'Replied to: ';\n    recipients.forEach((entry) => {\n      responseToStr += entry.display + ', ';\n    });\n    return responseToStr;\n  };\n\n  const closeAddNoteWindow = () => {\n    //setCommunicationList([]);\n    setCallResponse('');\n    closeAddNote();\n  };\n\n  return (\n    <>\n      <Modal\n        id=\"addNote\"\n        size=\"lg\"\n        show={showAddNote}\n        onHide={closeAddNoteWindow}\n      >\n        <Modal.Header className=\"bg-light\" closeButton>\n          <Modal.Title>Referral Communications</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <table className=\"table table-responsive table-hover\">\n            <tbody>\n              {communicationList?.map((entry, index) => (\n                <tr>\n                  <td className=\"p-0\">\n                    <table className=\"table table-borderless m-0 p-0\">\n                      <tbody>\n                        <tr>\n                          <td className=\"text-center text-secondary\">\n                            {entry.resource?.sent}\n                          </td>\n                        </tr>\n\n                        {sender(entry).type === 'cbo' ? (\n                          <tr\n                            className={`text-${noteAlign(\n                              entry\n                            )} text-secondary`}\n                          >\n                            <td className=\"py-0\">{responseTo(entry)}</td>{' '}\n                          </tr>\n                        ) : (\n                          <tr\n                            className={`text-${noteAlign(\n                              entry\n                            )} text-secondary`}\n                          >\n                            <td className=\"py-0\">From: {sender(entry).name}</td>\n                          </tr>\n                        )}\n                        <tr className={`text-${noteAlign(entry)}`}>\n                          <td style={{ backgroundColor: noteColor(entry) }}>\n                            <div\n                              className={`btn mt-0 mx-0 text-start disabled text-body`}\n                              style={{ opacity: 1 }}\n                            >\n                              {entry.resource?.payload\n                                ? entry.resource?.payload[0]?.contentString\n                                : '[empty]'}\n                            </div>\n                            {entry.resource?.payload &&\n                            entry.resource?.payload[1]?.contentReference ? (\n                              <p>\n                                <CgAttachment />\n                                Document attachment\n                              </p>\n                            ) : null}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          {referral?.trackingItem ? (\n            <div className=\"form-group\">\n              <div className=\"d-flex\">\n                <label className=\"col-form-label col-6 vertical-bottom\">\n                  NEW NOTE\n                </label>\n                <div className=\"btn btn-primary col-6\" onClick={sendNote}>\n                  Send\n                </div>\n              </div>\n              <div\n                className={\n                  showMessageToast\n                    ? 'toast bg-warning text-secondary show'\n                    : 'toast'\n                }\n                role=\"alert\"\n                aria-live=\"assertive\"\n                aria-atomic=\"true\"\n                id=\"messageToastModal\"\n              >\n                <div className=\"toast-header\">\n                  <strong className=\"me-auto\">Please Wait ...</strong>\n                </div>\n                <div className=\"toast-body\">\n                  {waitMessage}{' '}\n                  <div className=\"spinner-border text-warning\" role=\"status\">\n                    <span className=\"visually-hidden\">...</span>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <textarea\n                  className=\"form-control\"\n                  rows=\"3\"\n                  cols=\"50\"\n                  placeholder=\"Enter a new note\"\n                  value={noteText}\n                  onChange={(e) => setNoteText(e.target.value)}\n                />\n              </div>\n              {callResponse === '' ? null : (\n                <div className=\"row\">\n                  <div className=\"col-10\">\n                    <pre>{callResponse}</pre>{' '}\n                  </div>\n                  <div className=\"col-2\">\n                    <TiDeleteOutline\n                      calssName=\"col-2\"\n                      onClick={() => {\n                        setCallResponse('');\n                      }}\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : null}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            className=\"col\"\n            variant=\"warning\"\n            onClick={closeAddNoteWindow}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddNote;\n","import EncounterSummary from './EncounterSummary';\nimport CreateReferral from './CreateReferral';\nimport ReferralSummary from './ReferralSummary';\nimport StatusSelector from './StatusSelector';\nimport AddNote from './AddNote';\nimport { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nfunction Referrals({\n  onCreate,\n  referralList,\n  currentEncounter,\n  sendNotificationUU,\n  profileName,\n  updateReferralStatus,\n  baseUrl,\n  sendUUNotification,\n}) {\n  const [showNewReferral, setShowNewReferral] = useState(false);\n  const [showSource, setShowSource] = useState(false);\n  const [showReferralStatus, setShowReferralStatus] = useState(false);\n  const [fullJson, setFullJson] = useState();\n  const [currentReferralStatus, setCurrentReferralStatus] = useState('');\n  //const [newReferralStatus, setNewReferralStatus] = useState(\n  //  currentReferralStatus\n  //);\n  const [editReferralId, setEditReferralId] = useState();\n  const [showAddNote, setShowAddNote] = useState(false);\n  const [currentReferral, setCurrentReferral] = useState();\n\n  const toggleShowNewReferral = () => {\n    setShowNewReferral((showNewReferral) => !showNewReferral);\n  };\n\n  const onCreateReferral = (referral) => {\n    onCreate(referral);\n    toggleShowNewReferral();\n  };\n\n  const showFhirSource = (fullJson, show) => {\n    setFullJson(fullJson);\n    setShowSource(show);\n  };\n\n  const closeWindow = () => setShowSource(false);\n\n  const editReferralStatus = (referralId, currentStatus) => {\n    setShowReferralStatus(true);\n    setEditReferralId(referralId);\n    setCurrentReferralStatus(currentStatus);\n    //setNewReferralStatus(\"\");\n  };\n\n  const closeReferralStatusEdit = (newStatus) => {\n    setShowReferralStatus(false);\n    if (newStatus !== null) {\n      //setNewReferralStatus(newReferralStatus.value);\n      console.log('new status: ', newStatus.value, newStatus.rejectReason);\n      updateReferralStatus(editReferralId, newStatus);\n    } //else setNewReferralStatus(\"\");\n  };\n\n  const showAddNoteWindow = (referral) => {\n    setCurrentReferral(referral);\n    setShowAddNote(true);\n  };\n  const closeAddNote = () => {\n    setShowAddNote(false);\n  };\n\n  return (\n    <div className=\"col-md-9 col-lg-10 px-0\">\n      <div className=\"referrals\">\n        {/*         <EncounterSummary\n          toggleShowNewReferral={toggleShowNewReferral}\n          showNewReferral={showNewReferral}\n          currentEncounter={currentEncounter}\n          sendNotificationUU={sendNotificationUU}\n          profileName={profileName}\n        /> \n        {showNewReferral ? (\n          <CreateReferral\n            onCreate={onCreateReferral}\n            toggleShowNewReferral={toggleShowNewReferral}\n          />\n        ) : null} */}\n        <div className=\"referralList\">\n          {/* <div className=\"h5 py-3\">\n            This encounter has{\" \"}\n            {referralList.length > 1\n              ? referralList.length + \" referrals.\"\n              : referralList.length === 1\n              ? \" 1 referral.\"\n              : \" no referrals.\"}\n          </div> */}\n\n          <EncounterSummary\n            toggleShowNewReferral={toggleShowNewReferral}\n            showNewReferral={showNewReferral}\n            currentEncounter={currentEncounter}\n            sendNotificationUU={sendNotificationUU}\n            profileName={profileName}\n          />\n          {showNewReferral ? (\n            <CreateReferral\n              onCreate={onCreateReferral}\n              toggleShowNewReferral={toggleShowNewReferral}\n            />\n          ) : null}\n          {referralList?.length > 0 ? (\n            <div className=\"table-responsive\">\n              <table className=\"table table-hover\">\n                <thead>\n                  <tr>\n                    <th>DATE SENT</th>\n                    <th>STATUS</th>\n                    <th>SERVICE TYPE</th>\n                    <th>RECEIPIENT</th>\n                    <th>NOTES</th>\n                    <th>UU REFERRAL</th>\n                    <th>+/-</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {referralList.map((referral, index) => (\n                    <ReferralSummary\n                      key={index}\n                      referral={referral}\n                      showFhirSource={showFhirSource}\n                      editReferralStatus={editReferralStatus}\n                      showAddNoteWindow={showAddNoteWindow}\n                      baseUrl={baseUrl}\n                      sendUUNotification={sendUUNotification}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : null}\n        </div>\n      </div>\n\n      <Modal id=\"fhirSource\" size=\"lg\" show={showSource} onHide={closeWindow}>\n        <Modal.Header className=\"bg-light\" closeButton>\n          <Modal.Title>\n            {fullJson?.resourceType} : {fullJson?.id}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <pre id=\"json\">{JSON.stringify(fullJson, undefined, 2)}</pre>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"warning\" onClick={closeWindow}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <StatusSelector\n        showReferralStatus={showReferralStatus}\n        currentReferralStatus={currentReferralStatus}\n        closeReferralStatusEdit={closeReferralStatusEdit}\n        profileName={profileName}\n      ></StatusSelector>\n\n      <AddNote\n        showAddNote={showAddNote}\n        referral={currentReferral}\n        communicationList={currentReferral?.Communication}\n        closeAddNote={closeAddNote}\n        baseUrl={baseUrl}\n      ></AddNote>\n    </div>\n  );\n}\n\nexport default Referrals;\n","export const Profile_Epic = {\n  name: 'Epic',\n\n  defaultPatient: {\n    firstName: 'Calvin',\n    lastName: 'Ccm',\n    gender: 'Male',\n    dob: '01/01/1990',\n    mrn: '203724',\n    fhirId: 'e4ikKcC2Rp3EsZQh8Ac6C5A3',\n    uuid: 'b5318891-3dc8-426a-af50-531e106ad1a1',\n  },\n\n  defaultProvider: {\n    firstName: 'Case',\n    lastName: 'Manager',\n    fhirId: 'eaToFIkaJ32mO4K002q3BLw3',\n    uuid: '94e5f7ee-1425-42bc-8833-3474b687b125',\n    groupId: 'bf4aa373-81eb-4da5-9980-2d3e51c57b3c',\n    networkId: '145ca925-ba86-490d-b404-35f4fe5ada66',\n  },\n\n  defaultEncounter: 'eEDcHpsgsD0Pv4Ih8HnfOxA3', //\"enZf6GWN2rMGQWF1rqqDgNg3\",\n  defaultDocumentReference: 'e1.cnazaNgltIElLYGLL4Sg3',\n  defaultBaseUrl:\n    'https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4',\n  defaultNotificationUrl:\n    'https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService',\n  accessToken:\n    'e2a4575581b3f57203e182b0b1f3dcea479baecd31bef125cc57f6dd4b8905ac',\n};\n\nexport const Profile_Epic_2 = {\n  name: 'Epic2',\n\n  defaultPatient: {\n    firstName: 'Beverly',\n    lastName: 'Ccm',\n    gender: 'Female',\n    dob: '01/01/1940',\n    mrn: '203722',\n    fhirId: 'egHmZUd91rLItB1AqGV49Pg3',\n    uuid: 'b5318891-3dc8-426a-af50-531e106ad1a1',\n  },\n\n  defaultProvider: {\n    firstName: 'Case',\n    lastName: 'Manager',\n    fhirId: 'eaToFIkaJ32mO4K002q3BLw3',\n    uuid: '94e5f7ee-1425-42bc-8833-3474b687b125',\n    groupId: 'bf4aa373-81eb-4da5-9980-2d3e51c57b3c',\n    networkId: '145ca925-ba86-490d-b404-35f4fe5ada66',\n  },\n\n  defaultEncounter: 'eFBT3k94CLm3fCPMNlKH2DQ3', //\"enZf6GWN2rMGQWF1rqqDgNg3\",\n  defaultDocumentReference: 'e.-1q0eXQDEZ.9mNdXwVjYA3',\n  defaultBaseUrl:\n    'https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4',\n  defaultNotificationUrl:\n    'https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService',\n  accessToken:\n    'e2a4575581b3f57203e182b0b1f3dcea479baecd31bef125cc57f6dd4b8905ac',\n};\n\nexport const Profile_Logica = {\n  name: 'Logica',\n\n  defaultPatient: {\n    firstName: 'Beverly',\n    lastName: 'Ccm',\n    gender: 'Female',\n    dob: '01/01/1940',\n    mrn: '203722',\n    fhirId: '14730',\n    uuid: 'b5318891-3dc8-426a-af50-531e106ad1a1',\n  },\n  defaultProvider: {\n    firstName: 'Demo',\n    lastName: 'Provider',\n    fhirId: '14734',\n    uuid: '94e5f7ee-1425-42bc-8833-3474b687b125',\n    groupId: 'bf4aa373-81eb-4da5-9980-2d3e51c57b3c',\n    networkId: '145ca925-ba86-490d-b404-35f4fe5ada66',\n  },\n\n  defaultEncounter: '14801',\n  defaultDocumentReference: '14740',\n\n  defaultBaseUrl: 'https://api.logicahealth.org/uufhircrn/open',\n\n  defaultNotificationUrl:\n    'https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService',\n  accessToken: '',\n};\n","import './App.css';\nimport Header from './components/Header';\nimport Encounters from './components/Encounters';\nimport Referrals from './components/Referrals';\nimport { useState, useEffect } from 'react';\nimport {\n  Profile_Epic,\n  Profile_Epic_2,\n  Profile_Logica,\n} from './components/Profiles';\nimport { Next } from 'react-bootstrap/esm/PageItem';\n\nfunction App() {\n  const defaultProfile = Profile_Epic;\n  const defaultProfileName = defaultProfile.name;\n  const [currentProfileName, setCurrentProfileName] =\n    useState(defaultProfileName);\n  //const [profile, setProfile] = useState(defaultProfile);\n  const [patient, setPatient] = useState(defaultProfile.defaultPatient);\n  const [provider, setProvider] = useState(defaultProfile.defaultProvider);\n  const [currentEncounter, setCurrentEncounter] = useState(\n    defaultProfile.defaultEncounter\n  );\n  const [accessToken, setAccessToken] = useState(defaultProfile.access_token);\n  const [baseUrl, setBaseUrl] = useState(defaultProfile.defaultBaseUrl);\n  const [notificationUrl, setNotificationUrl] = useState(\n    defaultProfile.defaultNotificationUrl\n  );\n  const [referrals, setReferrals] = useState([]);\n  const [encounters, setEncounters] = useState([]);\n\n  const [sampleDocumentReference, setSampleDocumentReference] = useState('');\n\n  const defaultToastMessage = 'Retrieving FHIR resources ... ';\n  const [toastMessage, setToastMessage] = useState(defaultToastMessage);\n  const [showMessageToast, setShowMessageToast] = useState(true);\n  const toggleShowMessageToast = () => setShowMessageToast(!showMessageToast);\n\n  const [progress, setProgress] = useState('0%');\n\n  const switchProfile = async (profileName) => {\n    //if (profileName === currentProfileName) return\n    setProgress('0%');\n    setToastMessage(defaultToastMessage);\n    setShowMessageToast(true);\n\n    console.log('Switch to profile: ', profileName);\n    setCurrentProfileName(profileName);\n    let newProfile; //'= profileName === \"Logica\" ? Profile_Logica : Profile_Epic;\n    switch (profileName) {\n      case 'Logica':\n        newProfile = Profile_Logica;\n        break;\n      case 'Epic2':\n        newProfile = Profile_Epic_2;\n        break;\n      default:\n        newProfile = Profile_Epic;\n    }\n    setPatient(newProfile.defaultPatient);\n    setProvider(newProfile.defaultProvider);\n    setBaseUrl(newProfile.defaultBaseUrl);\n    setNotificationUrl(newProfile.defaultNotificationUrl);\n    if (newProfile.name === 'Logica') {\n      setAccessToken(newProfile.accessToken);\n    } else {\n      let token = await getAccessToken();\n      setAccessToken(token);\n    }\n\n    setShowMessageToast(false);\n    setProgress('0%');\n    //setToastMessage(\"\");\n  };\n\n  const refreshProfileSettings = async () => {\n    const encounterList = await getEncounters(patient.fhirId, baseUrl);\n    if (encounterList?.length > 0) {\n      await changeCurrentEncounter(encounterList[0].resource.id, baseUrl);\n    }\n  };\n\n  // Create a referral\n  const createReferral = async (referral) => {\n    setProgress('0%');\n    setToastMessage('Sending create requests ... ');\n    setShowMessageToast(true);\n\n    console.log('create referral: ', referral);\n    const nowISO = new Date().toISOString();\n\n    // Create ServiceRequest\n    let url = baseUrl + '/ServiceRequest';\n    let resource = {\n      resourceType: 'ServiceRequest',\n      status: 'active',\n      intent: 'plan',\n      category: [\n        {\n          coding: [\n            {\n              system: 'http://snomed.info/sct',\n              code: '307835004',\n              display: 'Referral by service',\n            },\n          ],\n          text: 'Referral by service',\n        },\n      ],\n      priority: 'routine',\n      subject: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + ', ' + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      authoredOn: nowISO,\n      requester: [\n        {\n          reference: `Practitioner/${provider.fhirId}`,\n          display: provider.firstName + ' ' + provider.lastName,\n        },\n      ],\n      /*       orderDetail: {\n        text: referral.serviceType.text,\n        coding: [\n          {\n            system: 'Unite Us',\n            code: referral.serviceType.value,\n            display: referral.serviceType.text,\n          },\n        ],\n      }, */\n    };\n\n    if (referral.attachDocument && sampleDocumentReference.length > 0) {\n      resource.supportingInfo = [\n        {\n          reference: `DocumentReference/${sampleDocumentReference}`,\n        },\n      ];\n    }\n\n    let res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(resource),\n    });\n\n    let data = await res.json();\n    let newServiceRequestId = data.id;\n    console.log('server request id: ', newServiceRequestId);\n\n    // Create Task\n    url = baseUrl + '/Task';\n    resource = {\n      resourceType: 'Task',\n      basedOn: [\n        {\n          reference: `ServiceRequest/${newServiceRequestId}`,\n        },\n      ],\n      status: 'requested',\n      intent: 'plan',\n      priority: 'routine',\n      for: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + ', ' + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      authoredOn: nowISO,\n      lastModified: nowISO,\n      requester: [\n        {\n          reference: `Practitioner/${provider.fhirId}`,\n          display: provider.firstName + ' ' + provider.lastName,\n        },\n      ],\n      // description:\n      //   referral.description +\n      //   \"/n referred to : \" +\n      //   referral.referredToGroupIds.text +\n      //   \" [\" +\n      //   referral.referredToGroupIds.value +\n      //   \"]\",\n      owner: {\n        reference: `Organization/${referral.referredToGroupIds.value}`,\n        display: referral.referredToGroupIds.text,\n      },\n    };\n\n    setProgress('5%');\n\n    res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(resource),\n    });\n\n    data = await res.json();\n    let newTaskId = data.id;\n    console.log('Task id: ', newTaskId);\n\n    // Create initial Communication\n    url = baseUrl + '/Communication';\n    resource = {\n      resourceType: 'Communication',\n      basedOn: [\n        {\n          reference: `ServiceRequest/${newServiceRequestId}`,\n        },\n      ],\n      partOf: [\n        {\n          reference: `Task/${newTaskId}`,\n        },\n      ],\n      status: 'in-progress',\n      subject: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + ', ' + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      sent: nowISO,\n      recipient: [\n        {\n          reference: `Organization/${referral.referredToGroupIds.value}`,\n          display: referral.referredToGroupIds.text,\n        },\n      ],\n      sender: {\n        reference: `Practitioner/${provider.fhirId}`,\n        display: provider.firstName + ' ' + provider.lastName,\n      },\n    };\n\n    resource.payload = [];\n    if (referral.description.length > 0) {\n      resource.payload = [\n        {\n          contentString: referral.description,\n        },\n      ];\n    }\n\n    if (referral.attachDocument && sampleDocumentReference.length > 0) {\n      resource.payload = [\n        ...resource.payload,\n        {\n          contentReference: {\n            reference: `DocumentReference/${sampleDocumentReference}`,\n          },\n        },\n      ];\n    }\n\n    res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(resource),\n    });\n\n    data = await res.json();\n    let newCommunicationId = data.id;\n    console.log('Communication id: ', newCommunicationId);\n\n    await getReferrals();\n\n    setProgress('100%');\n    setShowMessageToast(false);\n  };\n\n  const fetchReferrals = async (\n    encounterId = currentEncounter,\n    referralBaseUrl = baseUrl\n  ) => {\n    // fetching Task + ServiceRequest\n    //setToastMessage(\"Fetching FHIR resources: \\n Tasks ... \\n ServiceRequests ... \");\n    setToastMessage(defaultToastMessage);\n    setProgress('10%');\n\n    const url =\n      referralBaseUrl +\n      '/Task?encounter=' +\n      encounterId +\n      '&_include=Task%3Apatient&_include=Task%3Aencounter&_include=Task%3Arequester&_include=Task%3A' +\n      'based-on' + //(currentProfileName === \"Epic\" ? \"basedon\" : \"based-on\") + \"%3AServiceRequest\" +\n      '&_include=Task%3Aowner%3AOrganization';\n\n    const res = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        Authorization: accessToken?.length > 0 ? 'bearer ' + accessToken : '',\n      },\n    });\n    const data = await res.json();\n    let entryList = data.total === 0 ? [] : data.entry;\n    if (!entryList) return [];\n    console.log('Task bundle received: ', entryList);\n\n    // //_include works at Epic, no need to fetch ServiceRequest seperatedly\n    // const url2 = baseUrl + \"/ServiceRequest?encounter=\" + encounterId;\n    // const res2 = await fetch(url2, {\n    //   method: \"GET\",\n    //   headers: {\n    //     \"Content-type\": \"application/json\",\n    //     Accept: \"application/json\",\n    //     Authorization: accessToken.length > 0 ? \"bearer \" + accessToken : \"\",\n    //   },\n    // });\n    // const data2 = await res2.json();\n    // let entryList2 = data2.total === 0 ? [] : data2.entry;\n    // entryList = entryList.concat(entryList2);\n\n    //filter ServiceRequest and Task\n    // if (entryList.length > 0) {\n    //   entryList = entryList.filter((entry) => {\n    //     return (\n    //       entry.resource.resourceType === \"ServiceRequest\" ||\n    //       entry.resource.resourceType === \"Task\"\n    //     );\n    //   });\n    // }\n\n    // Take all the Task\n    let referralList = [];\n    entryList.forEach((entry, index) => {\n      if (entry.resource.resourceType === 'Task') {\n        let referral = {\n          id: 'Task/' + entry.resource.id,\n          Task: entry,\n        };\n        referralList.push(referral);\n      }\n    });\n\n    // Group the other resources with the Task\n    referralList.forEach((referral, index) => {\n      const resource = referral?.Task?.resource;\n      if (!resource) return;\n\n      const patientId = resource.for?.reference;\n      const serviceRequestId = resource.basedOn[0].reference;\n      const practitionerId = resource.requester?.reference;\n      const organizationId = resource.owner?.reference;\n\n      entryList.forEach((entry, index) => {\n        let entryId = entry.resource.id;\n        switch (entry.resource.resourceType) {\n          case 'ServiceRequest': {\n            if (serviceRequestId === `ServiceRequest/${entryId}`)\n              referral.ServiceRequest = entry;\n            break;\n          }\n          case 'Patient': {\n            if (patientId === `Patient/${entryId}`) referral.Patient = entry;\n            break;\n          }\n          case 'Organization': {\n            if (organizationId === `Organization/${entryId}`)\n              referral.Organization = entry;\n            break;\n          }\n          case 'Practitioner': {\n            if (practitionerId === `Practitioner/${entryId}`)\n              referral.Practitioner = entry;\n            break;\n          }\n          default:\n        }\n      });\n    });\n\n    // Fetch Communications for each Task\n    //setToastMessage((a) => { return a + \"\\n Communications ... \"});\n    setProgress('40%');\n    for (let referral of referralList) {\n      const referralId = referral?.Task?.resource?.id;\n      const communications = await fetchCommunications(referralId);\n\n      referral.Communication = communications.entry;\n\n      if (referral.Communication == null) continue;\n      for (let communication of referral.Communication) {\n        communication.received = await checkCommunication(\n          communication.resource.id\n        );\n      }\n    }\n\n    // Fetch DocumentReferences for each ServiceRequest\n    //setToastMessage((a) => { return a + \"\\n DocumentReferences ... \"});\n    setProgress('70%');\n    for (let referral of referralList) {\n      const documentReferences = await fetchDocumentReferences(referral);\n      if (documentReferences?.length > 0) {\n        referral.DocumentReference = documentReferences;\n        setSampleDocumentReference(referral.DocumentReference[0].id);\n        console.log('documentReference', referral.DocumentReference);\n        console.log('sampleDocumentReference', sampleDocumentReference);\n      }\n    }\n\n    // Fetch Binaries for all DocumentReferences\n    //setToastMessage((a) => { return a + \"\\nBinaries ... \"});\n    setProgress('85%');\n    for (let referral of referralList) {\n      if (referral.DocumentReference?.length > 0) {\n        const binaryList = await fetchBinaries(referral.DocumentReference);\n        if (binaryList?.length > 0) {\n          referral.Binary = binaryList;\n        }\n      }\n    }\n\n    setProgress('95%');\n    // look up referral UUID in AWS DDB\n    for (let referral of referralList) {\n      if (referral.Task?.resource?.id) {\n        const trackingItem = await lookupUUReferralId(\n          `${baseUrl}/Task/${referral.Task?.resource?.id}`\n        );\n        if (trackingItem) referral.trackingItem = trackingItem;\n      }\n    }\n\n    //referralList = referralList.filter((entry) => {\n    //  return entry.Task;\n    //});\n\n    // Fetch Consents\n    //if (currentProfileName === \"Epic\") {\n    //setToastMessage((a) => { return a + \"\\n Consents ... \"});\n    const consentList = await fetchConsents();\n    if (consentList?.length > 0) {\n      referralList.forEach((entry, index) => {\n        entry.Consent = consentList;\n      });\n    }\n    //}\n\n    console.log('referral list', referralList);\n    referralList.sort((a, b) => {\n      const timeA = new Date(a.ServiceRequest.resource.authoredOn).getTime();\n      const timeB = new Date(b.ServiceRequest.resource.authoredOn).getTime();\n      return timeB - timeA;\n    });\n\n    setProgress('100%');\n    return referralList;\n  };\n\n  const fetchEncounters = async (\n    patientId = patient.fhirId,\n    encounterBaseUrl = baseUrl\n  ) => {\n    const url = encounterBaseUrl + '/Encounter?patient=' + patientId;\n    const res = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        Authorization:\n          accessToken?.length > 0 && currentProfileName !== 'Logica'\n            ? 'bearer ' + accessToken\n            : '',\n      },\n    });\n    const data = await res.json();\n\n    const encounterList = data.total > 0 ? data.entry : [];\n\n    encounterList.sort((a, b) => {\n      const timeA = new Date(a.resource?.period?.start).getTime();\n      const timeB = new Date(b.resource?.period?.start).getTime();\n      return timeB - timeA;\n    });\n    console.log('encounter', encounterList);\n    return encounterList;\n  };\n\n  // Fetch Communications for a Task\n  const fetchCommunications = async (taskId) => {\n    const url = baseUrl + '/Communication?part-of=' + taskId;\n\n    const res = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        Authorization: accessToken?.length > 0 ? 'bearer ' + accessToken : '',\n      },\n    });\n    const data = await res.json();\n    console.log('communications: ', data);\n    return data;\n  };\n\n  const checkCommunication = async (fhirId) => {\n    const url =\n      'https://fhir-crn.uniteustraining.com/rick/mockapi/communication/read';\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343',\n      },\n      body: JSON.stringify({\n        fullUrl: baseUrl + '/Communication/' + fhirId,\n      }),\n    });\n    const data = await res.json();\n    const item = data.response.item;\n    console.log('check communication ', fhirId, ' result ', item === undefined);\n    return item === undefined;\n  };\n\n  // Fetch DocumentReferences for a ServiceRequest\n  const fetchDocumentReferences = async (referral) => {\n    const documentList = [];\n    const supportingInfo = referral?.ServiceRequest?.resource?.supportingInfo;\n\n    if (!supportingInfo) return documentList;\n\n    for (let entry of supportingInfo) {\n      const url = baseUrl + '/' + entry.reference;\n      const res = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json',\n          Accept: 'application/json',\n          Authorization: accessToken?.length > 0 ? 'bearer ' + accessToken : '',\n        },\n      });\n      const data = await res.json();\n      console.log('documentReference: ', data);\n      if (data?.resourceType === 'DocumentReference') documentList.push(data);\n    }\n\n    return documentList;\n  };\n\n  // Fetch DocumentReferences for a ServiceRequest\n  const fetchBinaries = async (documentReferenceList) => {\n    const binaryList = [];\n\n    if (!documentReferenceList) return binaryList;\n\n    for (let entry of documentReferenceList) {\n      const url = baseUrl + '/' + entry.content[0]?.attachment?.url;\n      const res = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json',\n          Accept: 'application/fhir+json',\n          Authorization: accessToken?.length > 0 ? 'bearer ' + accessToken : '',\n        },\n      });\n      const data = await res.json();\n      if (data?.resourceType === 'Binary') {\n        binaryList.push(data);\n      }\n    }\n\n    return binaryList;\n  };\n\n  // Fetch Consent for a Patient\n  const fetchConsents = async (\n    patientFhirId = patient.fhirId,\n    category = currentProfileName === 'Logica'\n      ? '64292-6'\n      : 'http://loinc.org|64292-6',\n    status = 'active'\n  ) => {\n    const url = `${baseUrl}/Consent?patient=${patientFhirId}&category=${category}&status=${status}`;\n    const res = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        Authorization: accessToken?.length > 0 ? 'bearer ' + accessToken : '',\n      },\n    });\n    const data = await res.json();\n    console.log('consent: ', data);\n    return data.entry;\n  };\n\n  const lookupUUReferralId = async (fhirUrl) => {\n    const url =\n      'https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/resource_tracking/read';\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343',\n      },\n      body: JSON.stringify({\n        full_url: fhirUrl,\n      }),\n    });\n    const data = await res.json();\n    const item = data.response?.item;\n    console.log('Found item: ', item);\n    return item;\n  };\n\n  const changeCurrentEncounter = async (encounterSelected, currentBaseUrl) => {\n    //if (encounterSelected === currentEncounter) return;\n    setProgress('0%');\n    setToastMessage(defaultToastMessage);\n    setShowMessageToast(true);\n\n    setCurrentEncounter(encounterSelected);\n    await getReferrals(encounterSelected, currentBaseUrl);\n\n    setShowMessageToast(false);\n    setProgress('0%');\n    //setToastMessage(\"\");\n\n    return;\n  };\n\n  const getReferrals = async (encounterSelected, referralBaseUrl) => {\n    const data = await fetchReferrals(encounterSelected, referralBaseUrl);\n    setReferrals(data);\n  };\n\n  const getEncounters = async (patientId, encounterBaseUrl) => {\n    setProgress('0%');\n    setShowMessageToast(true);\n\n    const data = await fetchEncounters(patientId, encounterBaseUrl);\n    setEncounters(data);\n\n    setShowMessageToast(false);\n    setProgress('0%');\n    //setToastMessage(\"\");\n\n    return data;\n  };\n\n  const sendUUNotification = async (fhirId, type) => {\n    setToastMessage(`Sending ${type} notification to Unite Us ... `);\n    setProgress('25%');\n    setShowMessageToast(true);\n\n    const notification = {\n      resourceType: 'Bundle',\n      type: 'Event',\n      entry: [\n        {\n          fullUrl: baseUrl + '/' + type + '/' + fhirId,\n        },\n      ],\n    };\n    const url = notificationUrl;\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343',\n      },\n      body: JSON.stringify(notification),\n    });\n\n    setProgress('80%');\n\n    const data = await res.json();\n\n    console.log('notification response: ', data);\n    setProgress('100%');\n    setToastMessage(data.statusCode + ': ' + data.message);\n    setProgress('hide');\n\n    return data;\n  };\n\n  /* const sendCommunicationNotification = async (fhirId) => {\n    setToastMessage('Sending communication notification to Unite Us ... ');\n    setProgress('25%');\n    setShowMessageToast(true);\n\n    const notification = {\n      resourceType: 'Bundle',\n      type: 'Event',\n      entry: [\n        {\n          fullUrl: baseUrl + '/Communication/' + fhirId,\n        },\n      ],\n    };\n    const url =\n      'https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService';\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343',\n      },\n      body: JSON.stringify(notification),\n    });\n\n    setProgress('80%');\n\n    const data = await res.json();\n\n    console.log('notification response: ', data);\n    setProgress('100%');\n    setToastMessage(data.statusCode + ': ' + data.message);\n    setProgress('hide');\n\n    return data;\n  }; */\n\n  const sendNotificationUU = async () => {\n    setToastMessage('Sending encounter notification to Unite Us ... ');\n    setProgress('25%');\n    setShowMessageToast(true);\n\n    const url = notificationUrl;\n    const notification = {\n      resourceType: 'Bundle',\n      type: 'Event',\n      entry: [\n        {\n          fullUrl: baseUrl + '/Encounter/' + currentEncounter,\n        },\n      ],\n    };\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343', //\"wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03\",\n      },\n      body: JSON.stringify(notification),\n    });\n    setProgress('80%');\n    const data = await res.json();\n    console.log('notification response: ', data);\n    setProgress('100%');\n    setToastMessage(data.statusCode + ': ' + data.message);\n    setProgress('hide');\n    return data;\n  };\n\n  const getAccessToken = async () => {\n    const url =\n      'https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/authentication/token';\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343', //\"wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03\",\n      },\n      body: JSON.stringify({\n        privateKey: null,\n      }),\n    });\n    const data = await res.json();\n    const token = data.body['access_token'];\n    console.log('access token ', token);\n    return token;\n  };\n\n  const updateReferralStatus = async (taskFhirId, newStatus) => {\n    console.log('new status: ', newStatus);\n    setProgress('0%');\n    setToastMessage('Updating Task Status ...');\n    setShowMessageToast(true);\n\n    // fetch the Task first\n    let url =\n      'https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/request/read';\n    let res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343',\n      },\n      body: JSON.stringify({\n        baseUrl: baseUrl,\n        resourceType: 'Task',\n        resourceId: taskFhirId,\n      }),\n    });\n    let data = await res.json();\n    let task = data.response.body;\n    let headers = data.response.headers;\n    let eTag =\n      currentProfileName === 'Logica'\n        ? headers['etag'][0]\n        : headers['e-tag'][0];\n    console.log('task: ', task);\n    console.log('headers', headers);\n\n    setProgress('5%');\n    // update status and match header\n    task.status = newStatus.value;\n    let epicCode = mapToEpicCode(newStatus.rejectReason.reason.text);\n    if (newStatus.value === 'rejected') {\n      task.statusReason = {\n        coding: [\n          {\n            system:\n              currentProfileName === 'Logica'\n                ? 'HTTPS://UNITEUS.COM/IO/STRUCTUREDEFINITION/STATUS-REASON'\n                : 'urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025',\n            code: epicCode.code,\n            display: epicCode.display,\n          },\n        ],\n        text: `${newStatus.rejectReason.reason.value}. ${newStatus.rejectReason.note}`,\n      };\n    }\n    console.log('new task: ', task);\n\n    // send Task update requester\n    url =\n      'https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/request/update';\n    res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343',\n      },\n      body: JSON.stringify({\n        baseUrl: baseUrl,\n        resourceType: 'Task',\n        resourceId: taskFhirId,\n        etag: eTag,\n        resource: task,\n      }),\n    });\n\n    setProgress('10%');\n    setToastMessage('Retrieving FHIR Resources ...');\n    await getReferrals(currentEncounter, baseUrl);\n    setShowMessageToast(false);\n    setProgress('0%');\n    return;\n  };\n\n  const mapToEpicCode = (uuCode) => {\n    switch (uuCode) {\n      case 'Not Eligible':\n        return {\n          system: 'urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025',\n          code: '104',\n          display:\n            'Patient does not meet the level of care required for admission',\n        };\n      case 'No Capacity':\n        return {\n          system: 'urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025',\n          code: '101',\n          display: 'Facility Full',\n        };\n      case 'Do Not Provide Service':\n        return {\n          system: 'urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025',\n          code: '103',\n          display: \"Facility cannot provide for patient's needs\",\n        };\n      case 'Duplicate':\n      case 'Unable to Contact Client':\n      case 'Other':\n      default:\n        return {\n          system: 'urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025',\n          code: '99',\n          display: 'Other (Comment)',\n        };\n    }\n  };\n\n  useEffect(() => {\n    const setProfile = async (profileName) => {\n      await switchProfile(profileName);\n    };\n\n    setProfile(defaultProfileName);\n  }, []);\n\n  useEffect(() => {\n    const updateFhir = async () => {\n      await refreshProfileSettings();\n    };\n\n    updateFhir();\n  }, [accessToken]);\n\n  return (\n    <div className=\"App\">\n      <Header\n        patient={patient}\n        provider={provider}\n        profileName={currentProfileName}\n        switchProfile={switchProfile}\n      />\n\n      <div\n        className={\n          showMessageToast ? 'toast bg-warning text-secondary show' : 'toast'\n        }\n        role=\"alert\"\n        aria-live=\"assertive\"\n        aria-atomic=\"true\"\n        id=\"messageToast\"\n      >\n        <div className=\"toast-header\">\n          <strong className=\"me-auto\">Please Wait ...</strong>\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"messageToast\"\n            aria-label=\"Close\"\n            onClick={() => {\n              setShowMessageToast(false);\n            }}\n          ></button>\n        </div>\n        <div className=\"toast-body\">\n          {toastMessage}\n          {progress === 'hide' ? null : (\n            <>\n              <div className=\"spinner-border text-warning\" role=\"status\">\n                <span className=\"visually-hidden\">...</span>\n              </div>\n              <div className=\"progress my-2\">\n                <div\n                  className=\"progress-bar bg-warning progress-bar-striped progress-bar-animated\"\n                  role=\"progressbar\"\n                  style={{ width: progress }}\n                  aria-valuenow=\"0\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n\n      <div className=\"container-fluid px-0\">\n        <div className=\"row mt-0 mx-0\">\n          <Encounters\n            encounterList={encounters}\n            currentEncounter={currentEncounter}\n            changeCurrentEncounter={changeCurrentEncounter}\n            refreshEncounters={getEncounters}\n          />\n          <Referrals\n            onCreate={createReferral}\n            referralList={referrals}\n            currentEncounter={currentEncounter}\n            sendNotificationUU={sendNotificationUU}\n            profileName={currentProfileName}\n            updateReferralStatus={updateReferralStatus}\n            baseUrl={baseUrl}\n            sendUUNotification={sendUUNotification}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}