{"version":3,"sources":["components/Patient.js","components/Provider.js","components/ProfileSelector.js","components/Header.js","components/Encounters.js","components/EncounterSummary.js","components/CreateReferral.js","components/ReferralSummary.js","components/Referrals.js","components/Profiles.js","App.js","reportWebVitals.js","index.js"],"names":["Patient","patient","className","style","color","firstName","lastName","dob","gender","mrn","fhirId","Provider","provider","uuid","ProfileSelector","profileName","switchProfile","role","aria-label","type","name","id","autoComplete","defaultChecked","onClick","class","htmlFor","Header","title","defaultProps","Encounters","encounterList","currentEncounter","changeCurrentEncounter","refreshEncounters","console","log","length","map","encounter","index","selected","resource","eClassName","visible","encounterSelected","href","fullUrl","period","start","split","display","EncounterSummary","toggleShowNewReferral","showNewReferral","sendNotificationUU","toggle","flex_shrink","disabled","CreateReferral","onCreate","useState","referredToGroupIds","setReferredToGroupIds","referredFromGroupId","setReferredFromGroupId","networkId","setNetworkId","serviceType","setServiceType","description","setDescription","attachDocument","setAttachDocument","onSubmit","e","preventDefault","alert","placeholder","readOnly","value","onChange","target","text","options","selectedIndex","rows","cols","checked","for","ReferralSummary","referralId","referral","show","setShow","fullJson","setFullJson","expandReferralId","setExpandReferralId","showSource","closeWindow","findUUID","identifier","find","entry","system","toUpperCase","status","rowColor","Task","data-bs-toggle","data-bs-target","ServiceRequest","aria-expanded","aria-controls","authoredOn","orderDetail","owner","colspan","scoope","resourceType","Practitioner","requester","supportingInfo","DocumentReference","lastModified","Organization","family","given","Consent","consent","scope","provision","end","documentReference","Binary","binary","contentType","download","data","Communication","communication","sent","sender","recipient","payload","contentString","contentReference","Modal","size","onHide","closeButton","Title","Body","JSON","stringify","undefined","Footer","Button","variant","Referrals","referralList","setShowNewReferral","Profile_Epic","defaultPatient","defaultProvider","groupId","defaultEncounter","defaultDocumentReference","defaultBaseUrl","defaultNotificationUrl","accessToken","Profile_Logica","App","defaultProfile","defaultProfileName","currentProfileName","setCurrentProfileName","setPatient","setProvider","setCurrentEncounter","access_token","setAccessToken","baseUrl","setBaseUrl","notificationUrl","setNotificationUrl","referrals","setReferrals","encounters","setEncounters","sampleDocumentReference","setSampleDocumentReference","a","newProfile","getAccessToken","token","refreshProfileSettings","getEncounters","createReferral","nowISO","Date","toISOString","url","intent","category","coding","code","priority","subject","reference","fetch","method","headers","body","res","json","newServiceRequestId","basedOn","newTaskId","partOf","newCommunicationId","getReferrals","fetchReferrals","encounterId","referralBaseUrl","Accept","Authorization","entryList","total","forEach","push","patientId","serviceRequestId","practitionerId","organizationId","entryId","fetchCommunications","communications","fetchDocumentReferences","documentReferences","fetchBinaries","binaryList","fetchConsents","consentList","sort","b","timeA","getTime","fetchEncounters","encounterBaseUrl","taskId","documentList","documentReferenceList","content","attachment","patientFhirId","currentBaseUrl","notification","privateKey","useEffect","setProfile","updateFhir","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f09f26d1.chunk.js","sourcesContent":["import { FaRegUser } from \"react-icons/fa\";\n\nconst Patient = ({patient}) => {\n  return (\n    <div className=\"p-2\">\n      <h4 style = {{ color: \"yellow\"}}>\n          <FaRegUser /> {patient.firstName} {patient.lastName}\n      </h4>\n      <h6>\n      <span className='badge bg-light text-dark'>DOB</span> : {patient.dob}\n      <span>    </span> \n      <span className='badge bg-light text-dark'>Gender</span> : {patient.gender}\n      </h6>\n      <h6><span className='badge bg-light text-dark'>MRN</span> : {patient.mrn}</h6>\n      <h6><span className='badge bg-light text-dark'>FHIR ID</span> : {patient.fhirId}</h6>\n    </div>\n  );\n};\n\nexport default Patient;\n","import { FaUserMd } from \"react-icons/fa\";\n\nconst Provider = ({ provider }) => {\n  return (\n    <div className=\"p-2\">\n      <h4 style={{ color: \"HotPink\" }}>\n        {provider.firstName} {provider.lastName} <FaUserMd></FaUserMd>\n      </h4>\n      <h6><span className='badge bg-light text-dark'>FHIR ID</span> : {provider.fhirId}</h6>\n      <h6><span className='badge bg-light text-dark'>UUID </span> : {provider.uuid}</h6>\n    </div>\n  );\n};\n\nexport default Provider;\n","const ProfileSelector = ({ profileName, switchProfile }) => {\n  return (\n    <div className=\"btn-group mb-2\" role=\"group\" aria-label=\"Basic mixed styles example\">\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnradio\"\n        id=\"profileEpic\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === \"Epic\"}\n        onClick={() => {\n          profileName = \"Epic\";\n          switchProfile(\"Epic\");\n        }}\n      />\n      <label class=\"btn btn-outline-danger\" htmlFor=\"profileEpic\">\n        Epic AppOrchard\n      </label>\n\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnradio\"\n        id=\"profileLogica\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === \"Logica\"}\n        onClick={() => {\n          profileName = \"Logica\";\n          switchProfile(\"Logica\");\n        }}\n      />\n      <label className=\"btn btn-outline-info\" htmlFor=\"profileLogica\">\n        Logica Health\n      </label>\n    </div>\n  );\n};\n\nexport default ProfileSelector;\n","import PropTypes from \"prop-types\";\nimport Patient from \"./Patient\";\nimport Provider from \"./Provider\";\nimport ProfileSelector from \"./ProfileSelector\";\nimport { FaFire } from \"react-icons/fa\";\n\nconst Header = ({ title, patient, provider, profileName, switchProfile }) => {\n  return (\n    <header>\n      <div id=\"navbarTop\">\n        <div className=\"row\">\n          <div className=\"col-lg-6 col-md-12 order-lg-2\">\n            <h2 className=\"pt-4\">\n              <FaFire style={{ color: \"#d60c05ee\" }} /> {title}\n            </h2>\n            <ProfileSelector profileName = {profileName} switchProfile = {switchProfile} />\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 order-lg-1\">\n            <Patient patient={patient} />\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 order-lg-3\">\n            <Provider provider={provider} />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: \"Mock EHR : : Social Care Referrals\",\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n// const headingStyle = {\n//   color: \"white\",\n//   backgroundColor: \"#2c405a\",\n// };\n\nexport default Header;\n","import {FcRefresh} from 'react-icons/fc'\nimport {FaCalendarCheck} from 'react-icons/fa'\n\nconst Encounters = ({ encounterList, currentEncounter = 'smart-2', changeCurrentEncounter, refreshEncounters }) => {\n  const refresh = () => {\n    console.log(\"Retrieving patient's encounters\");\n    refreshEncounters();\n  };\n\n  const setCurrentEncounter = (encounterSelected) => {\n    changeCurrentEncounter(encounterSelected)\n  }\n\n  return (\n    <div className=\"encounter col-md-3 col-lg-2 mx-0 px-0\">\n      <div\n        className=\"btn btn-default btn-lg btn-block table-hover mx-0\"\n        onClick={refresh}\n      >\n        All Encounters\n        <div className=\"badge bg-primary mx-2\">{encounterList.length}</div>\n        <FcRefresh />\n      </div>\n\n      <dl>\n        {encounterList.map((encounter, index) => {\n          const selected = (encounter.resource.id === currentEncounter)\n          const eClassName = selected\n            ? \"row list-hover m-0 px-2 selected\"\n            : \"row list-hover m-0 px-2\";\n          const visible = selected\n            ? \"visible\"\n            : \"invisible\";\n\n            return <div key={index} className={eClassName} onClick={() => setCurrentEncounter(encounter.resource.id)}>\n            <dt>\n              <a href={encounter.fullUrl}>{encounter.resource.id} <FaCalendarCheck className={visible} /></a>\n            </dt>\n            <dd>\n              { <div>{encounter.resource.period.start.split(\"T\")[0]}</div> }\n              { <div> {encounter.resource.class.display}</div> }\n            </dd>\n          </div>\n        }\n        )\n      }\n      </dl>\n    </div>\n  );\n};\n\nexport default Encounters;\n","const EncounterSummary = ({\n  toggleShowNewReferral,\n  showNewReferral,\n  currentEncounter,\n  sendNotificationUU,\n  profileName,\n}) => {\n  const toggle = () => {\n    toggleShowNewReferral();\n  };\n\n  const sendNotification = () => {\n    console.log(\"sending an encounter notification to Unite Us...\");\n    sendNotificationUU();\n  };\n\n  return (\n    <div className=\"encounterSummary\">\n      <div className=\"row pt-2 row-cols-1 row-cols-lg-3 mx-auto\" style={{flex_shrink: 1}}>\n        <div className=\"col mx-auto\">\n          <h4>Current Encounter: {currentEncounter}</h4>\n        </div>\n        <div className=\"col\">\n        {!showNewReferral ? (\n          \n          <button\n            className=\"btn btn-primary btn-block mx-1\"\n            onClick={toggle}\n            disabled={profileName === \"Epic\"}\n          >\n            Create New Referral\n          </button>\n     \n        ) : (\n          <button\n            className=\"btn btn-warning btn-block col mx-1\"\n            onClick={toggle}\n          >\n            Cancel New Referral\n          </button>\n        )}\n     </div>\n     <div className=\"col\">\n        <button\n          className=\"btn btn-primary btn-block col mx-1\"\n          onClick={sendNotification}\n        >\n          Send Notification to Unite Us\n        </button>\n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EncounterSummary;\n","import { useState } from \"react\";\nimport { GrAttachment } from \"react-icons/gr\";\n\nexport const CreateReferral = ({ onCreate, toggleShowNewReferral }) => {\n  const [referredToGroupIds, setReferredToGroupIds] = useState(\"\");\n  const [referredFromGroupId, setReferredFromGroupId] = useState(\"\");\n  const [networkId, setNetworkId] = useState(\"\");\n  const [serviceType, setServiceType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [attachDocument, setAttachDocument] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!serviceType) {\n      alert(\"Please select a service for the referral!\");\n      return;\n    }\n\n    onCreate({\n      serviceType,\n      description,\n      referredToGroupIds,\n      referredFromGroupId,\n      networkId,\n      attachDocument,\n    });\n\n    setReferredToGroupIds(\"\");\n    setReferredFromGroupId(\"demo-hospital\");\n    setNetworkId(\"demo-network\");\n    setServiceType(\"\");\n    setDescription(\"\");\n    setAttachDocument(false);\n  };\n\n  const cancelReferralCreation = () => {\n    toggleShowNewReferral();\n  };\n  return (\n    <div className=\"newReferral\">\n      <form className=\"add-form\" onSubmit={onSubmit}>\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SENDING NETWORK</label>\n              <div>\n                <input\n                  className=\"form-select\"\n                  type=\"text\"\n                  placeholder=\"Healthy Demo Network\"\n                  readOnly\n                  disabled\n                  value={networkId}\n                  onChange={(e) => setNetworkId(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label className=\"col-form-label\">RECEIVING NETWORK</label>\n              <div>\n                <input\n                  className=\"form-select\"\n                  type=\"text\"\n                  readOnly\n                  disabled\n                  placeholder=\"Healthy Demo Network\"\n                  value={networkId}\n                  onChange={(e) => setNetworkId(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SENDER</label>\n              <div>\n                <input\n                  className=\"form-select\"\n                  type=\"text\"\n                  readOnly\n                  disabled\n                  placeholder=\"Local Hospital Center\"\n                  value={referredFromGroupId}\n                  onChange={(e) => setReferredFromGroupId(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"col-lg-6\">\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SERVICE TYPE</label>\n              <div>\n                <select\n                  className=\"form-select\"\n                  value={serviceType.value}\n                  onChange={(e) =>\n                    setServiceType({\n                      value: e.target.value,\n                      text: e.target.options[e.target.selectedIndex].text,\n                    })\n                  }\n                >\n                  <option>Select a service ...</option>\n                  <option value=\"f020d616-5016-4fb7-9fad-91d8d99cd7a1\">\n                    Emergency Food\n                  </option>\n                  <option value=\"f6760383-7fc4-442b-b686-fc5055bfec06\">\n                    Emergency Housing\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">RECEIPIENT</label>\n              <div>\n                <select\n                  className=\"form-select\"\n                  value={referredToGroupIds.value}\n                  onChange={(e) =>\n                    setReferredToGroupIds({\n                      value: e.target.value,\n                      text: e.target.options[e.target.selectedIndex].text,\n                    })\n                  }\n                >\n                  <option>Select an organization ...</option>\n                  <option value=\"14742\">Housing California</option>\n                  <option value=\"14733\">River City Food Bank</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">DESCRIPTION</label>\n              <div>\n                <textarea\n                  className=\"form-control\"\n                  rows=\"3\"\n                  cols=\"50\"\n                  placeholder=\"Enter a description for the referral\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <div className=\"form-check form-switch mx-2 text-start\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  id=\"flexSwitchCheckDefault\"\n                  checked={attachDocument}\n                  onChange={(e) => setAttachDocument(e.target.checked)}\n                />\n                <label\n                  className=\"form-check-label\"\n                  for=\"flexSwitchCheckDefault\"\n                >\n                  Attach document to the communication{\" \"}\n                  <GrAttachment></GrAttachment>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row d-inline\">\n          <input\n            value=\"Cancel\"\n            className=\"btn btn-warning col-md-6 mt-4\"\n            onClick={cancelReferralCreation}\n            readOnly\n          />\n\n          <input\n            value=\"Submit\"\n            className=\"btn btn-primary col-md-6 mt-4\"\n            onClick={onSubmit}\n            readOnly\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateReferral;\n","import { IoOpenOutline, IoCloudDownloadSharp } from \"react-icons/io5\";\nimport { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction ReferralSummary({ referral }) {\n  const [show, setShow] = useState(false);\n  const [fullJson, setFullJson] = useState();\n  const [expandReferralId, setExpandReferralId] = useState(\"\");\n\n  const showSource = (fullJson) => {\n    setFullJson(fullJson);\n    setShow(true);\n  };\n\n  const closeWindow = () => setShow(false);\n\n  let findUUID = (resource) => {\n    const cboUUID = resource.identifier.find(\n      (entry) =>\n        entry.system.toUpperCase() ===\n        \"HTTPS://UNITEUS.COM/IO/STRUCTUREDEFINITION/CBO-UUID\"\n    );\n    return cboUUID;\n  };\n\n  const toggleExpand = (referralId) => {\n    if (expandReferralId === referralId) setExpandReferralId(\"\");\n    else setExpandReferralId(referralId);\n    console.log(\"expand row: \", expandReferralId);\n  };\n\n  const expandStatus = (referralId) => {\n    console.log(\"expand \", referralId);\n    return expandReferralId === referralId;\n  };\n\n  const rowColor = (status) => {\n    switch (status) {\n      case \"accepted\":\n        return \"table-primary\";\n      case \"in-progress\":\n        return \"table-info\";\n      case \"rejected\":\n        return \"table-warning\";\n      case \"failed\":\n        return \"table-danger\";\n      case \"completed\":\n        return \"table-success\";\n      case \"cancelled\":\n        return \"table-secondary\";\n      default:\n        return \"table-ghostwhite\";\n    }\n  };\n\n  return (\n    <>\n      <tr\n        className={rowColor(referral.Task?.resource?.status)}\n        role=\"button\"\n        data-bs-toggle=\"collapse\"\n        data-bs-target={\"#referral\" + referral.ServiceRequest.resource.id}\n        aria-expanded=\"false\"\n        aria-controls={\"referral\" + referral.ServiceRequest.resource.id}\n      >\n        <td>{referral.ServiceRequest.resource.authoredOn}</td>\n        <td>{referral.Task?.resource?.status}</td>\n        <td>\n          {referral.ServiceRequest.resource.orderDetail\n            ? referral.ServiceRequest.resource.orderDetail[0].text\n            : \"Not Confirmed\"}\n        </td>\n        <td>{referral.Task?.resource?.owner?.display}</td>\n        <td>\n          <a class=\"btn btn-primary\" role=\"button\" \n            data-bs-toggle=\"collapse\"\n            href={\"#referral\" + referral.ServiceRequest.resource.id}\n            aria-expanded=\"false\"\n            aria-controls={\"referral\" + referral.ServiceRequest.resource.id}\n            onClick={() => toggleExpand(referral.ServiceRequest.resource.id)}\n          >\n            Fhir Resources\n          </a>\n        </td>\n      </tr>\n      <tr\n        className={expandStatus(referral.ServiceRequest.resource.id) ? \"table-light\" : \"collapse\"}\n        id={\"referral\" + referral.ServiceRequest.resource.id}\n      >\n        <td colspan=\"5\">\n          <div className=\"row px-3\">\n            <table className=\"table table-sm align-middle text-start\">\n              <tbody>\n                <tr>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() =>\n                        showSource(referral.ServiceRequest.resource)\n                      }\n                    >\n                      {referral.ServiceRequest.resource.resourceType}{\" \"}\n                      <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td>\n                    Referral was authored on{\" \"}\n                    <div className=\"btn btn-outline-primary disabled\">\n                      {referral.ServiceRequest.resource.authoredOn}\n                    </div>{\" \"}\n                    by{\" \"}\n                    <div\n                      className=\"btn btn-outline-primary\"\n                      onClick={() => showSource(referral.Practitioner.resource)}\n                    >\n                      {referral.ServiceRequest.resource.requester.display}{\" \"}\n                      <IoOpenOutline />\n                    </div>\n                    .{\" \"}\n                    {referral.ServiceRequest.resource.orderDetail ? (\n                      <span>\n                        {\"Service type is \"}\n                        <div className=\"btn btn-outline-primary disabled\">\n                          {referral.ServiceRequest.resource.orderDetail[0].text}\n                        </div>\n                        .\n                      </span>\n                    ) : (\n                      \"Service type has not been confirmed yet.\"\n                    )}\n                    {referral.ServiceRequest.resource.supportingInfo ? (\n                      <span>\n                        {\" \"}\n                        Attached is a supporting document of\n                        <div\n                          className=\"btn btn-outline-primary\"\n                          onClick={() =>\n                            showSource(referral.DocumentReference[0])\n                          }\n                        >\n                          {referral.DocumentReference[0].type.text}{\" \"}\n                          <IoOpenOutline />\n                        </div>\n                      </span>\n                    ) : null}\n                  </td>\n                </tr>\n                <tr>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() => showSource(referral.Task.resource)}\n                    >\n                      {referral.Task.resource.resourceType} <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td>\n                    <span>\n                      Referral status is{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Task?.resource?.status}\n                      </div>\n                      , last modified on{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Task?.resource?.lastModified}\n                      </div>\n                    </span>{\" \"}\n                    <span>\n                      Recipient is{\" \"}\n                      <div\n                        className=\"btn btn-outline-primary\"\n                        onClick={() =>\n                          showSource(referral.Organization?.resource)\n                        }\n                      >\n                        {referral.Task?.resource?.owner?.display}{\" \"}\n                        <IoOpenOutline />\n                      </div>\n                    </span>\n                  </td>\n                </tr>\n                {referral.Organization ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() =>\n                          showSource(referral.Organization.resource)\n                        }\n                      >\n                        {referral.Organization.resource.resourceType}{\" \"}\n                        <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      <span>\n                        Recipient is{\" \"}\n                        <div className=\"btn btn-outline-primary disabled\">\n                          {referral.Organization.resource.name}\n                        </div>\n                      </span>\n                      {findUUID(referral.Organization.resource) ? (\n                        <span>\n                          Their Unite Us UUID is{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {findUUID(referral.Organization.resource).value}\n                          </div>\n                        </span>\n                      ) : null}\n                    </td>\n                  </tr>\n                ) : null}\n                {referral.Patient ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() => showSource(referral.Patient.resource)}\n                      >\n                        {referral.Patient.resource.resourceType}{\" \"}\n                        <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Patient.resource.name[0].family},{\" \"}\n                        {referral.Patient.resource.name[0].given[0]}\n                      </div>\n                    </td>\n                  </tr>\n                ) : null}\n                {referral.Practitioner ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() =>\n                          showSource(referral.Practitioner.resource)\n                        }\n                      >\n                        {referral.Practitioner.resource.resourceType}{\" \"}\n                        <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Practitioner.resource.name[0].family},{\" \"}\n                        {referral.Practitioner.resource.name[0].given[0]}\n                      </div>\n                    </td>\n                  </tr>\n                ) : null}\n\n                {referral.Consent?.map((consent, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(consent.resource)}\n                        >\n                          {consent.resource.resourceType} <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          Consent status is{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.status}\n                          </div>\n                          . Scope is{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.scope?.text}\n                          </div>\n                          . Provision period is from\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.provision?.period?.start}\n                          </div>\n                          to\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.provision?.period?.end}\n                          </div>\n                        </span>\n                      </td>\n                    </tr>\n                  );\n                })}\n\n                {referral.DocumentReference?.map((documentReference, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(documentReference)}\n                        >\n                          {documentReference.resourceType} <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          Document type is{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {documentReference.type.text}\n                          </div>\n                          . Document description is{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {documentReference.description}\n                          </div>\n                        </span>\n                      </td>\n                    </tr>\n                  );\n                })}\n\n                {referral.Binary?.map((binary, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(binary)}\n                        >\n                          {binary.resourceType} <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          Content type is{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {binary.contentType}\n                          </div>\n                          .\n                        </span>{\" \"}\n                        <div className=\"btn btn-link\">\n                          <a\n                            download=\"Epic_CRN.pdf\"\n                            href={`data:application/pdf;base64,${binary.data}`}\n                            title=\"Download pdf document\"\n                          >\n                            Click to download PDF file <IoCloudDownloadSharp />\n                          </a>\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n\n                {referral.Communication?.map((communication, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(communication.resource)}\n                        >\n                          {communication.resource.resourceType}{\" \"}\n                          <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          On{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {communication.resource?.sent}\n                          </div>\n                          , sent from{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {communication.resource?.sender.display}\n                          </div>\n                          to{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {communication.resource?.recipient[0].display}\n                          </div>\n                          .\n                        </span>\n                        {communication.resource.payload ? (\n                          <p>\n                            {\" \"}\n                            Note message:{\" \"}\n                            <div className=\"btn btn-outline-primary disabled\">\n                              {communication.resource.payload[0].contentString}\n                            </div>\n                          </p>\n                        ) : (\n                          <span> Note message is empty.</span>\n                        )}\n                        {communication.resource.payload &&\n                        communication.resource.payload[1]?.contentReference ? (\n                          <p>\n                            {\" \"}\n                            A{\" \"}\n                            <div\n                              className=\"btn btn-outline-primary\"\n                              onClick={() =>\n                                showSource(referral.DocumentReference[0])\n                              }\n                            >\n                              document <IoOpenOutline />\n                            </div>{\" \"}\n                            was attached to the communication.\n                          </p>\n                        ) : null}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n\n          <Modal size=\"lg\" show={show} onHide={closeWindow}>\n            <Modal.Header closeButton>\n              <Modal.Title>\n                {fullJson?.resourceType} : {fullJson?.id}\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <pre id=\"json\">{JSON.stringify(fullJson, undefined, 2)}</pre>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"warning\" onClick={closeWindow}>\n                Close\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </td>\n      </tr>\n    </>\n  );\n}\n\nexport default ReferralSummary;\n","import EncounterSummary from \"./EncounterSummary\";\nimport CreateReferral from \"./CreateReferral\";\nimport { useState } from \"react\";\nimport ReferralSummary from \"./ReferralSummary\";\n\nfunction Referrals({\n  onCreate,\n  referralList,\n  currentEncounter,\n  sendNotificationUU,\n  profileName,\n}) {\n  const [showNewReferral, setShowNewReferral] = useState(false);\n\n  const toggleShowNewReferral = () => {\n    setShowNewReferral((showNewReferral) => !showNewReferral);\n  };\n\n  const onCreateReferral = (referral) => {\n    onCreate(referral);\n    toggleShowNewReferral();\n  };\n  return (\n    <div className=\"col-md-9 col-lg-10 px-0\">\n      <div className=\"referrals\">\n        <EncounterSummary\n          toggleShowNewReferral={toggleShowNewReferral}\n          showNewReferral={showNewReferral}\n          currentEncounter={currentEncounter}\n          sendNotificationUU={sendNotificationUU}\n          profileName={profileName}\n        />\n        {showNewReferral ? (\n          <CreateReferral\n            onCreate={onCreateReferral}\n            toggleShowNewReferral={toggleShowNewReferral}\n          />\n        ) : null}\n        <div className=\"referralList\">\n          <div className=\"h5 py-3\">\n            This encounter has{\" \"}\n            {referralList.length > 1\n              ? referralList.length + \" referrals.\"\n              : referralList.length === 1\n              ? \" 1 referral.\"\n              : \" no referrals.\"}\n          </div>\n          {referralList.length > 0\n                ? \n          <table className=\"table table-hover\">\n            <thead>\n              <tr>\n                <th>DATE SENT</th>\n                <th>STATUS</th>\n                <th>SERVICE TYPE</th>\n                <th>RECEIPIENT</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {referralList.map((referral, index) => (\n                    <ReferralSummary key={index} referral={referral} />\n                  ))\n              }\n            </tbody>\n          </table>\n          : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Referrals;\n","export const Profile_Epic = {\n  name: 'Epic',\n\n  defaultPatient: {\n    firstName: \"Calvin\",\n    lastName: \"Ccm\",\n    gender: \"Male\",\n    dob: \"01/01/1940\",\n    mrn: \"203722\",\n    fhirId: \"e4ikKcC2Rp3EsZQh8Ac6C5A3\",\n    uuid: \"b5318891-3dc8-426a-af50-531e106ad1a1\",\n  },\n\n  defaultProvider: {\n    firstName: \"Case\",\n    lastName: \"Manager\",\n    fhirId: \"eaToFIkaJ32mO4K002q3BLw3\",\n    uuid: \"94e5f7ee-1425-42bc-8833-3474b687b125\",\n    groupId: \"bf4aa373-81eb-4da5-9980-2d3e51c57b3c\",\n    networkId: \"145ca925-ba86-490d-b404-35f4fe5ada66\",\n  },\n\n  defaultEncounter: \"eFBT3k94CLm3fCPMNlKH2DQ3\", //\"enZf6GWN2rMGQWF1rqqDgNg3\",\n  defaultDocumentReference: \"e.-1q0eXQDEZ.9mNdXwVjYA3\",\n  defaultBaseUrl:\n    \"https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4\",\n  defaultNotificationUrl:\n    \"https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService\",\n  accessToken : \"e2a4575581b3f57203e182b0b1f3dcea479baecd31bef125cc57f6dd4b8905ac\"\n};\n\nexport const Profile_Logica = {\n  name: 'Logica',\n\n  defaultPatient: {\n    firstName: \"Beverly\",\n    lastName: \"Ccm\",\n    gender: \"Female\",\n    dob: \"01/01/1940\",\n    mrn: \"203722\",\n    fhirId: \"14730\",\n    uuid: \"b5318891-3dc8-426a-af50-531e106ad1a1\",\n  },\n\n  defaultProvider: {\n    firstName: \"Demo\",\n    lastName: \"Provider\",\n    fhirId: \"14734\",\n    uuid: \"94e5f7ee-1425-42bc-8833-3474b687b125\",\n    groupId: \"bf4aa373-81eb-4da5-9980-2d3e51c57b3c\",\n    networkId: \"145ca925-ba86-490d-b404-35f4fe5ada66\",\n  },\n\n  defaultEncounter: \"14732\",\n  defaultDocumentReference: \"14740\",\n\n  defaultBaseUrl: \"https://api.logicahealth.org/uufhircrn/open\",\n\n  defaultNotificationUrl:\n    \"https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService\",\n  accessToken: \"\"\n};\n\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Encounters from \"./components/Encounters\";\nimport Referrals from \"./components/Referrals\";\nimport { useState, useEffect } from \"react\";\nimport { Profile_Epic, Profile_Logica } from \"./components/Profiles\";\n\nfunction App() {\n  const defaultProfile = Profile_Epic;\n  const defaultProfileName = defaultProfile.name;\n  const [currentProfileName, setCurrentProfileName] =\n    useState(defaultProfileName);\n  //const [profile, setProfile] = useState(defaultProfile);\n  const [patient, setPatient] = useState(defaultProfile.defaultPatient);\n  const [provider, setProvider] = useState(defaultProfile.defaultProvider);\n  const [currentEncounter, setCurrentEncounter] = useState(\n    defaultProfile.defaultEncounter\n  );\n  const [accessToken, setAccessToken] = useState(defaultProfile.access_token);\n  const [baseUrl, setBaseUrl] = useState(defaultProfile.defaultBaseUrl);\n  const [notificationUrl, setNotificationUrl] = useState(\n    defaultProfile.defaultNotificationUrl\n  );\n  const [referrals, setReferrals] = useState([]);\n  const [encounters, setEncounters] = useState([]);\n\n  const [sampleDocumentReference, setSampleDocumentReference] = useState(\"\");\n\n  const switchProfile = async (profileName) => {\n    //if (profileName === currentProfileName) return\n\n    console.log(\"Switch to profile: \", profileName);\n    setCurrentProfileName(profileName);\n    const newProfile = profileName === \"Logica\" ? Profile_Logica : Profile_Epic;\n    setPatient(newProfile.defaultPatient);\n    setProvider(newProfile.defaultProvider);\n    setBaseUrl(newProfile.defaultBaseUrl);\n    setNotificationUrl(newProfile.defaultNotificationUrl);\n    if (newProfile.name === \"Epic\") {\n      let token = await getAccessToken();\n      setAccessToken(token);\n    } else setAccessToken(newProfile.accessToken);\n  };\n\n  const refreshProfileSettings = async () => {\n    const encounterList = await getEncounters(patient.fhirId, baseUrl);\n    if (encounterList?.length > 0) {\n      await changeCurrentEncounter(encounterList[0].resource.id, baseUrl);\n    }\n  };\n\n  // Create a referral\n  const createReferral = async (referral) => {\n    console.log(\"create referral: \", referral);\n    const nowISO = new Date().toISOString();\n\n    // Create ServiceRequest\n    let url = baseUrl + \"/ServiceRequest\";\n    let resource = {\n      resourceType: \"ServiceRequest\",\n      status: \"active\",\n      intent: \"plan\",\n      category: [\n        {\n          coding: [\n            {\n              system: \"http://snomed.info/sct\",\n              code: \"307835004\",\n              display: \"Referral by service\",\n            },\n          ],\n          text: \"Referral by service\",\n        },\n      ],\n      priority: \"routine\",\n      subject: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + \", \" + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      authoredOn: nowISO,\n      requester: [\n        {\n          reference: `Practitioner/${provider.fhirId}`,\n          display: provider.firstName + \" \" + provider.lastName,\n        },\n      ],\n      // orderDetail: {\n      //   text: referral.serviceType.text,\n      //   coding: [\n      //     {\n      //       system: \"Unite Us\",\n      //       code: referral.serviceType.value,\n      //       display: referral.serviceType.text,\n      //     },\n      //   ],\n      // },\n    };\n\n    if (referral.attachDocument && sampleDocumentReference.length > 0) {\n      resource.supportingInfo = [\n        {\n          reference: `DocumentReference/${sampleDocumentReference}`,\n        },\n      ];\n    }\n\n    let res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(resource),\n    });\n\n    let data = await res.json();\n    let newServiceRequestId = data.id;\n    console.log(\"server request id: \", newServiceRequestId);\n\n    // Create Task\n    url = baseUrl + \"/Task\";\n    resource = {\n      resourceType: \"Task\",\n      basedOn: [\n        {\n          reference: `ServiceRequest/${newServiceRequestId}`,\n        },\n      ],\n      status: \"requested\",\n      intent: \"plan\",\n      priority: \"routine\",\n      for: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + \", \" + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      authoredOn: nowISO,\n      lastModified: nowISO,\n      requester: [\n        {\n          reference: `Practitioner/${provider.fhirId}`,\n          display: provider.firstName + \" \" + provider.lastName,\n        },\n      ],\n      // description:\n      //   referral.description +\n      //   \"/n referred to : \" +\n      //   referral.referredToGroupIds.text +\n      //   \" [\" +\n      //   referral.referredToGroupIds.value +\n      //   \"]\",\n      owner: {\n        reference: `Organization/${referral.referredToGroupIds.value}`,\n        display: referral.referredToGroupIds.text,\n      },\n    };\n\n    res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(resource),\n    });\n\n    data = await res.json();\n    let newTaskId = data.id;\n    console.log(\"Task id: \", newTaskId);\n\n    // Create initial Communication\n    url = baseUrl + \"/Communication\";\n    resource = {\n      resourceType: \"Communication\",\n      basedOn: [\n        {\n          reference: `ServiceRequest/${newServiceRequestId}`,\n        },\n      ],\n      partOf: [\n        {\n          reference: `Task/${newTaskId}`,\n        },\n      ],\n      status: \"in-progress\",\n      subject: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + \", \" + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      sent: nowISO,\n      recipient: [\n        {\n          reference: `Organization/${referral.referredToGroupIds.value}`,\n          display: referral.referredToGroupIds.text,\n        },\n      ],\n      sender: {\n        reference: `Practitioner/${provider.fhirId}`,\n        display: provider.firstName + \" \" + provider.lastName,\n      },\n    };\n\n    if (referral.description.length > 0) {\n      resource.payload = [\n        {\n          contentString: referral.description,\n        },\n      ];\n    }\n\n    if (referral.attachDocument && sampleDocumentReference.length > 0) {\n      resource.payload = [\n        ...resource.payload,\n        {\n          contentReference: {\n            reference: `DocumentReference/${sampleDocumentReference}`,\n          },\n        },\n      ];\n    }\n\n    res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(resource),\n    });\n\n    data = await res.json();\n    let newCommunicationId = data.id;\n    console.log(\"Communication id: \", newCommunicationId);\n\n    await getReferrals();\n  };\n\n  const fetchReferrals = async (\n    encounterId = currentEncounter,\n    referralBaseUrl = baseUrl\n  ) => {\n    const url =\n      referralBaseUrl +\n      \"/Task?encounter=\" +\n      encounterId +\n      \"&_include=Task%3Apatient&_include=Task%3Aencounter&_include=Task%3Arequester&_include=Task%3A\" +\n      \"based-on\" + //(currentProfileName === \"Epic\" ? \"basedon\" : \"based-on\") + \"%3AServiceRequest\" +\n      \"&_include=Task%3Aowner%3AOrganization\";\n\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n      },\n    });\n    const data = await res.json();\n    let entryList = data.total === 0 ? [] : data.entry;\n    if (!entryList) return [];\n    console.log(\"Task bundle received: \", entryList);\n\n    // //_include works at Epic, no need to fetch ServiceRequest seperatedly\n    // const url2 = baseUrl + \"/ServiceRequest?encounter=\" + encounterId;\n    // const res2 = await fetch(url2, {\n    //   method: \"GET\",\n    //   headers: {\n    //     \"Content-type\": \"application/json\",\n    //     Accept: \"application/json\",\n    //     Authorization: accessToken.length > 0 ? \"bearer \" + accessToken : \"\",\n    //   },\n    // });\n    // const data2 = await res2.json();\n    // let entryList2 = data2.total === 0 ? [] : data2.entry;\n    // entryList = entryList.concat(entryList2);\n\n    //filter ServiceRequest and Task\n    // if (entryList.length > 0) {\n    //   entryList = entryList.filter((entry) => {\n    //     return (\n    //       entry.resource.resourceType === \"ServiceRequest\" ||\n    //       entry.resource.resourceType === \"Task\"\n    //     );\n    //   });\n    // }\n\n    // Take all the Task\n    let referralList = [];\n    entryList.forEach((entry, index) => {\n      if (entry.resource.resourceType === \"Task\") {\n        let referral = {\n          id: \"Task/\" + entry.resource.id,\n          Task: entry,\n        };\n        referralList.push(referral);\n      }\n    });\n\n    // Group the other resources with the Task\n    referralList.forEach((referral, index) => {\n      const resource = referral?.Task?.resource;\n      if (!resource) return;\n\n      const patientId = resource.for?.reference;\n      const serviceRequestId = resource.basedOn[0].reference;\n      const practitionerId = resource.requester?.reference;\n      const organizationId = resource.owner?.reference;\n\n      entryList.forEach((entry, index) => {\n        let entryId = entry.resource.id;\n        switch (entry.resource.resourceType) {\n          case \"ServiceRequest\": {\n            if (serviceRequestId === `ServiceRequest/${entryId}`)\n              referral.ServiceRequest = entry;\n            break;\n          }\n          case \"Patient\": {\n            if (patientId === `Patient/${entryId}`) referral.Patient = entry;\n            break;\n          }\n          case \"Organization\": {\n            if (organizationId === `Organization/${entryId}`)\n              referral.Organization = entry;\n            break;\n          }\n          case \"Practitioner\": {\n            if (practitionerId === `Practitioner/${entryId}`)\n              referral.Practitioner = entry;\n            break;\n          }\n          default:\n        }\n      });\n    });\n\n    // Fetch Communications for each Task\n    for (let referral of referralList) {\n      const referralId = referral?.Task?.resource?.id;\n      const communications = await fetchCommunications(referralId);\n      referral.Communication = communications.entry;\n    }\n\n    // Fetch DocumentReferences for each ServiceRequest\n    for (let referral of referralList) {\n      const documentReferences = await fetchDocumentReferences(referral);\n      if (documentReferences?.length > 0) {\n        referral.DocumentReference = documentReferences;\n        setSampleDocumentReference(referral.DocumentReference[0].id);\n        console.log(\"documentReference\", referral.DocumentReference);\n        console.log(\"sampleDocumentReference\", sampleDocumentReference);\n      }\n    }\n\n    // Fetch Binaries for all DocumentReferences\n    for (let referral of referralList) {\n      if (referral.DocumentReference?.length > 0) {\n        const binaryList = await fetchBinaries(referral.DocumentReference);\n        if (binaryList?.length > 0) {\n          referral.Binary = binaryList;\n        }\n      }\n    }\n\n    //referralList = referralList.filter((entry) => {\n    //  return entry.Task;\n    //});\n\n    // Fetch Consents\n    //if (currentProfileName === \"Epic\") {\n    const consentList = await fetchConsents();\n    if (consentList?.length > 0) {\n      referralList.forEach((entry, index) => {\n        entry.Consent = consentList;\n      });\n    }\n    //}\n\n    console.log(\"referral list\", referralList);\n    referralList.sort((a, b) => {\n      const timeA = new Date(a.ServiceRequest.resource.authoredOn).getTime();\n      const timeB = new Date(b.ServiceRequest.resource.authoredOn).getTime();\n      return timeB - timeA;\n    });\n    return referralList;\n  };\n\n  const fetchEncounters = async (\n    patientId = patient.fhirId,\n    encounterBaseUrl = baseUrl\n  ) => {\n    const url = encounterBaseUrl + \"/Encounter?patient=\" + patientId;\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization:\n          accessToken?.length > 0 && currentProfileName === \"Epic\"\n            ? \"bearer \" + accessToken\n            : \"\",\n      },\n    });\n    const data = await res.json();\n\n    const encounterList = data.total > 0 ? data.entry : [];\n\n    encounterList.sort((a, b) => {\n      const timeA = new Date(a.resource.period.start).getTime();\n      const timeB = new Date(b.resource.period.start).getTime();\n      return timeB - timeA;\n    });\n    console.log(\"encounter\", encounterList);\n    return encounterList;\n  };\n\n  // Fetch Communications for a Task\n  const fetchCommunications = async (taskId) => {\n    const url = baseUrl + \"/Communication?part-of=\" + taskId;\n\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n      },\n    });\n    const data = await res.json();\n    console.log(\"communications: \", data);\n    return data;\n  };\n\n  // Fetch DocumentReferences for a ServiceRequest\n  const fetchDocumentReferences = async (referral) => {\n    const documentList = [];\n    const supportingInfo = referral?.ServiceRequest?.resource?.supportingInfo;\n\n    if (!supportingInfo) return documentList;\n\n    for (let entry of supportingInfo) {\n      const url = baseUrl + \"/\" + entry.reference;\n      const res = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n        },\n      });\n      const data = await res.json();\n      console.log(\"documentReference: \", data);\n      if (data?.resourceType === \"DocumentReference\") documentList.push(data);\n    }\n\n    return documentList;\n  };\n\n  // Fetch DocumentReferences for a ServiceRequest\n  const fetchBinaries = async (documentReferenceList) => {\n    const binaryList = [];\n\n    if (!documentReferenceList) return binaryList;\n\n    for (let entry of documentReferenceList) {\n      const url = baseUrl + \"/\" + entry.content[0]?.attachment?.url;\n      const res = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Accept: \"application/fhir+json\",\n          Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n        },\n      });\n      const data = await res.json();\n      if (data?.resourceType === \"Binary\") {\n        binaryList.push(data);\n      }\n    }\n\n    return binaryList;\n  };\n\n  // Fetch Consent for a Patient\n  const fetchConsents = async (\n    patientFhirId = patient.fhirId,\n    category = currentProfileName === \"Epic\"\n      ? \"http://loinc.org|64292-6\"\n      : \"64292-6\",\n    status = \"active\"\n  ) => {\n    const url = `${baseUrl}/Consent?patient=${patientFhirId}&category=${category}&status=${status}`;\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n      },\n    });\n    const data = await res.json();\n    console.log(\"consent: \", data);\n    return data.entry;\n  };\n\n  const changeCurrentEncounter = async (encounterSelected, currentBaseUrl) => {\n    //if (encounterSelected === currentEncounter) return;\n\n    setCurrentEncounter(encounterSelected);\n    await getReferrals(encounterSelected, currentBaseUrl);\n    return;\n  };\n\n  const getReferrals = async (encounterSelected, referralBaseUrl) => {\n    const data = await fetchReferrals(encounterSelected, referralBaseUrl);\n    setReferrals(data);\n  };\n\n  const getEncounters = async (patientId, encounterBaseUrl) => {\n    const data = await fetchEncounters(patientId, encounterBaseUrl);\n    setEncounters(data);\n    return data;\n  };\n\n  const sendNotificationUU = async () => {\n    const url = notificationUrl;\n    const notification = {\n      resourceType: \"Bundle\",\n      type: \"Event\",\n      entry: [\n        {\n          fullUrl: baseUrl + \"/Encounter/\" + currentEncounter,\n        },\n      ],\n    };\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"x-api-key\": \"sfsdfddfdsfsdfs32342343\", //\"wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03\",\n      },\n      body: JSON.stringify(notification),\n    });\n    const data = await res.json();\n    console.log(\"notification response: \", data);\n    return data;\n  };\n\n  const getAccessToken = async () => {\n    const url =\n      \"https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/authentication/token\";\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        \"x-api-key\": \"sfsdfddfdsfsdfs32342343\", //\"wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      body: JSON.stringify({\n        privateKey: null,\n      }),\n    });\n    const data = await res.json();\n    const token = data.body.access_token;\n    console.log(\"access token \", token);\n    return token;\n  };\n\n  useEffect(() => {\n    const setProfile = async (profileName) => {\n      await switchProfile(profileName);\n    };\n\n    setProfile(defaultProfileName);\n  }, []);\n\n  useEffect(() => {\n    const updateFhir = async () => {\n      await refreshProfileSettings();\n    };\n\n    updateFhir();\n  }, [accessToken]);\n\n  return (\n    <div className=\"App\">\n      <Header\n        patient={patient}\n        provider={provider}\n        profileName={currentProfileName}\n        switchProfile={switchProfile}\n      />\n      <div className=\"container-fluid\">\n        <div className=\"row mt-1 mx-0\">\n          <Encounters\n            encounterList={encounters}\n            currentEncounter={currentEncounter}\n            changeCurrentEncounter={changeCurrentEncounter}\n            refreshEncounters={getEncounters}\n          />\n          <Referrals\n            onCreate={createReferral}\n            referralList={referrals}\n            currentEncounter={currentEncounter}\n            sendNotificationUU={sendNotificationUU}\n            profileName={currentProfileName}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}