{"version":3,"sources":["components/Patient.js","components/Provider.js","components/ProfileSelector.js","components/Header.js","components/Encounters.js","components/EncounterSummary.js","components/CreateReferral.js","components/ReferralSummary.js","components/Referrals.js","components/Profiles.js","App.js","reportWebVitals.js","index.js"],"names":["Patient","patient","className","style","color","firstName","lastName","dob","gender","mrn","fhirId","Provider","provider","uuid","ProfileSelector","profileName","switchProfile","role","aria-label","type","name","id","autoComplete","defaultChecked","onClick","class","htmlFor","Header","title","defaultProps","Encounters","encounterList","currentEncounter","changeCurrentEncounter","refreshEncounters","console","log","length","map","encounter","index","selected","resource","eClassName","visible","encounterSelected","href","fullUrl","period","start","split","display","EncounterSummary","toggleShowNewReferral","showNewReferral","sendNotificationUU","toggle","disabled","CreateReferral","onCreate","useState","referredToGroupIds","setReferredToGroupIds","referredFromGroupId","setReferredFromGroupId","networkId","setNetworkId","serviceType","setServiceType","description","setDescription","attachDocument","setAttachDocument","onSubmit","e","preventDefault","alert","placeholder","readOnly","value","onChange","target","text","options","selectedIndex","rows","cols","checked","for","ReferralSummary","referral","show","setShow","fullJson","setFullJson","showSource","closeWindow","findUUID","identifier","find","entry","system","toUpperCase","scoope","ServiceRequest","resourceType","authoredOn","Practitioner","requester","orderDetail","supportingInfo","DocumentReference","Task","status","lastModified","Organization","owner","family","given","Consent","consent","scope","provision","end","documentReference","Binary","binary","contentType","download","data","Communication","communication","sent","sender","recipient","payload","contentString","contentReference","Modal","size","onHide","closeButton","Title","Body","JSON","stringify","undefined","Footer","Button","variant","Referrals","referralList","setShowNewReferral","Profile_Epic","defaultPatient","defaultProvider","groupId","defaultEncounter","defaultDocumentReference","defaultBaseUrl","defaultNotificationUrl","accessToken","Profile_Logica","App","defaultProfile","defaultProfileName","currentProfileName","setCurrentProfileName","setPatient","setProvider","setCurrentEncounter","access_token","setAccessToken","baseUrl","setBaseUrl","notificationUrl","setNotificationUrl","referrals","setReferrals","encounters","setEncounters","sampleDocumentReference","setSampleDocumentReference","a","newProfile","getAccessToken","token","refreshProfileSettings","getEncounters","createReferral","nowISO","Date","toISOString","url","intent","category","coding","code","priority","subject","reference","fetch","method","headers","body","res","json","newServiceRequestId","basedOn","newTaskId","partOf","newCommunicationId","getReferrals","fetchReferrals","encounterId","referralBaseUrl","Accept","Authorization","entryList","total","forEach","push","patientId","serviceRequestId","practitionerId","organizationId","entryId","referralId","fetchCommunications","communications","fetchDocumentReferences","documentReferences","fetchBinaries","binaryList","fetchConsents","consentList","sort","b","timeA","getTime","fetchEncounters","encounterBaseUrl","taskId","documentList","documentReferenceList","content","attachment","patientFhirId","currentBaseUrl","notification","privateKey","useEffect","setProfile","updateFhir","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b96c7c6.chunk.js","sourcesContent":["import { FaRegUser } from \"react-icons/fa\";\n\nconst Patient = ({patient}) => {\n  return (\n    <div className=\"p-2\">\n      <h4 style = {{ color: \"yellow\"}}>\n          <FaRegUser /> {patient.firstName} {patient.lastName}\n      </h4>\n      <h6>\n      <span className='badge bg-light text-dark'>DOB</span> : {patient.dob}\n      <span>    </span> \n      <span className='badge bg-light text-dark'>Gender</span> : {patient.gender}\n      </h6>\n      <h6><span className='badge bg-light text-dark'>MRN</span> : {patient.mrn}</h6>\n      <h6><span className='badge bg-light text-dark'>FHIR ID</span> : {patient.fhirId}</h6>\n    </div>\n  );\n};\n\nexport default Patient;\n","import { FaUserMd } from \"react-icons/fa\";\n\nconst Provider = ({ provider }) => {\n  return (\n    <div className=\"p-2\">\n      <h4 style={{ color: \"HotPink\" }}>\n        {provider.firstName} {provider.lastName} <FaUserMd></FaUserMd>\n      </h4>\n      <h6><span className='badge bg-light text-dark'>FHIR ID</span> : {provider.fhirId}</h6>\n      <h6><span className='badge bg-light text-dark'>UUID </span> : {provider.uuid}</h6>\n    </div>\n  );\n};\n\nexport default Provider;\n","const ProfileSelector = ({ profileName, switchProfile }) => {\n  return (\n    <div className=\"btn-group mb-2\" role=\"group\" aria-label=\"Basic mixed styles example\">\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnradio\"\n        id=\"profileEpic\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === \"Epic\"}\n        onClick={() => {\n          profileName = \"Epic\";\n          switchProfile(\"Epic\");\n        }}\n      />\n      <label class=\"btn btn-outline-danger\" htmlFor=\"profileEpic\">\n        Epic AppOrchard\n      </label>\n\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnradio\"\n        id=\"profileLogica\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === \"Logica\"}\n        onClick={() => {\n          profileName = \"Logica\";\n          switchProfile(\"Logica\");\n        }}\n      />\n      <label className=\"btn btn-outline-info\" htmlFor=\"profileLogica\">\n        Logica Health\n      </label>\n    </div>\n  );\n};\n\nexport default ProfileSelector;\n","import PropTypes from \"prop-types\";\nimport Patient from \"./Patient\";\nimport Provider from \"./Provider\";\nimport ProfileSelector from \"./ProfileSelector\";\nimport { FaFire } from \"react-icons/fa\";\n\nconst Header = ({ title, patient, provider, profileName, switchProfile }) => {\n  return (\n    <header>\n      <div id=\"navbarTop\">\n        <div className=\"row\">\n          <div className=\"col-lg-6 col-md-12 order-lg-2\">\n            <h2 className=\"pt-4\">\n              <FaFire style={{ color: \"#d60c05ee\" }} /> {title}\n            </h2>\n            <ProfileSelector profileName = {profileName} switchProfile = {switchProfile} />\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 order-lg-1\">\n            <Patient patient={patient} />\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 order-lg-3\">\n            <Provider provider={provider} />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: \"Mock EHR : : Social Care Referrals\",\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n// const headingStyle = {\n//   color: \"white\",\n//   backgroundColor: \"#2c405a\",\n// };\n\nexport default Header;\n","import {FcRefresh} from 'react-icons/fc'\nimport {FaCalendarCheck} from 'react-icons/fa'\n\nconst Encounters = ({ encounterList, currentEncounter = 'smart-2', changeCurrentEncounter, refreshEncounters }) => {\n  const refresh = () => {\n    console.log(\"Retrieving patient's encounters\");\n    refreshEncounters();\n  };\n\n  const setCurrentEncounter = (encounterSelected) => {\n    changeCurrentEncounter(encounterSelected)\n  }\n\n  return (\n    <div className=\"encounter col-md-3 col-lg-2 mx-0 px-0\">\n      <div\n        className=\"btn btn-default btn-lg btn-block table-hover mx-0\"\n        onClick={refresh}\n      >\n        All Encounters\n        <div className=\"badge bg-primary mx-2\">{encounterList.length}</div>\n        <FcRefresh />\n      </div>\n\n      <dl>\n        {encounterList.map((encounter, index) => {\n          const selected = (encounter.resource.id === currentEncounter)\n          const eClassName = selected\n            ? \"row table-hover m-0 px-2 selected\"\n            : \"row table-hover m-0 px-2\";\n          const visible = selected\n            ? \"visible\"\n            : \"invisible\";\n\n            return <div key={index} className={eClassName} onClick={() => setCurrentEncounter(encounter.resource.id)}>\n            <dt>\n              <a href={encounter.fullUrl}>{encounter.resource.id} <FaCalendarCheck className={visible} /></a>\n            </dt>\n            <dd>\n              { <div>{encounter.resource.period.start.split(\"T\")[0]}</div> }\n              { <div> {encounter.resource.class.display}</div> }\n            </dd>\n          </div>\n        }\n        )\n      }\n      </dl>\n    </div>\n  );\n};\n\nexport default Encounters;\n","const EncounterSummary = ({\n  toggleShowNewReferral,\n  showNewReferral,\n  currentEncounter,\n  sendNotificationUU,\n  profileName,\n}) => {\n  const toggle = () => {\n    toggleShowNewReferral();\n  };\n\n  const sendNotification = () => {\n    console.log(\"sending an encounter notification to Unite Us...\");\n    sendNotificationUU();\n  };\n\n  return (\n    <div className=\"encounterSummary\">\n      <div className=\"h4 pt-2 d-inline-block\">\n        Current Encounter: {currentEncounter}\n      </div>\n      <div\n        className=\"btn btn-primary d-inline float-end\"\n        onClick={sendNotification}\n      >\n        Send Notification to Unite Us\n      </div>\n      {!showNewReferral ? (\n        <button\n          className=\"btn btn-primary d-inline float-end\"\n          onClick={toggle}\n          disabled = {profileName === 'Epic'}\n        >\n          Create new referral\n        </button>\n      ) : (\n        <div className=\"btn btn-warning d-inline float-end\" onClick={toggle}>\n          Cancel New Referral\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EncounterSummary;\n","import { useState } from \"react\";\nimport { GrAttachment } from \"react-icons/gr\";\n\nexport const CreateReferral = ({ onCreate, toggleShowNewReferral }) => {\n  const [referredToGroupIds, setReferredToGroupIds] = useState(\"\");\n  const [referredFromGroupId, setReferredFromGroupId] = useState(\"\");\n  const [networkId, setNetworkId] = useState(\"\");\n  const [serviceType, setServiceType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [attachDocument, setAttachDocument] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!serviceType) {\n      alert(\"Please select a service for the referral!\");\n      return;\n    }\n\n    onCreate({\n      serviceType,\n      description,\n      referredToGroupIds,\n      referredFromGroupId,\n      networkId,\n      attachDocument,\n    });\n\n    setReferredToGroupIds(\"\");\n    setReferredFromGroupId(\"demo-hospital\");\n    setNetworkId(\"demo-network\");\n    setServiceType(\"\");\n    setDescription(\"\");\n    setAttachDocument(false);\n  };\n\n  const cancelReferralCreation = () => {\n    toggleShowNewReferral();\n  };\n  return (\n    <div className=\"newReferral\">\n      <form className=\"add-form\" onSubmit={onSubmit}>\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SENDING NETWORK</label>\n              <div>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Healthy Demo Network\"\n                  readOnly\n                  value={networkId}\n                  onChange={(e) => setNetworkId(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SENDER</label>\n              <div>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  readOnly\n                  placeholder=\"Local Hospital Center\"\n                  value={referredFromGroupId}\n                  onChange={(e) => setReferredFromGroupId(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SERVICE TYPE</label>\n              <div>\n                <select\n                  className=\"form-control\"\n                  value={serviceType.value}\n                  onChange={(e) =>\n                    setServiceType({\n                      value: e.target.value,\n                      text: e.target.options[e.target.selectedIndex].text,\n                    })\n                  }\n                >\n                  <option>Select a service ...</option>\n                  <option value=\"f020d616-5016-4fb7-9fad-91d8d99cd7a1\">\n                    Emergency Food\n                  </option>\n                  <option value=\"f6760383-7fc4-442b-b686-fc5055bfec06\">\n                    Emergency Housing\n                  </option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-6\">\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">RECEIVING NETWORK</label>\n              <div>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  readOnly\n                  placeholder=\"Healthy Demo Network\"\n                  value={networkId}\n                  onChange={(e) => setNetworkId(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">RECEIPIENT</label>\n              <div>\n                <select\n                  className=\"form-control\"\n                  value={referredToGroupIds.value}\n                  onChange={(e) =>\n                    setReferredToGroupIds({\n                      value: e.target.value,\n                      text: e.target.options[e.target.selectedIndex].text,\n                    })\n                  }\n                >\n                  <option>Select an organization ...</option>\n                  <option value=\"14742\">\n                    Housing California\n                  </option>\n                  <option value=\"14733\">\n                    River City Food Bank\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">DESCRIPTION</label>\n              <div>\n                <textarea\n                  className=\"form-control\"\n                  rows=\"3\"\n                  cols=\"50\"\n                  placeholder=\"Enter a description for the referral\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <div className=\"form-check form-switch mx-2 text-start\">\n                <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" checked={attachDocument} onChange={(e) => setAttachDocument(e.target.checked)}/>\n                <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\" >Attach document to the communication <GrAttachment></GrAttachment></label>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n        <div className=\"row d-inline\">\n          <input\n            value=\"Cancel\"\n            className=\"btn btn-warning col-md-6 mt-4\"\n            onClick={cancelReferralCreation}\n            readOnly\n          />\n\n          <input\n            value=\"Submit\"\n            className=\"btn btn-primary col-md-6 mt-4\"\n            onClick={onSubmit}\n            readOnly\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateReferral;\n","import { IoOpenOutline, IoOpenSharp, IoCloudDownloadSharp, IoCloudDownloadOutline } from \"react-icons/io5\";\nimport { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction ReferralSummary({ referral }) {\n  const [show, setShow] = useState(false);\n  const [fullJson, setFullJson] = useState();\n  var cboUUID;\n\n  const showSource = (fullJson) => {\n    setFullJson(fullJson);\n    setShow(true);\n  };\n\n  const closeWindow = () => setShow(false);\n\n  let findUUID = (resource) => {\n    const cboUUID = resource.identifier.find(\n      (entry) =>\n        entry.system.toUpperCase() ===\n        \"HTTPS://UNITEUS.COM/IO/STRUCTUREDEFINITION/CBO-UUID\"\n    );\n    return cboUUID;\n  };\n\n  return (\n    <>\n      <div className=\"row table-hover px-3\">\n        <table className=\"table table-sm align-middle text-start\">\n          <tbody>\n            <tr>\n              <th scoope=\"row\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-link\"\n                  onClick={() => showSource(referral.ServiceRequest.resource)}\n                >\n                  {referral.ServiceRequest.resource.resourceType}{\" \"}\n                  <IoOpenOutline />\n                </button>\n              </th>\n              <td>\n                Referral was authored on{\" \"}\n                <div className=\"btn btn-outline-primary disabled\">\n                  {referral.ServiceRequest.resource.authoredOn}\n                </div>{\" \"}\n                by{\" \"}\n                <div\n                  className=\"btn btn-outline-primary\"\n                  onClick={() => showSource(referral.Practitioner.resource)}\n                >\n                  {referral.ServiceRequest.resource.requester.display}{\" \"}\n                  <IoOpenOutline />\n                </div>\n                .{\" \"}\n                {referral.ServiceRequest.resource.orderDetail ? (\n                  <span>\n                    {\"Service type is \"}\n                    <div className=\"btn btn-outline-primary disabled\">\n                      {referral.ServiceRequest.resource.orderDetail[0].text}\n                    </div>\n                    .\n                  </span>\n                ) : (\n                  \"Service type has not been confirmed yet.\"\n                )}\n                {referral.ServiceRequest.resource.supportingInfo ? (\n                  <span>\n                    {\" \"}\n                    Attached is a supporting document of\n                    <div\n                      className=\"btn btn-outline-primary\"\n                      onClick={() => showSource(referral.DocumentReference[0])}\n                    >\n                      {referral.DocumentReference[0].type.text}{\" \"}\n                      <IoOpenOutline />\n                    </div>\n                  </span>\n                ) : null}\n              </td>\n            </tr>\n            <tr>\n              <th scoope=\"row\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-link\"\n                  onClick={() => showSource(referral.Task.resource)}\n                >\n                  {referral.Task.resource.resourceType}{\" \"}\n                  <IoOpenOutline />\n                </button>\n              </th>\n              <td>\n                <span>\n                  Referral status is{\" \"}\n                  <div className=\"btn btn-outline-primary disabled\">\n                    {referral.Task?.resource?.status}\n                  </div>\n                  , last modified on{\" \"}\n                  <div className=\"btn btn-outline-primary disabled\">\n                    {referral.Task?.resource?.lastModified}\n                  </div>\n                </span>{\" \"}\n                <span>\n                  Recipient is{\" \"}\n                  <div\n                    className=\"btn btn-outline-primary\"\n                    onClick={() => showSource(referral.Organization?.resource)}\n                  >\n                    {referral.Task?.resource?.owner?.display}{\" \"}\n                    <IoOpenOutline />\n                  </div>\n                </span>\n              </td>\n            </tr>\n            {referral.Organization ? (\n              <tr>\n                <th scoope=\"row\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-link\"\n                    onClick={() => showSource(referral.Organization.resource)}\n                  >\n                    {referral.Organization.resource.resourceType}{\" \"}\n                    <IoOpenOutline />\n                  </button>\n                </th>\n                <td>\n                  <span>\n                    Recipient is{\" \"}\n                    <div className=\"btn btn-outline-primary disabled\">\n                      {referral.Organization.resource.name}\n                    </div>\n                  </span>\n                  {findUUID(referral.Organization.resource) ? (\n                    <span>\n                      Their Unite Us UUID is{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {findUUID(referral.Organization.resource).value}\n                      </div>\n                    </span>\n                  ) : null}\n                </td>\n              </tr>\n            ) : null}\n            {referral.Patient ? (\n              <tr>\n                <th scoope=\"row\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-link\"\n                    onClick={() => showSource(referral.Patient.resource)}\n                  >\n                    {referral.Patient.resource.resourceType}{\" \"}\n                    <IoOpenOutline />\n                  </button>\n                </th>\n                <td>\n                  <div className=\"btn btn-outline-primary disabled\">\n                    {referral.Patient.resource.name[0].family}, {referral.Patient.resource.name[0].given[0]}\n                  </div>\n                </td>\n              </tr>\n            ) : null}\n            {referral.Practitioner ? (\n              <tr>\n                <th scoope=\"row\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-link\"\n                    onClick={() => showSource(referral.Practitioner.resource)}\n                  >\n                    {referral.Practitioner.resource.resourceType}{\" \"}\n                    <IoOpenOutline />\n                  </button>\n                </th>\n                <td>\n                  <div className=\"btn btn-outline-primary disabled\">\n                    {referral.Practitioner.resource.name[0].family}, {referral.Practitioner.resource.name[0].given[0]}\n                  </div>\n                </td>\n              </tr>\n            ) : null}\n\n            {referral.Consent?.map((consent, index) => {\n              return (\n                <tr key={index}>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() => showSource(consent.resource)}\n                    >\n                      {consent.resource.resourceType}{\" \"}\n                      <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td>\n                    <span>\n                      Consent status is{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {consent.resource.status}\n                      </div>\n                      . Scope is{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {consent.resource.scope?.text}\n                      </div>.\n                      {\" \"}Provision period is from \n                      <div className=\"btn btn-outline-primary disabled\">\n                        {consent.resource.provision?.period?.start}\n                      </div>\n                       to \n                       <div className=\"btn btn-outline-primary disabled\">\n                        {consent.resource.provision?.period?.end}\n                      </div>\n                    </span>\n                  </td>\n                </tr>\n              );\n            })}\n\n\n            {referral.DocumentReference?.map((documentReference, index) => {\n              return (\n                <tr key={index}>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() => showSource(documentReference)}\n                    >\n                      {documentReference.resourceType}{\" \"}\n                      <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td>\n                    <span>\n                      Document type is{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {documentReference.type.text}\n                      </div>\n                      . Document description is{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {documentReference.description}\n                      </div>\n                    </span>\n                  </td>\n                </tr>\n              );\n            })}\n\n\n            {referral.Binary?.map((binary, index) => {\n              return (\n                <tr key={index}>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() => showSource(binary)}\n                    >\n                      {binary.resourceType}{\" \"}\n                      <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td>\n                    <span>\n                      Content type is{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {binary.contentType}\n                      </div>.\n                    </span>\n                    {\" \"}\n                    <div className=\"btn btn-link\"><a download='Epic_CRN.pdf' href={`data:application/pdf;base64,${binary.data}`} title='Download pdf document'>Click to download PDF file <IoCloudDownloadSharp /></a></div>\n                  </td>\n                </tr>\n              );\n            })}\n\n            {referral.Communication?.map((communication, index) => {\n              return (\n                <tr key={index}>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() => showSource(communication.resource)}\n                    >\n                      {communication.resource.resourceType}{\" \"}\n                      <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td>\n                    <span>\n                      On{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {communication.resource?.sent}\n                      </div>\n                      , sent from{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {communication.resource?.sender.display}\n                      </div>\n                      to{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {communication.resource?.recipient[0].display}\n                      </div>\n                      .\n                    </span>\n                    {communication.resource.payload ? (\n                      <p>\n                        {\" \"}\n                        Note message:{\" \"}\n                        <div className=\"btn btn-outline-primary disabled\">\n                          {communication.resource.payload[0].contentString}\n                        </div>\n                      </p>\n                    ) : (\n                      <span> Note message is empty.</span>\n                    )}\n                    {communication.resource.payload &&\n                    communication.resource.payload[1]?.contentReference ? (\n                      <p>\n                        {\" \"}\n                        A{\" \"}\n                        <div\n                          className=\"btn btn-outline-primary\"\n                          onClick={() =>\n                            showSource(referral.DocumentReference[0])\n                          }\n                        >\n                          document{\" \"}<IoOpenOutline />\n                        </div>{\" \"}\n                        was attached to the communication.\n                      </p>\n                    ) : null}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n\n      <Modal size=\"lg\" show={show} onHide={closeWindow}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {fullJson?.resourceType} : {fullJson?.id}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <pre id=\"json\">{JSON.stringify(fullJson, undefined, 2)}</pre>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"warning\" onClick={closeWindow}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default ReferralSummary;\n","import EncounterSummary from \"./EncounterSummary\";\nimport CreateReferral from \"./CreateReferral\";\nimport { useState } from \"react\";\nimport ReferralSummary from \"./ReferralSummary\";\n\nfunction Referrals({ onCreate, referralList, currentEncounter, sendNotificationUU, profileName }) {\n  const [showNewReferral, setShowNewReferral] = useState(false);\n\n  const toggleShowNewReferral = () => {\n    setShowNewReferral((showNewReferral) => !showNewReferral);\n  };\n\n  const onCreateReferral = (referral) => {\n    onCreate(referral);\n    toggleShowNewReferral();\n  };\n  return (\n    <div className=\"col-md-9 col-lg-10 px-0\">\n      <div className=\"referrals\">\n        <EncounterSummary\n          toggleShowNewReferral={toggleShowNewReferral}\n          showNewReferral={showNewReferral}\n          currentEncounter={currentEncounter}\n          sendNotificationUU={sendNotificationUU}\n          profileName={profileName}\n        />\n        {showNewReferral ? (\n          <CreateReferral\n            onCreate={onCreateReferral}\n            toggleShowNewReferral={toggleShowNewReferral}\n          />\n        ) : null}\n        <div className=\"referralList\">\n          <div className=\"h5 py-3\">This encounter has {referralList.length > 1 ? referralList.length + ' referrals.' : referralList.length === 1 ? ' 1 referral.' : ' no referrals.'}</div>\n          {referralList.length > 0\n            ? referralList.map((referral, index) => (\n                <ReferralSummary key={index} referral = {referral}/>\n              ))\n            : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Referrals;\n","export const Profile_Epic = {\n  name: 'Epic',\n\n  defaultPatient: {\n    firstName: \"Beverly\",\n    lastName: \"Ccm\",\n    gender: \"Female\",\n    dob: \"01/01/1940\",\n    mrn: \"203722\",\n    fhirId: \"e4ikKcC2Rp3EsZQh8Ac6C5A3\",\n    uuid: \"b5318891-3dc8-426a-af50-531e106ad1a1\",\n  },\n\n  defaultProvider: {\n    firstName: \"Case\",\n    lastName: \"Manager\",\n    fhirId: \"eaToFIkaJ32mO4K002q3BLw3\",\n    uuid: \"94e5f7ee-1425-42bc-8833-3474b687b125\",\n    groupId: \"bf4aa373-81eb-4da5-9980-2d3e51c57b3c\",\n    networkId: \"145ca925-ba86-490d-b404-35f4fe5ada66\",\n  },\n\n  defaultEncounter: \"eFBT3k94CLm3fCPMNlKH2DQ3\", //\"enZf6GWN2rMGQWF1rqqDgNg3\",\n  defaultDocumentReference: \"e.-1q0eXQDEZ.9mNdXwVjYA3\",\n  defaultBaseUrl:\n    \"https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4\",\n  defaultNotificationUrl:\n    \"https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService\",\n  accessToken : \"e2a4575581b3f57203e182b0b1f3dcea479baecd31bef125cc57f6dd4b8905ac\"\n};\n\nexport const Profile_Logica = {\n  name: 'Logica',\n\n  defaultPatient: {\n    firstName: \"Beverly\",\n    lastName: \"Ccm\",\n    gender: \"Female\",\n    dob: \"01/01/1940\",\n    mrn: \"203722\",\n    fhirId: \"14730\",\n    uuid: \"b5318891-3dc8-426a-af50-531e106ad1a1\",\n  },\n\n  defaultProvider: {\n    firstName: \"Demo\",\n    lastName: \"Provider\",\n    fhirId: \"14734\",\n    uuid: \"94e5f7ee-1425-42bc-8833-3474b687b125\",\n    groupId: \"bf4aa373-81eb-4da5-9980-2d3e51c57b3c\",\n    networkId: \"145ca925-ba86-490d-b404-35f4fe5ada66\",\n  },\n\n  defaultEncounter: \"14732\",\n  defaultDocumentReference: \"14740\",\n\n  defaultBaseUrl: \"https://api.logicahealth.org/uufhircrn/open\",\n\n  defaultNotificationUrl:\n    \"https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService\",\n  accessToken: \"\"\n};\n\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Encounters from \"./components/Encounters\";\nimport Referrals from \"./components/Referrals\";\nimport { useState, useEffect } from \"react\";\nimport { Profile_Epic, Profile_Logica } from \"./components/Profiles\";\n\nfunction App() {\n  const defaultProfile = Profile_Epic;\n  const defaultProfileName = defaultProfile.name;\n  const [currentProfileName, setCurrentProfileName] =\n    useState(defaultProfileName);\n  //const [profile, setProfile] = useState(defaultProfile);\n  const [patient, setPatient] = useState(defaultProfile.defaultPatient);\n  const [provider, setProvider] = useState(defaultProfile.defaultProvider);\n  const [currentEncounter, setCurrentEncounter] = useState(\n    defaultProfile.defaultEncounter\n  );\n  const [accessToken, setAccessToken] = useState(defaultProfile.access_token);\n  const [baseUrl, setBaseUrl] = useState(defaultProfile.defaultBaseUrl);\n  const [notificationUrl, setNotificationUrl] = useState(\n    defaultProfile.defaultNotificationUrl\n  );\n  const [referrals, setReferrals] = useState([]);\n  const [encounters, setEncounters] = useState([]);\n\n  const [sampleDocumentReference, setSampleDocumentReference] = useState(\"\");\n\n  const switchProfile = async (profileName) => {\n    //if (profileName === currentProfileName) return\n\n    console.log(\"Switch to profile: \", profileName);\n    setCurrentProfileName(profileName);\n    const newProfile = profileName === \"Logica\" ? Profile_Logica : Profile_Epic;\n    setPatient(newProfile.defaultPatient);\n    setProvider(newProfile.defaultProvider);\n    setBaseUrl(newProfile.defaultBaseUrl);\n    setNotificationUrl(newProfile.defaultNotificationUrl);\n    if (newProfile.name === \"Epic\") {\n      let token = await getAccessToken();\n      setAccessToken(token);\n    } else setAccessToken(newProfile.accessToken);\n  };\n\n  const refreshProfileSettings = async () => {\n    const encounterList = await getEncounters(patient.fhirId, baseUrl);\n    if (encounterList?.length > 0) {\n      await changeCurrentEncounter(encounterList[0].resource.id, baseUrl);\n    }\n  };\n\n  // Create a referral\n  const createReferral = async (referral) => {\n    console.log(\"create referral: \", referral);\n    const nowISO = new Date().toISOString();\n\n    // Create ServiceRequest\n    let url = baseUrl + \"/ServiceRequest\";\n    let resource = {\n      resourceType: \"ServiceRequest\",\n      status: \"active\",\n      intent: \"plan\",\n      category: [\n        {\n          coding: [\n            {\n              system: \"http://snomed.info/sct\",\n              code: \"307835004\",\n              display: \"Referral by service\",\n            },\n          ],\n          text: \"Referral by service\",\n        },\n      ],\n      priority: \"routine\",\n      subject: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + \", \" + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      authoredOn: nowISO,\n      requester: [\n        {\n          reference: `Practitioner/${provider.fhirId}`,\n          display: provider.firstName + \" \" + provider.lastName,\n        },\n      ],\n      // orderDetail: {\n      //   text: referral.serviceType.text,\n      //   coding: [\n      //     {\n      //       system: \"Unite Us\",\n      //       code: referral.serviceType.value,\n      //       display: referral.serviceType.text,\n      //     },\n      //   ],\n      // },\n    };\n\n    if (referral.attachDocument && sampleDocumentReference.length > 0) {\n      resource.supportingInfo = [\n        {\n          reference: `DocumentReference/${sampleDocumentReference}`,\n        },\n      ];\n    }\n\n    let res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(resource),\n    });\n\n    let data = await res.json();\n    let newServiceRequestId = data.id;\n    console.log(\"server request id: \", newServiceRequestId);\n\n    // Create Task\n    url = baseUrl + \"/Task\";\n    resource = {\n      resourceType: \"Task\",\n      basedOn: [\n        {\n          reference: `ServiceRequest/${newServiceRequestId}`,\n        },\n      ],\n      status: \"requested\",\n      intent: \"plan\",\n      priority: \"routine\",\n      for: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + \", \" + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      authoredOn: nowISO,\n      lastModified: nowISO,\n      requester: [\n        {\n          reference: `Practitioner/${provider.fhirId}`,\n          display: provider.firstName + \" \" + provider.lastName,\n        },\n      ],\n      // description:\n      //   referral.description +\n      //   \"/n referred to : \" +\n      //   referral.referredToGroupIds.text +\n      //   \" [\" +\n      //   referral.referredToGroupIds.value +\n      //   \"]\",\n      owner: {\n        reference: `Organization/${referral.referredToGroupIds.value}`,\n        display: referral.referredToGroupIds.text,\n      },\n    };\n\n    res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(resource),\n    });\n\n    data = await res.json();\n    let newTaskId = data.id;\n    console.log(\"Task id: \", newTaskId);\n\n    // Create initial Communication\n    url = baseUrl + \"/Communication\";\n    resource = {\n      resourceType: \"Communication\",\n      basedOn: [\n        {\n          reference: `ServiceRequest/${newServiceRequestId}`,\n        },\n      ],\n      partOf: [\n        {\n          reference: `Task/${newTaskId}`,\n        },\n      ],\n      status: \"in-progress\",\n      subject: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + \", \" + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      sent: nowISO,\n      recipient: [\n        {\n          reference: `Organization/${referral.referredToGroupIds.value}`,\n          display: referral.referredToGroupIds.text,\n        },\n      ],\n      sender: {\n        reference: `Practitioner/${provider.fhirId}`,\n        display: provider.firstName + \" \" + provider.lastName,\n      },\n    };\n\n    if (referral.description.length > 0) {\n      resource.payload = [\n        {\n          contentString: referral.description,\n        },\n      ];\n    }\n\n    if (referral.attachDocument && sampleDocumentReference.length > 0) {\n      resource.payload = [\n        ...resource.payload,\n        {\n          contentReference: {\n            reference: `DocumentReference/${sampleDocumentReference}`,\n          },\n        },\n      ];\n    }\n\n    res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(resource),\n    });\n\n    data = await res.json();\n    let newCommunicationId = data.id;\n    console.log(\"Communication id: \", newCommunicationId);\n\n    await getReferrals();\n  };\n\n  const fetchReferrals = async (\n    encounterId = currentEncounter,\n    referralBaseUrl = baseUrl\n  ) => {\n    const url =\n      referralBaseUrl +\n      \"/Task?encounter=\" +\n      encounterId +\n      \"&_include=Task%3Apatient&_include=Task%3Aencounter&_include=Task%3Arequester&_include=Task%3A\" +\n      \"based-on\" + //(currentProfileName === \"Epic\" ? \"basedon\" : \"based-on\") + \"%3AServiceRequest\" +\n      \"&_include=Task%3Aowner%3AOrganization\";\n\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n      },\n    });\n    const data = await res.json();\n    let entryList = data.total === 0 ? [] : data.entry;\n    if (!entryList) return [];\n    console.log(\"Task bundle received: \", entryList);\n\n    // //_include works at Epic, no need to fetch ServiceRequest seperatedly\n    // const url2 = baseUrl + \"/ServiceRequest?encounter=\" + encounterId;\n    // const res2 = await fetch(url2, {\n    //   method: \"GET\",\n    //   headers: {\n    //     \"Content-type\": \"application/json\",\n    //     Accept: \"application/json\",\n    //     Authorization: accessToken.length > 0 ? \"bearer \" + accessToken : \"\",\n    //   },\n    // });\n    // const data2 = await res2.json();\n    // let entryList2 = data2.total === 0 ? [] : data2.entry;\n    // entryList = entryList.concat(entryList2);\n\n    //filter ServiceRequest and Task\n    // if (entryList.length > 0) {\n    //   entryList = entryList.filter((entry) => {\n    //     return (\n    //       entry.resource.resourceType === \"ServiceRequest\" ||\n    //       entry.resource.resourceType === \"Task\"\n    //     );\n    //   });\n    // }\n\n    // Take all the Task\n    let referralList = [];\n    entryList.forEach((entry, index) => {\n      if (entry.resource.resourceType === \"Task\") {\n        let referral = {\n          id: \"Task/\" + entry.resource.id,\n          Task: entry,\n        };\n        referralList.push(referral);\n      }\n    });\n\n    // Group the other resources with the Task\n    referralList.forEach((referral, index) => {\n      const resource = referral?.Task?.resource;\n      if (!resource) return;\n\n      const patientId = resource.for?.reference;\n      const serviceRequestId = resource.basedOn[0].reference;\n      const practitionerId = resource.requester?.reference;\n      const organizationId = resource.owner?.reference;\n\n      entryList.forEach((entry, index) => {\n        let entryId = entry.resource.id;\n        switch (entry.resource.resourceType) {\n          case \"ServiceRequest\": {\n            if (serviceRequestId === `ServiceRequest/${entryId}`)\n              referral.ServiceRequest = entry;\n            break;\n          }\n          case \"Patient\": {\n            if (patientId === `Patient/${entryId}`) referral.Patient = entry;\n            break;\n          }\n          case \"Organization\": {\n            if (organizationId === `Organization/${entryId}`)\n              referral.Organization = entry;\n            break;\n          }\n          case \"Practitioner\": {\n            if (practitionerId === `Practitioner/${entryId}`)\n              referral.Practitioner = entry;\n            break;\n          }\n          default:\n        }\n      });\n    });\n\n    // Fetch Communications for each Task\n    for (let referral of referralList) {\n      const referralId = referral?.Task?.resource?.id;\n      const communications = await fetchCommunications(referralId);\n      referral.Communication = communications.entry;\n    }\n\n    // Fetch DocumentReferences for each ServiceRequest\n    for (let referral of referralList) {\n      const documentReferences = await fetchDocumentReferences(referral);\n      if (documentReferences?.length > 0) {\n        referral.DocumentReference = documentReferences;\n        setSampleDocumentReference(referral.DocumentReference[0].id);\n        console.log(\"documentReference\", referral.DocumentReference);\n        console.log(\"sampleDocumentReference\", sampleDocumentReference);\n      }\n    }\n\n    // Fetch Binaries for all DocumentReferences\n    for (let referral of referralList) {\n      if (referral.DocumentReference?.length > 0) {\n        const binaryList = await fetchBinaries(referral.DocumentReference);\n        if (binaryList?.length > 0) {\n          referral.Binary = binaryList;\n        }\n      }\n    }\n\n    //referralList = referralList.filter((entry) => {\n    //  return entry.Task;\n    //});\n\n    // Fetch Consents\n    //if (currentProfileName === \"Epic\") {\n    const consentList = await fetchConsents();\n    if (consentList?.length > 0) {\n      referralList.forEach((entry, index) => {\n        entry.Consent = consentList;\n      });\n    }\n    //}\n\n    console.log(\"referral list\", referralList);\n    referralList.sort((a, b) => {\n      const timeA = new Date(a.ServiceRequest.resource.authoredOn).getTime();\n      const timeB = new Date(b.ServiceRequest.resource.authoredOn).getTime();\n      return timeB - timeA;\n    });\n    return referralList;\n  };\n\n  const fetchEncounters = async (\n    patientId = patient.fhirId,\n    encounterBaseUrl = baseUrl\n  ) => {\n    const url = encounterBaseUrl + \"/Encounter?patient=\" + patientId;\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization:\n          accessToken?.length > 0 && currentProfileName === \"Epic\"\n            ? \"bearer \" + accessToken\n            : \"\",\n      },\n    });\n    const data = await res.json();\n\n    const encounterList = data.total > 0 ? data.entry : [];\n\n    encounterList.sort((a, b) => {\n      const timeA = new Date(a.resource.period.start).getTime();\n      const timeB = new Date(b.resource.period.start).getTime();\n      return timeB - timeA;\n    });\n    console.log(\"encounter\", encounterList);\n    return encounterList;\n  };\n\n  // Fetch Communications for a Task\n  const fetchCommunications = async (taskId) => {\n    const url = baseUrl + \"/Communication?part-of=\" + taskId;\n\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n      },\n    });\n    const data = await res.json();\n    console.log(\"communications: \", data);\n    return data;\n  };\n\n  // Fetch DocumentReferences for a ServiceRequest\n  const fetchDocumentReferences = async (referral) => {\n    const documentList = [];\n    const supportingInfo = referral?.ServiceRequest?.resource?.supportingInfo;\n\n    if (!supportingInfo) return documentList;\n\n    for (let entry of supportingInfo) {\n      const url = baseUrl + \"/\" + entry.reference;\n      const res = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n        },\n      });\n      const data = await res.json();\n      console.log(\"documentReference: \", data);\n      if (data?.resourceType === \"DocumentReference\") documentList.push(data);\n    }\n\n    return documentList;\n  };\n\n  // Fetch DocumentReferences for a ServiceRequest\n  const fetchBinaries = async (documentReferenceList) => {\n    const binaryList = [];\n\n    if (!documentReferenceList) return binaryList;\n\n    for (let entry of documentReferenceList) {\n      const url = baseUrl + \"/\" + entry.content[0]?.attachment?.url;\n      const res = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Accept: \"application/fhir+json\",\n          Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n        },\n      });\n      const data = await res.json();\n      if (data?.resourceType === \"Binary\") {\n        const binary = {\n          resourceType: \"Binary\",\n          id: data.id,\n          contentType: data.contentType,\n        };\n        binaryList.push(data);\n      }\n    }\n\n    return binaryList;\n  };\n\n  // Fetch Consent for a Patient\n  const fetchConsents = async (\n    patientFhirId = patient.fhirId,\n    category = currentProfileName === \"Epic\"\n      ? \"http://loinc.org|64292-6\"\n      : \"64292-6\",\n    status = \"active\"\n  ) => {\n    const url = `${baseUrl}/Consent?patient=${patientFhirId}&category=${category}&status=${status}`;\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n      },\n    });\n    const data = await res.json();\n    console.log(\"consent: \", data);\n    return data.entry;\n  };\n\n  const changeCurrentEncounter = async (encounterSelected, currentBaseUrl) => {\n    //if (encounterSelected === currentEncounter) return;\n\n    setCurrentEncounter(encounterSelected);\n    await getReferrals(encounterSelected, currentBaseUrl);\n    return;\n  };\n\n  const getReferrals = async (encounterSelected, referralBaseUrl) => {\n    const data = await fetchReferrals(encounterSelected, referralBaseUrl);\n    setReferrals(data);\n  };\n\n  const getEncounters = async (patientId, encounterBaseUrl) => {\n    const data = await fetchEncounters(patientId, encounterBaseUrl);\n    setEncounters(data);\n    return data;\n  };\n\n  const sendNotificationUU = async () => {\n    const url = notificationUrl;\n    const notification = {\n      resourceType: \"Bundle\",\n      type: \"Event\",\n      entry: [\n        {\n          fullUrl: baseUrl + \"/Encounter/\" + currentEncounter,\n        },\n      ],\n    };\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"x-api-key\": \"sfsdfddfdsfsdfs32342343\", //\"wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03\",\n      },\n      body: JSON.stringify(notification),\n    });\n    const data = await res.json();\n    console.log(\"notification response: \", data);\n    return data;\n  };\n\n  const getAccessToken = async () => {\n    const url =\n      \"https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/authentication/token\";\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        \"x-api-key\": \"sfsdfddfdsfsdfs32342343\", //\"wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      body: JSON.stringify({\n        privateKey: null,\n      }),\n    });\n    const data = await res.json();\n    const token = data.body.access_token;\n    console.log(\"access token \", token);\n    return token;\n  };\n\n  useEffect(() => {\n    const setProfile = async (profileName) => {\n      await switchProfile(profileName);\n    };\n\n    setProfile(defaultProfileName);\n  }, []);\n\n  useEffect(() => {\n    const updateFhir = async () => {\n      await refreshProfileSettings();\n    };\n\n    updateFhir();\n  }, [accessToken]);\n\n  return (\n    <div className=\"App\">\n      <Header\n        patient={patient}\n        provider={provider}\n        profileName={currentProfileName}\n        switchProfile={switchProfile}\n      />\n      <div className=\"row mt-1 mx-0\">\n        <Encounters\n          encounterList={encounters}\n          currentEncounter={currentEncounter}\n          changeCurrentEncounter={changeCurrentEncounter}\n          refreshEncounters={getEncounters}\n        />\n        <Referrals\n          onCreate={createReferral}\n          referralList={referrals}\n          currentEncounter={currentEncounter}\n          sendNotificationUU={sendNotificationUU}\n          profileName={currentProfileName}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}