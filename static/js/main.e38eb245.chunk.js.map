{"version":3,"sources":["components/Patient.js","components/Provider.js","components/ProfileSelector.js","components/StageSelector.js","components/Header.js","components/Encounters.js","components/EncounterSummary.js","components/CreateReferral.js","components/ReferralSummary.js","components/StatusSelector.js","components/AddNote.js","components/Referrals.js","components/Profiles.js","App.js","reportWebVitals.js","index.js"],"names":["Patient","patient","className","style","color","firstName","lastName","dob","gender","mrn","fhirId","Provider","provider","uuid","ProfileSelector","profileName","switchProfile","role","aria-label","id","type","name","autoComplete","defaultChecked","onClick","htmlFor","placeholder","size","borderColor","fontWeight","onBlur","e","target","value","StageSelector","stageName","switchStage","Header","title","defaultProps","Encounters","encounterList","currentEncounter","changeCurrentEncounter","refreshEncounters","console","log","length","map","encounter","index","selected","resource","eClassName","visible","encounterSelected","href","fullUrl","period","start","split","class","display","EncounterSummary","toggleShowNewReferral","showNewReferral","sendNotificationUU","toggle","disabled","CreateReferral","onCreate","useState","referredToGroupIds","setReferredToGroupIds","referredFromGroupId","setReferredFromGroupId","networkId","setNetworkId","serviceType","setServiceType","description","setDescription","attachDocument","setAttachDocument","onSubmit","preventDefault","readOnly","onChange","text","options","selectedIndex","rows","cols","checked","for","ReferralSummary","referral","showFhirSource","editReferralStatus","showAddNoteWindow","baseUrl","sendUUNotification","currentStage","expandReferralId","setExpandReferralId","showSource","fullJson","findUUID","identifier","find","entry","system","toUpperCase","expandStatus","referralId","removeReferral","a","trackingItem","full_url","url","fetch","method","headers","Accept","token","body","JSON","stringify","res","json","data","item","response","removeCommunication","communication","received","comNum","sendCommunicationNotification","status","rowColor","Task","data-bs-toggle","data-bs-target","ServiceRequest","aria-expanded","aria-controls","authoredOn","data-bs-placement","currentStatus","orderDetail","owner","Communication","appUrl","core_referral_id","rel","pop","colSpan","scoope","resourceType","Practitioner","requester","supportingInfo","DocumentReference","lastModified","Organization","family","given","Consent","consent","scope","provision","end","documentReference","Binary","binary","contentType","download","sent","sender","recipient","payload","contentString","contentReference","reference","includes","StatusSelector","showReferralStatus","currentReferralStatus","closeReferralStatusEdit","newReferralStatus","setNewReferralStatus","rejectReason","setRejectReason","rejectReasonNote","setRejectReasonNote","enforceBusinessRule","setEnforceBusinessRule","closeStatusEdit","changeStatus","newStatus","statusEnabled","stageColor","stage","colorDone","newStage","Modal","show","onHide","closeButton","Title","Body","rowSpan","display_name","option","Footer","Button","variant","reason","note","AddNote","showAddNote","closeAddNote","currentStageBaseUrl","noteText","setNoteText","callResponse","setCallResponse","refreshCount","setRefreshCount","showMessageToast","setShowMessageToast","communicationList","setCommunicationList","waitMessage","setWaitMessage","useEffect","updateList","queryParams","total","sendNote","sentAt","Math","floor","Date","now","noteColor","noteAlign","responseTo","recipients","responseToStr","forEach","closeAddNoteWindow","backgroundColor","opacity","aria-live","aria-atomic","calssName","Referrals","referralList","updateReferralStatus","setShowNewReferral","setShowSource","setShowReferralStatus","setFullJson","setCurrentReferralStatus","editReferralId","setEditReferralId","setShowAddNote","currentReferral","setCurrentReferral","closeWindow","undefined","Profile_Epic","defaultPatient","defaultProvider","groupId","defaultEncounter","defaultDocumentReference","defaultBaseUrl","defaultNotificationUrl","accessToken","Profile_Epic_2","Profile_Logica","Stage_Staging","email","user_id","group_id","network_id","access_token_legacy","access_token_core","freeze","Stage_Training","Stage_POC","appUrl2","App","defaultProfile","defaultProfileName","currentProfileName","setCurrentProfileName","setPatient","setProvider","setCurrentEncounter","access_token","setAccessToken","setBaseUrl","referrals","setReferrals","encounters","setEncounters","sampleDocumentReference","setSampleDocumentReference","defaultToastMessage","toastMessage","setToastMessage","defaultStage","setCurrentStage","setCurrentStageBaseUrl","progress","setProgress","retrievePatientInfo","patientFhirId","newProfile","birthDate","getAccessToken","refreshProfileSettings","getEncounters","createReferral","nowISO","toISOString","intent","category","coding","code","priority","subject","newServiceRequestId","basedOn","newTaskId","partOf","newCommunicationId","getReferrals","fetchReferrals","encounterId","referralBaseUrl","Authorization","substring","entryList","push","patientId","serviceRequestId","practitionerId","organizationId","entryId","fetchCommunications","communications","checkCommunication","fetchDocumentReferences","documentReferences","fetchBinaries","binaryList","lookupUUReferralId","fetchConsents","consentList","sort","b","timeA","getTime","fetchEncounters","encounterBaseUrl","taskId","documentList","documentReferenceList","content","attachment","fhirUrl","currentBaseUrl","notification","statusCode","message","privateKey","taskFhirId","resourceId","task","eTag","epicCode","mapToEpicCode","statusReason","etag","uuCode","setProfile","updateFhir","data-bs-dismiss","width","aria-valuenow","aria-valuemin","aria-valuemax","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e38eb245.chunk.js","sourcesContent":["import { FaRegUser } from 'react-icons/fa';\n\nconst Patient = ({ patient }) => {\n  return (\n    <div className=\"p-2\">\n      <h4 style={{ color: 'yellow' }}>\n        <FaRegUser />\n        {patient.firstName} {patient.lastName}\n      </h4>\n      <h6>\n        <span className=\"badge bg-light text-dark\">DOB</span> : {patient.dob}\n        <span> </span>\n        <span className=\"badge bg-light text-dark\">Gender</span> :{' '}\n        {patient.gender}\n      </h6>\n      <h6>\n        <span className=\"badge bg-light text-dark\">MRN</span> : {patient.mrn}\n      </h6>\n      <h6>\n        <span className=\"badge bg-light text-dark\">FHIR ID</span> :{' '}\n        {patient.fhirId}\n      </h6>\n    </div>\n  );\n};\n\nexport default Patient;\n","import { FaUserMd } from 'react-icons/fa';\n\nconst Provider = ({ provider }) => {\n  return (\n    <div className=\"p-2\">\n      <h4 style={{ color: 'HotPink' }}>\n        {provider.firstName} {provider.lastName} <FaUserMd></FaUserMd>\n      </h4>\n      <h6>\n        <span className=\"badge bg-light text-dark\">FHIR ID</span> :{' '}\n        {provider.fhirId}\n      </h6>\n      <h6>\n        <span className=\"badge bg-light text-dark\">UUID </span> :{' '}\n        {provider.uuid}\n      </h6>\n    </div>\n  );\n};\n\nexport default Provider;\n","const ProfileSelector = ({ profileName, switchProfile }) => {\n  return (\n    <div className=\"mx-1\">\n      <lable className=\"form-label px-2\">FHIR SERVER :</lable>\n      <div\n        className=\"btn-group mb-2\"\n        role=\"group\"\n        aria-label=\"Profile selector\"\n        id=\"profileGroup\"\n      >\n        <input\n          type=\"radio\"\n          className=\"btn-check\"\n          name=\"btnProfile\"\n          id=\"profileEpic\"\n          autoComplete=\"off\"\n          defaultChecked={profileName === 'Epic'}\n          onClick={() => {\n            profileName = 'Epic';\n            switchProfile('Epic');\n          }}\n        />\n        <label className=\"btn btn-outline-danger\" htmlFor=\"profileEpic\">\n          Calvin @Epic\n        </label>\n        <input\n          type=\"radio\"\n          className=\"btn-check\"\n          name=\"btnProfile\"\n          id=\"profileEpic2\"\n          autoComplete=\"off\"\n          defaultChecked={profileName === 'Epic2'}\n          onClick={() => {\n            profileName = 'Epic2';\n            switchProfile('Epic2');\n          }}\n        />\n        <label className=\"btn btn-outline-danger\" htmlFor=\"profileEpic2\">\n          Beverly @Epic\n        </label>\n        <input\n          type=\"radio\"\n          className=\"btn-check\"\n          name=\"btnProfile\"\n          id=\"profileLogica\"\n          autoComplete=\"off\"\n          defaultChecked={profileName === 'Logica'}\n          onClick={() => {\n            profileName = 'Logica';\n            switchProfile('Logica');\n          }}\n        />\n        <label className=\"btn btn-outline-info\" htmlFor=\"profileLogica\">\n          Beverly @Logica\n        </label>\n        <input\n          type=\"radio\"\n          className=\"btn-check\"\n          name=\"btnProfile\"\n          id=\"profileLogica2\"\n          autoComplete=\"off\"\n          defaultChecked={profileName === 'Logica2'}\n          onClick={() => {\n            profileName = 'Logica2';\n            switchProfile('Logica2');\n          }}\n        />\n\n        {profileName === 'Logica2' ? (\n          <input\n            type=\"text\"\n            className=\"input-group-text text-primary\"\n            placeholder=\"Patient FHIR ID\"\n            size=\"14\"\n            style={{ borderColor: '#5bc0de', fontWeight: 'bold' }}\n            onBlur={(e) => {\n              profileName = 'Logica2';\n              switchProfile('Logica2', e.target.value);\n            }}\n          ></input>\n        ) : (\n          <label className=\"btn btn-outline-info\" htmlFor=\"profileLogica2\">\n            Enter ID\n          </label>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileSelector;\n","const StageSelector = ({ stageName, switchStage }) => {\n  return (\n    <div className=\"mx-1\">\n      <lable className=\"form-label px-2\">UU SERVER :</lable>\n      <div\n        className=\"btn-group mb-2\"\n        role=\"group\"\n        aria-label=\"Stage selector\"\n        id=\"stageGroup\"\n      >\n        <input\n          type=\"radio\"\n          className=\"btn-check\"\n          name=\"btnStage\"\n          id=\"stageStaging\"\n          autoComplete=\"off\"\n          defaultChecked={stageName === 'staging'}\n          onClick={() => {\n            stageName = 'staging';\n            switchStage('staging');\n          }}\n        />\n        <label className=\"btn btn-outline-warning\" htmlFor=\"stageStaging\">\n          Staging\n        </label>\n        <input\n          type=\"radio\"\n          className=\"btn-check\"\n          name=\"btnStage\"\n          id=\"stageTraining\"\n          autoComplete=\"off\"\n          defaultChecked={stageName === 'training'}\n          onClick={() => {\n            stageName = 'training';\n            switchStage('training');\n          }}\n        />\n        <label className=\"btn btn-outline-success\" htmlFor=\"stageTraining\">\n          Training\n        </label>\n        <input\n          type=\"radio\"\n          className=\"btn-check\"\n          name=\"btnStage\"\n          id=\"stagePOC\"\n          autoComplete=\"off\"\n          defaultChecked={stageName === 'poc'}\n          onClick={() => {\n            stageName = 'poc';\n            switchStage('poc');\n          }}\n        />\n        <label className=\"btn btn-outline-info\" htmlFor=\"stagePOC\">\n          POC\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default StageSelector;\n","import PropTypes from 'prop-types';\nimport Patient from './Patient';\nimport Provider from './Provider';\nimport ProfileSelector from './ProfileSelector';\nimport StageSelector from './StageSelector';\nimport { FaFire } from 'react-icons/fa';\n\nconst Header = ({\n  title,\n  patient,\n  provider,\n  profileName,\n  switchProfile,\n  stageName,\n  switchStage,\n}) => {\n  return (\n    <header>\n      <div id=\"navbarTop\">\n        <div className=\"row\">\n          <div className=\"col-lg-6 col-md-12 order-lg-2\">\n            <h2 className=\"pt-4\">\n              <FaFire style={{ color: '#d60c05ee' }} /> {title}\n            </h2>\n            <div className=\"row\">\n              <div className=\"col-lg-auto\">\n                <ProfileSelector\n                  profileName={profileName}\n                  switchProfile={switchProfile}\n                />\n              </div>\n              <div className=\"col-lg-auto\">\n                <StageSelector\n                  stageName={stageName}\n                  switchStage={switchStage}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 order-lg-1\">\n            <Patient patient={patient} />\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 order-lg-3\">\n            <Provider provider={provider} />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: 'Mock EHR : : Social Care Referrals',\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n// const headingStyle = {\n//   color: \"white\",\n//   backgroundColor: \"#2c405a\",\n// };\n\nexport default Header;\n","import { FcRefresh } from 'react-icons/fc';\nimport { FaCalendarCheck } from 'react-icons/fa';\n\nconst Encounters = ({\n  encounterList,\n  currentEncounter = 'smart-2',\n  changeCurrentEncounter,\n  refreshEncounters,\n}) => {\n  const refresh = () => {\n    console.log(\"Retrieving patient's encounters\");\n    refreshEncounters();\n  };\n\n  const setCurrentEncounter = (encounterSelected) => {\n    changeCurrentEncounter(encounterSelected);\n  };\n\n  return (\n    <div className=\"encounter col-md-3 col-lg-2 mx-0 px-0\">\n      <div\n        className=\"btn btn-default btn-lg btn-block table-hover mx-0\"\n        onClick={refresh}\n      >\n        All Encounters\n        <div className=\"badge bg-primary mx-2\">{encounterList.length}</div>\n        <FcRefresh />\n      </div>\n\n      <dl>\n        {encounterList.map((encounter, index) => {\n          const selected = encounter.resource.id === currentEncounter;\n          const eClassName = selected\n            ? 'row list-hover m-0 px-2 text-break selected'\n            : 'row list-hover m-0 px-2 text-break';\n          const visible = selected ? 'visible' : 'invisible';\n\n          return (\n            <div\n              key={index}\n              className={eClassName}\n              onClick={() => setCurrentEncounter(encounter.resource.id)}\n            >\n              <dt>\n                <a href={encounter.fullUrl}>\n                  {encounter.resource.id}{' '}\n                  <FaCalendarCheck className={visible} />\n                </a>\n              </dt>\n              <dd>\n                {<div>{encounter.resource.period.start.split('T')[0]}</div>}\n                {<div> {encounter.resource.class.display}</div>}\n              </dd>\n            </div>\n          );\n        })}\n      </dl>\n    </div>\n  );\n};\n\nexport default Encounters;\n","const EncounterSummary = ({\n  toggleShowNewReferral,\n  showNewReferral,\n  currentEncounter,\n  sendNotificationUU,\n  profileName,\n}) => {\n  const toggle = () => {\n    toggleShowNewReferral();\n  };\n\n  const sendNotification = () => {\n    console.log('sending an encounter notification to Unite Us...');\n    sendNotificationUU();\n  };\n\n  return (\n    <div className=\"encounterSummary\">\n      <div className=\"row pt-2 row-cols-1 row-cols-lg-3\">\n        <div className=\"col mx-auto text-break\">\n          <h4>Current Encounter: {currentEncounter}</h4>\n        </div>\n        <div className=\"col\">\n          {!showNewReferral ? (\n            <button\n              className=\"btn btn-primary btn-block mx-1\"\n              onClick={toggle}\n              disabled={profileName !== 'Logica' && profileName !== 'Logica2'}\n            >\n              Create New Referral\n            </button>\n          ) : (\n            <button\n              className=\"btn btn-warning btn-block col mx-1\"\n              onClick={toggle}\n            >\n              Cancel New Referral\n            </button>\n          )}\n        </div>\n        <div className=\"col\">\n          <button\n            className=\"btn btn-primary btn-block col mx-1\"\n            onClick={sendNotification}\n          >\n            Send Encounter Notification\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EncounterSummary;\n","import { useState } from 'react';\nimport { GrAttachment } from 'react-icons/gr';\n\nexport const CreateReferral = ({ onCreate, toggleShowNewReferral }) => {\n  const [referredToGroupIds, setReferredToGroupIds] = useState('');\n  const [referredFromGroupId, setReferredFromGroupId] = useState('');\n  const [networkId, setNetworkId] = useState('');\n  const [serviceType, setServiceType] = useState('');\n  const [description, setDescription] = useState('');\n  const [attachDocument, setAttachDocument] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    /*     if (!serviceType) {\n      alert('Please select a service for the referral!');\n      return;\n    } */\n\n    onCreate({\n      serviceType,\n      description,\n      referredToGroupIds,\n      referredFromGroupId,\n      networkId,\n      attachDocument,\n    });\n\n    setReferredToGroupIds('');\n    setReferredFromGroupId('demo-hospital');\n    setNetworkId('demo-network');\n    setServiceType('');\n    setDescription('');\n    setAttachDocument(false);\n  };\n\n  const cancelReferralCreation = () => {\n    toggleShowNewReferral();\n  };\n  return (\n    <div className=\"newReferral\">\n      <form className=\"add-form\" onSubmit={onSubmit}>\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SENDING NETWORK</label>\n              <div>\n                <input\n                  className=\"form-select\"\n                  type=\"text\"\n                  placeholder=\"Healthy Demo Network\"\n                  readOnly\n                  disabled\n                  value={networkId}\n                  onChange={(e) => setNetworkId(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">RECEIVING NETWORK</label>\n              <div>\n                <input\n                  className=\"form-select\"\n                  type=\"text\"\n                  readOnly\n                  disabled\n                  placeholder=\"Healthy Demo Network\"\n                  value={networkId}\n                  onChange={(e) => setNetworkId(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SENDER</label>\n              <div>\n                <input\n                  className=\"form-select\"\n                  type=\"text\"\n                  readOnly\n                  disabled\n                  placeholder=\"Local Hospital Center\"\n                  value={referredFromGroupId}\n                  onChange={(e) => setReferredFromGroupId(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-lg-6\">\n            {/* <div className=\"form-group\">\n              <label className=\"col-form-label\">SERVICE TYPE</label>\n              <div>\n                <select\n                  className=\"form-select\"\n                  value={serviceType.value}\n                  onChange={(e) =>\n                    setServiceType({\n                      value: e.target.value,\n                      text: e.target.options[e.target.selectedIndex].text,\n                    })\n                  }\n                >\n                  <option>Select a service ...</option>\n                  <option value=\"f020d616-5016-4fb7-9fad-91d8d99cd7a1\">\n                    Emergency Food\n                  </option>\n                  <option value=\"f6760383-7fc4-442b-b686-fc5055bfec06\">\n                    Emergency Housing\n                  </option>\n                </select>\n              </div>\n            </div>\n */}\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">RECEIPIENT</label>\n              <div>\n                <select\n                  className=\"form-select\"\n                  value={referredToGroupIds.value}\n                  onChange={(e) =>\n                    setReferredToGroupIds({\n                      value: e.target.value,\n                      text: e.target.options[e.target.selectedIndex].text,\n                    })\n                  }\n                >\n                  <option>Select an organization ...</option>\n\n                  {/*                   <option value=\"15179\">\n                    NC Housing & Transportation Services\n                  </option> */}\n                  <option value=\"15195\">\n                    Asian Resource - SacramentoWorks\n                  </option>\n                  <option value=\"15191\">\n                    BusRides Sustainable Transportation Act - BusRides Transport\n                  </option>\n                  <option value=\"15199\">\n                    Cumberland Legal Assistance - Youth Services\n                  </option>\n                  <option value=\"14742\">\n                    Housing California - Housing Assistance\n                  </option>\n                  <option value=\"15207\">\n                    James Bentley Treatment Program - Mental Health Skill\n                    Building\n                  </option>\n                  <option value=\"15211\">Kroger - Food Benefits Program</option>\n                  <option value=\"15215\">Legal Aid - Housing Law</option>\n                  <option value=\"15219\">\n                    Planned Parenthood Mohawk Hudson - Saratoga Springs Center -\n                    Youth Health Promoters\n                  </option>\n                  <option value=\"14733\">\n                    River City Food Bank - Food Pantry\n                  </option>\n                  <option value=\"15183\">\n                    Santa Fe Medical Clinic - Medical Services\n                  </option>\n                  <option value=\"15184\">\n                    Santa Fe Medical Clinic - Dental Services\n                  </option>\n                  <option value=\"15200\">\n                    St. Mary's Shelter - Men's Emergency Shelter\n                  </option>\n                  <option value=\"15488\">\n                    [STAGING] American Red Cross (Carolina Piedmont Region)\n                    Program\n                  </option>\n                  <option value=\"15482\">[STAGING] Sushi - Spicy Tuna</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">INITIAL COMMUNICATION</label>\n              <div>\n                <textarea\n                  className=\"form-control\"\n                  rows=\"3\"\n                  cols=\"50\"\n                  placeholder=\"Enter a description for the referral\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <div className=\"form-check form-switch mx-2 text-start\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  id=\"flexSwitchCheckDefault\"\n                  checked={attachDocument}\n                  onChange={(e) => setAttachDocument(e.target.checked)}\n                />\n                <label\n                  className=\"form-check-label\"\n                  for=\"flexSwitchCheckDefault\"\n                >\n                  Attach document to the communication{' '}\n                  <GrAttachment></GrAttachment>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row d-inline\">\n          <input\n            value=\"Cancel\"\n            className=\"btn btn-warning col-md-6 mt-4\"\n            onClick={cancelReferralCreation}\n            readOnly\n          />\n\n          <input\n            value=\"Submit\"\n            className=\"btn btn-primary col-md-6 mt-4\"\n            onClick={onSubmit}\n            readOnly\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateReferral;\n","import { IoOpenOutline, IoCloudDownloadSharp } from 'react-icons/io5';\nimport { useState } from 'react';\n// import { MdExpandLess, MdExpandMore } from \"react-icons/md\";\nimport { FaEdit } from 'react-icons/fa';\nimport { BiMessageEdit } from 'react-icons/bi';\n\nfunction ReferralSummary({\n  referral,\n  showFhirSource,\n  editReferralStatus,\n  showAddNoteWindow,\n  baseUrl,\n  sendUUNotification,\n  currentStage,\n}) {\n  const [expandReferralId, setExpandReferralId] = useState('');\n\n  const showSource = (fullJson) => {\n    showFhirSource(fullJson, true);\n  };\n\n  const editStatus = (referralId, currentStatus) => {\n    editReferralStatus(referralId, currentStatus);\n  };\n\n  let findUUID = (resource) => {\n    const cboUUID = resource.identifier.find(\n      (entry) =>\n        entry.system.toUpperCase() ===\n        'HTTPS://UNITEUS.COM/IO/STRUCTUREDEFINITION/CBO-UUID'\n    );\n    return cboUUID;\n  };\n\n  const toggleExpand = (referralId) => {\n    if (expandReferralId === referralId) setExpandReferralId('');\n    else setExpandReferralId(referralId);\n  };\n\n  const expandStatus = (referralId) => {\n    return expandReferralId === referralId;\n  };\n\n  const rowColor = (status) => {\n    switch (status) {\n      case 'accepted':\n        return 'primary';\n      case 'in-progress':\n        return 'info';\n      case 'rejected':\n        return 'danger';\n      case 'failed':\n        return 'danger';\n      case 'completed':\n        return 'success';\n      case 'cancelled':\n        return 'danger';\n      default:\n        return 'light';\n    }\n  };\n\n  const removeReferral = async () => {\n    const fullUrl = referral.trackingItem.full_url;\n    console.log('remove referral: ', fullUrl);\n    const url = `${currentStage.baseUrl}/mockapi/resource_tracking/delete`;\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': currentStage.token,\n      },\n      body: JSON.stringify({\n        full_url: fullUrl,\n      }),\n    });\n    const data = await res.json();\n    const item = data.response;\n    referral.trackingItem = null;\n    setExpandReferralId('');\n    console.log('remove item: ', item);\n    return item;\n  };\n\n  const removeCommunication = async (communication) => {\n    const fullUrl = `${baseUrl}/Communication/${communication.resource.id}`;\n    console.log('remove communication: ', fullUrl);\n    const url = `${currentStage.baseUrl}/mockapi/communication/delete`;\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': currentStage.token,\n      },\n      body: JSON.stringify({\n        fullUrl: fullUrl,\n      }),\n    });\n    const data = await res.json();\n    const item = data.response;\n    communication.received = false;\n    referral.comNum = referral.comNum - 1;\n    setExpandReferralId('');\n    console.log('remove item: ', item);\n    return item;\n  };\n\n  const sendCommunicationNotification = (fhirId) => {\n    console.log('sending a communication notification to Unite Us...');\n    sendUUNotification(fhirId, 'Communication');\n  };\n\n  const sendTaskNotification = (fhirId) => {\n    console.log('sending a task notification to Unite Us...');\n    sendUUNotification(fhirId, 'Task');\n  };\n\n  return (\n    <>\n      <tr\n        className={\n          'align-middle table-' + rowColor(referral.Task?.resource?.status)\n        }\n        data-bs-toggle=\"collapse\"\n        data-bs-target={'#referral' + referral.ServiceRequest.resource.id}\n        aria-expanded=\"false\"\n        aria-controls={'referral' + referral.ServiceRequest.resource.id}\n        onClick={() => toggleExpand(referral.ServiceRequest.resource.id)}\n        role=\"button\"\n      >\n        <td>{referral.ServiceRequest.resource.authoredOn}</td>\n        <td>\n          <div\n            className=\"btn btn-outline-primary my-0\"\n            data-bs-toggle=\"tooltip\"\n            title=\"Click to edit referral status\"\n            data-bs-placement=\"top\"\n            onClick={() =>\n              editStatus(\n                referral.Task?.resource?.id,\n                referral.Task?.resource?.status\n              )\n            }\n          >\n            {referral.Task?.resource?.status} <FaEdit></FaEdit>\n          </div>\n        </td>\n        <td>\n          {referral.ServiceRequest.resource.orderDetail\n            ? referral.ServiceRequest.resource.orderDetail[0].text\n            : 'Not Confirmed'}\n        </td>\n        <td>{referral.Task?.resource?.owner?.display}</td>\n        <td>\n          <div role=\"button\" onClick={() => showAddNoteWindow(referral)}>\n            <div className=\"badge bg-primary\">\n              {referral.Communication?.length || '0'}\n            </div>{' '}\n            <BiMessageEdit className=\"text-primary \" />\n          </div>\n        </td>\n        {/* <td>\n          <div className=\"form-check form-switch mx-2 text-start\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              role=\"button\"\n              id={\"flexSwitchCheck\" + referral.ServiceRequest.resource.id}\n              checked={expandStatus(referral.ServiceRequest.resource.id)}\n              onChange={() => toggleExpand(referral.ServiceRequest.resource.id)}\n            />\n            <label\n              className=\"form-check-label\"\n              role=\"button\"\n              for={\"flexSwitchCheck\" + referral.ServiceRequest.resource.id}\n            >\n              Fhir Resources{\" \"}\n              {expandStatus(referral.ServiceRequest.resource.id) ? (\n                <MdExpandLess></MdExpandLess>\n              ) : (\n                <MdExpandMore></MdExpandMore>\n              )}\n            </label>\n          </div>\n        </td> */}\n        <td>\n          {referral.trackingItem ? (\n            <a\n              href={`${currentStage.appUrl}/dashboard/referrals/sent/all/${referral.trackingItem.core_referral_id}`}\n              data-bs-toggle=\"tooltip\"\n              title={referral.trackingItem.core_referral_id}\n              data-bs-placement=\"top\"\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              {'...' + referral.trackingItem.core_referral_id.split('-').pop()}\n            </a>\n          ) : null}\n        </td>\n        <td>{expandStatus(referral.ServiceRequest.resource.id) ? '-' : '+'}</td>\n      </tr>\n      <tr\n        className={\n          expandStatus(referral.ServiceRequest.resource.id)\n            ? 'table-light'\n            : 'collapse'\n        }\n        id={'referral' + referral.ServiceRequest.resource.id}\n      >\n        <td colSpan=\"7\">\n          <div className=\"row px-3\">\n            <table className=\"table table-sm align-middle text-start\">\n              <tbody>\n                {referral.trackingItem ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() => showSource(referral.trackingItem)}\n                      >\n                        Task Tracking <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      Referral created in Unite Us{' '}\n                      <a\n                        href={`${currentStage.appUrl}/dashboard/referrals/sent/all/${referral.trackingItem.core_referral_id}`}\n                        data-bs-toggle=\"tooltip\"\n                        title={referral.trackingItem.core_referral_id}\n                        data-bs-placement=\"top\"\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        {referral.trackingItem.core_referral_id}\n                      </a>\n                    </td>\n                    <td>\n                      <button\n                        className=\"btn btn-sm btn-danger\"\n                        onClick={removeReferral}\n                      >\n                        Remove Referral Link\n                      </button>\n                    </td>\n                  </tr>\n                ) : null}\n                <tr>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() =>\n                        showSource(referral.ServiceRequest.resource)\n                      }\n                    >\n                      {referral.ServiceRequest.resource.resourceType}{' '}\n                      <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td colSpan=\"2\">\n                    Referral was authored on{' '}\n                    <div className=\"btn btn-outline-primary disabled\">\n                      {referral.ServiceRequest.resource.authoredOn}\n                    </div>{' '}\n                    by{' '}\n                    <div\n                      className=\"btn btn-outline-primary\"\n                      onClick={() => showSource(referral.Practitioner.resource)}\n                    >\n                      {referral.ServiceRequest.resource.requester.display}{' '}\n                      <IoOpenOutline />\n                    </div>\n                    .{' '}\n                    {referral.ServiceRequest.resource.orderDetail ? (\n                      <span>\n                        {'Service type is '}\n                        <div className=\"btn btn-outline-primary disabled\">\n                          {referral.ServiceRequest.resource.orderDetail[0].text}\n                        </div>\n                        .\n                      </span>\n                    ) : (\n                      'Service type has not been confirmed yet.'\n                    )}\n                    {referral.ServiceRequest.resource.supportingInfo ? (\n                      <span>\n                        {' '}\n                        Attached is a supporting document of\n                        <div\n                          className=\"btn btn-outline-primary\"\n                          onClick={() =>\n                            showSource(referral.DocumentReference[0])\n                          }\n                        >\n                          {referral.DocumentReference[0].type.text}{' '}\n                          <IoOpenOutline />\n                        </div>\n                      </span>\n                    ) : null}\n                  </td>\n                </tr>\n                <tr>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() => showSource(referral.Task.resource)}\n                    >\n                      {referral.Task.resource.resourceType} <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td>\n                    <span>\n                      Referral status is{' '}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Task?.resource?.status}\n                      </div>\n                      , last modified on{' '}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Task?.resource?.lastModified}\n                      </div>\n                    </span>{' '}\n                    <span>\n                      Recipient is{' '}\n                      <div\n                        className=\"btn btn-outline-primary\"\n                        onClick={() =>\n                          showSource(referral.Organization?.resource)\n                        }\n                      >\n                        {referral.Task?.resource?.owner?.display}{' '}\n                        <IoOpenOutline />\n                      </div>\n                    </span>\n                  </td>\n                  <td>\n                    <button\n                      className=\"btn btn-sm btn-primary\"\n                      onClick={() =>\n                        sendTaskNotification(referral.Task?.resource?.id)\n                      }\n                    >\n                      Send Task Notification\n                    </button>\n                  </td>\n                </tr>\n                {referral.Organization ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() =>\n                          showSource(referral.Organization.resource)\n                        }\n                      >\n                        {referral.Organization.resource.resourceType}{' '}\n                        <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      <span>\n                        Recipient is{' '}\n                        <div className=\"btn btn-outline-primary disabled\">\n                          {referral.Organization.resource.name}\n                        </div>\n                      </span>\n                      {findUUID(referral.Organization.resource) ? (\n                        <span>\n                          Their Unite Us UUID is{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {findUUID(referral.Organization.resource).value}\n                          </div>\n                        </span>\n                      ) : null}\n                    </td>\n                    <td>\n                      {/*                       <button className=\"btn btn-sm btn-primary disabled\">\n                        Look up UU Provider\n                      </button> */}\n                    </td>\n                  </tr>\n                ) : null}\n                {referral.Patient ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() => showSource(referral.Patient.resource)}\n                      >\n                        {referral.Patient.resource.resourceType}{' '}\n                        <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Patient.resource.name[0].family},{' '}\n                        {referral.Patient.resource.name[0].given[0]}\n                      </div>\n                    </td>\n                    <td>\n                      {/*                       <button className=\"btn btn-sm btn-primary disabled\">\n                        Look up UU Client\n                      </button> */}\n                    </td>\n                  </tr>\n                ) : null}\n                {referral.Practitioner ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() =>\n                          showSource(referral.Practitioner.resource)\n                        }\n                      >\n                        {referral.Practitioner.resource.resourceType}{' '}\n                        <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Practitioner.resource.name[0].family},{' '}\n                        {referral.Practitioner.resource.name[0].given[0]}\n                      </div>\n                    </td>\n                    <td>\n                      {/*                       <button className=\"btn btn-sm btn-primary disabled\">\n                        Look up UU User\n                      </button> */}\n                    </td>\n                  </tr>\n                ) : null}\n\n                {referral.Consent?.map((consent, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(consent.resource)}\n                        >\n                          {consent.resource.resourceType} <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          Consent status is{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.status}\n                          </div>\n                          . Scope is{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.scope?.text}\n                          </div>\n                          . Provision period is from\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.provision?.period?.start}\n                          </div>\n                          to\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.provision?.period?.end}\n                          </div>\n                        </span>\n                      </td>\n                      <td>\n                        {/*                         <button className=\"btn btn-sm btn-primary disabled\">\n                          Check UU Consent\n                        </button> */}\n                      </td>\n                    </tr>\n                  );\n                })}\n\n                {referral.DocumentReference?.map((documentReference, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(documentReference)}\n                        >\n                          {documentReference.resourceType} <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          Document type is{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {documentReference.type.text}\n                          </div>\n                          . Document description is{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {documentReference.description}\n                          </div>\n                        </span>\n                      </td>\n                      <td>\n                        {/*                         <button className=\"btn btn-sm btn-primary disabled\">\n                          Check Document Status\n                        </button> */}\n                      </td>\n                    </tr>\n                  );\n                })}\n\n                {referral.Binary?.map((binary, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(binary)}\n                        >\n                          {binary.resourceType} <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td colSpan=\"2\">\n                        <span>\n                          Content type is{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {binary.contentType}\n                          </div>\n                          .\n                        </span>{' '}\n                        <div className=\"btn btn-link\">\n                          <a\n                            download=\"Epic_CRN.pdf\"\n                            href={`data:application/pdf;base64,${binary.data}`}\n                            title=\"Download pdf document\"\n                          >\n                            Click to download PDF file <IoCloudDownloadSharp />\n                          </a>\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n\n                {referral.Communication?.map((communication, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(communication.resource)}\n                        >\n                          {communication.resource.resourceType}{' '}\n                          <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          On{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {communication.resource?.sent}\n                          </div>\n                          , sent from{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {communication.resource?.sender.display}\n                          </div>\n                          to{' '}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {communication.resource?.recipient[0].display}\n                          </div>\n                          .\n                        </span>\n                        {communication.resource.payload ? (\n                          <div>\n                            {' '}\n                            Note message:{' '}\n                            <div className=\"btn btn-outline-primary disabled\">\n                              {communication.resource.payload[0].contentString}\n                            </div>\n                          </div>\n                        ) : (\n                          <span> Note message is empty.</span>\n                        )}\n                        {communication.resource.payload &&\n                        communication.resource.payload[1]?.contentReference ? (\n                          <div>\n                            {' '}\n                            A{' '}\n                            <div\n                              className=\"btn btn-outline-primary\"\n                              onClick={() =>\n                                showSource(referral.DocumentReference[0])\n                              }\n                            >\n                              document <IoOpenOutline />\n                            </div>{' '}\n                            was attached to the communication.\n                          </div>\n                        ) : null}\n                      </td>\n                      <td>\n                        {communication.resource.sender.reference.includes(\n                          'Practitioner/'\n                        ) ? (\n                          communication.received ? (\n                            <button\n                              className=\"btn btn-sm btn-primary\"\n                              onClick={() =>\n                                sendCommunicationNotification(\n                                  communication.resource.id\n                                )\n                              }\n                            >\n                              {' '}\n                              Send Communication Notification\n                            </button>\n                          ) : (\n                            <div>\n                              <button\n                                className=\"btn btn-sm btn-primary\"\n                                onClick={() =>\n                                  sendCommunicationNotification(\n                                    communication.resource.id\n                                  )\n                                }\n                              >\n                                {' '}\n                                Send Communication Notification\n                              </button>\n                              <button\n                                className=\"btn btn-sm btn-danger\"\n                                onClick={() =>\n                                  removeCommunication(communication)\n                                }\n                              >\n                                Remove Communication Link\n                              </button>\n                            </div>\n                          )\n                        ) : (\n                          <button\n                            className=\"btn btn-sm btn-warning\"\n                            onClick={() => showAddNoteWindow(referral)}\n                          >\n                            Add a new note\n                          </button>\n                        )}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </td>\n      </tr>\n    </>\n  );\n}\n\nexport default ReferralSummary;\n","import { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { FaAngleDoubleRight, FaFlagCheckered } from 'react-icons/fa';\nimport { AiOutlineStop } from 'react-icons/ai';\n\nconst StatusSelector = ({\n  showReferralStatus,\n  currentReferralStatus,\n  closeReferralStatusEdit,\n  profileName,\n}) => {\n  const [newReferralStatus, setNewReferralStatus] = useState('');\n  const [rejectReason, setRejectReason] = useState({\n    value: 'Please select a reason ...',\n  });\n  const [rejectReasonNote, setRejectReasonNote] = useState('');\n  const [enforceBusinessRule, setEnforceBusinessRule] = useState(false);\n\n  const closeStatusEdit = () => {\n    setNewReferralStatus('');\n    setRejectReason({ value: 'Please select a reason ...' });\n    setRejectReasonNote('');\n    closeReferralStatusEdit(null);\n  };\n\n  const submitStatusChange = () => {\n    setNewReferralStatus(newReferralStatus);\n    closeReferralStatusEdit({\n      value: newReferralStatus,\n      rejectReason: { reason: rejectReason, note: rejectReasonNote },\n    });\n  };\n\n  const changeStatus = (newStatus) => {\n    console.log('new status is: ', newStatus);\n    setNewReferralStatus(newStatus);\n  };\n\n  const statusEnabled = (status) => {\n    if (!enforceBusinessRule) return true;\n    // if (profileName === \"Logica\") return true;\n\n    switch (status) {\n      case 'requested':\n        if (\n          currentReferralStatus === 'requested' ||\n          currentReferralStatus === 'accepted' ||\n          currentReferralStatus === 'rejected' ||\n          currentReferralStatus === ''\n        )\n          return true;\n        else return false;\n      case 'accepted':\n      case 'rejected':\n        if (\n          currentReferralStatus === 'requested' ||\n          currentReferralStatus === 'accepted' ||\n          currentReferralStatus === 'rejected' ||\n          currentReferralStatus === ''\n        )\n          return true;\n        else return false;\n\n      case 'completed':\n      case 'failed':\n        if (currentReferralStatus === 'in-progress') return true;\n        else return false;\n\n      default:\n        return false;\n    }\n  };\n\n  const rejectReasonOptions = () => {\n    const uuRejectReasons = [\n      {\n        display_name: 'Not Eligible',\n        value: 'Client is not eligible for our services',\n      },\n      {\n        display_name: 'Duplicate',\n        value: 'Duplicate, case already exists in the system',\n      },\n      {\n        display_name: 'No Capacity',\n        value: 'We do not have capacity to serve client',\n      },\n      {\n        display_name: 'Do Not Provide Service',\n        value: 'We do not provide the services requested/needed',\n      },\n      {\n        display_name: 'Unable to Contact Client',\n        value: 'We were unable to contact the client',\n      },\n      { display_name: 'Other', value: 'Other' },\n    ];\n\n    return uuRejectReasons.map((option) => {\n      return <option value={option.value}>{option.display_name}</option>;\n    });\n  };\n\n  const rowColor = (status) => {\n    switch (status) {\n      case 'accepted':\n        return 'primary';\n      case 'in-progress':\n        return 'info';\n      case 'rejected':\n        return 'danger';\n      case 'failed':\n        return 'danger';\n      case 'completed':\n        return 'success';\n      case 'cancelled':\n        return 'danger';\n      case 'requested':\n        return 'secondary';\n      default:\n        return 'dark';\n    }\n  };\n\n  const stageColor = (stage) => {\n    const colorDone = rowColor(newReferralStatus || currentReferralStatus);\n    const colorNotDone = 'table-secondary';\n    let newStage = 1;\n\n    switch (newReferralStatus || currentReferralStatus) {\n      case 'requested':\n        newStage = 1;\n        break;\n      case 'accepted':\n        newStage = 2;\n        break;\n      case 'in-progress':\n        newStage = 3;\n        break;\n      case 'completed':\n        newStage = 4;\n        break;\n      default:\n        newStage = 5;\n    }\n    return newStage < stage ? colorNotDone : 'table-' + colorDone;\n  };\n\n  return (\n    <Modal\n      id=\"referralStatus\"\n      size=\"lg\"\n      show={showReferralStatus}\n      onHide={closeStatusEdit}\n    >\n      <Modal.Header className=\"bg-light\" closeButton>\n        <Modal.Title>Update Referral Status</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"row my-3 text-center\">\n          <div className=\"col-6\">\n            {'Current Stauts: '}\n            <div\n              className={'btn btn-outline-' + rowColor(currentReferralStatus)}\n            >\n              {currentReferralStatus}\n            </div>\n          </div>\n          <div className=\"col-6\">\n            {'New Status    : '}\n            <div\n              className={\n                'btn active btn-outline-' +\n                rowColor(newReferralStatus || currentReferralStatus)\n              }\n            >\n              {newReferralStatus || currentReferralStatus}\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"btn-group mb-2 text-center container-fluid\"\n          role=\"group\"\n          aria-label=\"Referral status selector\"\n          id=\"statusGroup\"\n        >\n          <table className=\"table table-bordered table-sm\">\n            <thead>\n              <tr>\n                <th className={stageColor(1)}>\n                  INITIATE{' '}\n                  <span className=\"float-end\">\n                    <FaAngleDoubleRight />\n                  </span>\n                </th>\n                <th className={stageColor(2)}>\n                  RESPONSE{' '}\n                  <span className=\"float-end\">\n                    <FaAngleDoubleRight />\n                  </span>\n                </th>\n                <th className={stageColor(3)}>\n                  CONFIRM{' '}\n                  <span className=\"float-end\">\n                    <FaAngleDoubleRight />\n                  </span>\n                </th>\n                <th className={stageColor(4)}>\n                  RESOLVE{' '}\n                  <span className=\"float-end\">\n                    <FaFlagCheckered />\n                  </span>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td rowSpan=\"3\" className=\"table-light\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusRequested\"\n                      autoComplete=\"off\"\n                      value=\"requested\"\n                      defaultChecked={currentReferralStatus === 'requested'}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled('requested')}\n                    />\n                    <label\n                      class=\"btn btn-outline-secondary\"\n                      htmlFor=\"statusRequested\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('requested') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      requested <AiOutlineStop className=\"invisible\" />\n                    </label>\n                  </div>\n                </td>\n\n                <td colSpan=\"3\" className=\"table-light\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check btn-block\"\n                      name=\"btnStatus\"\n                      id=\"statusCancelled\"\n                      autoComplete=\"off\"\n                      value=\"cancelled\"\n                      defaultChecked={currentReferralStatus === 'cancelled'}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled('cancelled')}\n                    />\n                    <label\n                      class=\"btn btn-outline-danger\"\n                      htmlFor=\"statusCancelled\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('cancelled') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      cancelled{' '}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                  </div>\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusAccepted\"\n                      autoComplete=\"off\"\n                      value=\"accepted\"\n                      defaultChecked={currentReferralStatus === 'accepted'}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled('accepted')}\n                    />\n                    <label\n                      class=\"btn btn-outline-primary\"\n                      htmlFor=\"statusAccepted\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('accepted') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      accepted <AiOutlineStop className=\"invisible\" />\n                    </label>\n                  </div>\n                </td>\n                <td className=\"table-light\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusInProgress\"\n                      autoComplete=\"off\"\n                      value=\"in-progress\"\n                      defaultChecked={currentReferralStatus === 'in-progress'}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled('in-progress')}\n                    />\n                    <label\n                      class=\"btn btn-outline-info\"\n                      htmlFor=\"statusInProgress\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('in-progress') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      in-progress <AiOutlineStop className=\"invisible\" />\n                    </label>\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusCompleted\"\n                      autoComplete=\"off\"\n                      value=\"completed\"\n                      defaultChecked={currentReferralStatus === 'completed'}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled('completed')}\n                    />\n                    <label\n                      class=\"btn btn-outline-success\"\n                      htmlFor=\"statusCompleted\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('completed') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      completed{' '}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusFailed\"\n                      autoComplete=\"off\"\n                      value=\"failed\"\n                      defaultChecked={currentReferralStatus === 'failed'}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled('failed')}\n                    />\n                    <label\n                      class=\"btn btn-outline-danger\"\n                      htmlFor=\"statusFailed\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('failed') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      failed{' '}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                  </div>\n                </td>\n              </tr>\n\n              <tr>\n                <td colSpan=\"3\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn btn-sm btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusRejected\"\n                      autoComplete=\"off\"\n                      value=\"rejected\"\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      defaultChecked={currentReferralStatus === 'rejected'}\n                      disabled={!statusEnabled('rejected')}\n                    />\n                    <label\n                      class=\"btn btn-outline-danger\"\n                      htmlFor=\"statusRejected\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled('rejected') ? 'invisible' : 'visible'\n                        }\n                      />{' '}\n                      rejected{' '}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                    <div\n                      className={\n                        newReferralStatus === 'rejected' ? '' : 'd-none'\n                      }\n                    >\n                      <div className=\"form-group\">\n                        <label className=\"col-form-label\">REJECT REASON</label>\n                        <div>\n                          <select\n                            className=\"form-select\"\n                            value={rejectReason.value}\n                            onChange={(e) =>\n                              setRejectReason({\n                                value: e.target.value,\n                                text: e.target.options[e.target.selectedIndex]\n                                  .text,\n                              })\n                            }\n                          >\n                            <option>Select a reason ...</option>\n                            {rejectReasonOptions()}\n                          </select>\n                        </div>\n                      </div>\n\n                      <div className=\"form-group\">\n                        <label className=\"col-form-label\">NOTE</label>\n                        <div>\n                          <textarea\n                            className=\"form-control\"\n                            rows=\"3\"\n                            cols=\"50\"\n                            placeholder=\"Enter a note for the reject reason\"\n                            value={rejectReasonNote}\n                            onChange={(e) =>\n                              setRejectReasonNote(e.target.value)\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <div className=\"col form-check form-switch mx-2 float-start text-start\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            role=\"button\"\n            id=\"flexSwitchBusinessRule\"\n            checked={enforceBusinessRule}\n            onChange={() => setEnforceBusinessRule(!enforceBusinessRule)}\n          />\n          <label\n            className=\"form-check-label\"\n            role=\"button\"\n            htmlFor=\"flexSwitchBusinessRule\"\n          >\n            Enforce Epic Business Rules\n          </label>\n        </div>\n\n        <Button className=\"col\" variant=\"warning\" onClick={closeStatusEdit}>\n          Cancel\n        </Button>\n        <Button className=\"col\" variant=\"primary\" onClick={submitStatusChange}>\n          Submit\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default StatusSelector;\n","import { useState, useEffect, useRef } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { BiMessage } from 'react-icons/bi';\nimport { TiDeleteOutline } from 'react-icons/ti';\n\nimport {\n  FaAngleDoubleRight,\n  FaAngleDoubleLeft,\n  FaFlagCheckered,\n} from 'react-icons/fa';\nimport { IoOpenOutline, IoCloudDownloadSharp } from 'react-icons/io5';\nimport { CgAttachment } from 'react-icons/cg';\n\nconst AddNote = ({\n  showAddNote,\n  referral,\n  closeAddNote,\n  baseUrl,\n  currentStageBaseUrl,\n}) => {\n  const [noteText, setNoteText] = useState('');\n  const [callResponse, setCallResponse] = useState('');\n  const [refreshCount, setRefreshCount] = useState(0);\n  const [showMessageToast, setShowMessageToast] = useState(false);\n  const [communicationList, setCommunicationList] = useState([]);\n  const [waitMessage, setWaitMessage] = useState(\n    'Sending communication note ...'\n  );\n\n  useEffect(() => {\n    setCommunicationList(referral?.Communication);\n    console.log('useEffect cl:', communicationList);\n  }, [referral]);\n\n  useEffect(() => {\n    const updateList = async () => {\n      setWaitMessage('Retriving communcation notes ...');\n      setShowMessageToast(true);\n\n      const url = `${currentStageBaseUrl}/mockapi/request/search`;\n\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Accept: 'application/json',\n          'x-api-key': 'sfsdfddfdsfsdfs32342343',\n        },\n        body: JSON.stringify({\n          baseUrl: baseUrl,\n          resourceType: 'Communication',\n          queryParams: {\n            'part-of': referral?.Task.resource.id,\n          },\n        }),\n      });\n      const data = await res.json();\n\n      if (data.response?.body?.total > 0) {\n        setCommunicationList(data.response?.body?.entry);\n        referral.Communication = data.response?.body?.entry;\n      }\n\n      setShowMessageToast(false);\n    };\n\n    if (referral?.Task) updateList();\n    setNoteText('');\n    //setCallResponse(\"\");\n  }, [refreshCount]);\n\n  const sendNote = async () => {\n    setWaitMessage('Sending communication note ...');\n    setShowMessageToast(true);\n    const url = `${currentStageBaseUrl}/mockapi/communication_out/process`;\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343',\n      },\n      body: JSON.stringify({\n        note: noteText,\n        referralId: referral?.trackingItem?.core_referral_id,\n        sentAt: Math.floor(Date.now() / 1000),\n      }),\n    });\n    const data = await res.json();\n    setCallResponse(JSON.stringify(data));\n    setRefreshCount(refreshCount + 1);\n    setShowMessageToast(false);\n    return;\n  };\n\n  const sender = (communication) => {\n    if (communication) {\n      const senderName = communication.resource?.sender?.display;\n      let senderType;\n\n      if (\n        communication.resource?.sender?.reference?.split('/')[0] ===\n        'Organization'\n      )\n        senderType = 'cbo';\n      else senderType = 'ehr';\n      const senderInfo = { name: senderName, type: senderType };\n      return senderInfo;\n    }\n\n    return null;\n  };\n\n  const noteColor = (communication) => {\n    if (sender(communication)?.type === 'ehr') return 'seashell';\n    else return 'aliceblue';\n  };\n\n  const noteAlign = (communication) => {\n    if (sender(communication)?.type === 'ehr') return 'start';\n    else return 'end';\n  };\n\n  const responseTo = (communication) => {\n    const recipients = communication.resource?.recipient;\n    let responseToStr = 'Replied to: ';\n    recipients.forEach((entry) => {\n      responseToStr += entry.display + ', ';\n    });\n    return responseToStr;\n  };\n\n  const closeAddNoteWindow = () => {\n    //setCommunicationList([]);\n    setCallResponse('');\n    closeAddNote();\n  };\n\n  return (\n    <>\n      <Modal\n        id=\"addNote\"\n        size=\"lg\"\n        show={showAddNote}\n        onHide={closeAddNoteWindow}\n      >\n        <Modal.Header className=\"bg-light\" closeButton>\n          <Modal.Title>Referral Communications</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <table className=\"table table-responsive table-hover\">\n            <tbody>\n              {communicationList?.map((entry, index) => (\n                <tr>\n                  <td className=\"p-0\">\n                    <table className=\"table table-borderless m-0 p-0\">\n                      <tbody>\n                        <tr>\n                          <td className=\"text-center text-secondary\">\n                            {entry.resource?.sent}\n                          </td>\n                        </tr>\n\n                        {sender(entry).type === 'cbo' ? (\n                          <tr\n                            className={`text-${noteAlign(\n                              entry\n                            )} text-secondary`}\n                          >\n                            <td className=\"py-0\">{responseTo(entry)}</td>{' '}\n                          </tr>\n                        ) : (\n                          <tr\n                            className={`text-${noteAlign(\n                              entry\n                            )} text-secondary`}\n                          >\n                            <td className=\"py-0\">From: {sender(entry).name}</td>\n                          </tr>\n                        )}\n                        <tr className={`text-${noteAlign(entry)}`}>\n                          <td style={{ backgroundColor: noteColor(entry) }}>\n                            <div\n                              className={`btn mt-0 mx-0 text-start disabled text-body`}\n                              style={{ opacity: 1 }}\n                            >\n                              {entry.resource?.payload\n                                ? entry.resource?.payload[0]?.contentString\n                                : '[empty]'}\n                            </div>\n                            {entry.resource?.payload &&\n                            entry.resource?.payload[1]?.contentReference ? (\n                              <p>\n                                <CgAttachment />\n                                Document attachment\n                              </p>\n                            ) : null}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          {referral?.trackingItem ? (\n            <div className=\"form-group\">\n              <div className=\"d-flex\">\n                <label className=\"col-form-label col-6 vertical-bottom\">\n                  NEW NOTE\n                </label>\n                <div className=\"btn btn-primary col-6\" onClick={sendNote}>\n                  Send\n                </div>\n              </div>\n              <div\n                className={\n                  showMessageToast\n                    ? 'toast bg-warning text-secondary show'\n                    : 'toast'\n                }\n                role=\"alert\"\n                aria-live=\"assertive\"\n                aria-atomic=\"true\"\n                id=\"messageToastModal\"\n              >\n                <div className=\"toast-header\">\n                  <strong className=\"me-auto\">Please Wait ...</strong>\n                </div>\n                <div className=\"toast-body\">\n                  {waitMessage}{' '}\n                  <div className=\"spinner-border text-warning\" role=\"status\">\n                    <span className=\"visually-hidden\">...</span>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <textarea\n                  className=\"form-control\"\n                  rows=\"3\"\n                  cols=\"50\"\n                  placeholder=\"Enter a new note\"\n                  value={noteText}\n                  onChange={(e) => setNoteText(e.target.value)}\n                />\n              </div>\n              {callResponse === '' ? null : (\n                <div className=\"row\">\n                  <div className=\"col-10\">\n                    <pre>{callResponse}</pre>{' '}\n                  </div>\n                  <div className=\"col-2\">\n                    <TiDeleteOutline\n                      calssName=\"col-2\"\n                      onClick={() => {\n                        setCallResponse('');\n                      }}\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : null}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            className=\"col\"\n            variant=\"warning\"\n            onClick={closeAddNoteWindow}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddNote;\n","import EncounterSummary from './EncounterSummary';\nimport CreateReferral from './CreateReferral';\nimport ReferralSummary from './ReferralSummary';\nimport StatusSelector from './StatusSelector';\nimport AddNote from './AddNote';\nimport { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nfunction Referrals({\n  onCreate,\n  referralList,\n  currentEncounter,\n  sendNotificationUU,\n  profileName,\n  updateReferralStatus,\n  baseUrl,\n  sendUUNotification,\n  currentStage,\n}) {\n  const [showNewReferral, setShowNewReferral] = useState(false);\n  const [showSource, setShowSource] = useState(false);\n  const [showReferralStatus, setShowReferralStatus] = useState(false);\n  const [fullJson, setFullJson] = useState();\n  const [currentReferralStatus, setCurrentReferralStatus] = useState('');\n  //const [newReferralStatus, setNewReferralStatus] = useState(\n  //  currentReferralStatus\n  //);\n  const [editReferralId, setEditReferralId] = useState();\n  const [showAddNote, setShowAddNote] = useState(false);\n  const [currentReferral, setCurrentReferral] = useState();\n\n  const toggleShowNewReferral = () => {\n    setShowNewReferral((showNewReferral) => !showNewReferral);\n  };\n\n  const onCreateReferral = (referral) => {\n    onCreate(referral);\n    toggleShowNewReferral();\n  };\n\n  const showFhirSource = (fullJson, show) => {\n    setFullJson(fullJson);\n    setShowSource(show);\n  };\n\n  const closeWindow = () => setShowSource(false);\n\n  const editReferralStatus = (referralId, currentStatus) => {\n    setShowReferralStatus(true);\n    setEditReferralId(referralId);\n    setCurrentReferralStatus(currentStatus);\n    //setNewReferralStatus(\"\");\n  };\n\n  const closeReferralStatusEdit = (newStatus) => {\n    setShowReferralStatus(false);\n    if (newStatus !== null) {\n      //setNewReferralStatus(newReferralStatus.value);\n      console.log('new status: ', newStatus.value, newStatus.rejectReason);\n      updateReferralStatus(editReferralId, newStatus);\n    } //else setNewReferralStatus(\"\");\n  };\n\n  const showAddNoteWindow = (referral) => {\n    setCurrentReferral(referral);\n    setShowAddNote(true);\n  };\n  const closeAddNote = () => {\n    setShowAddNote(false);\n  };\n\n  return (\n    <div className=\"col-md-9 col-lg-10 px-0\">\n      <div className=\"referrals\">\n        {/*         <EncounterSummary\n          toggleShowNewReferral={toggleShowNewReferral}\n          showNewReferral={showNewReferral}\n          currentEncounter={currentEncounter}\n          sendNotificationUU={sendNotificationUU}\n          profileName={profileName}\n        /> \n        {showNewReferral ? (\n          <CreateReferral\n            onCreate={onCreateReferral}\n            toggleShowNewReferral={toggleShowNewReferral}\n          />\n        ) : null} */}\n        <div className=\"referralList\">\n          {/* <div className=\"h5 py-3\">\n            This encounter has{\" \"}\n            {referralList.length > 1\n              ? referralList.length + \" referrals.\"\n              : referralList.length === 1\n              ? \" 1 referral.\"\n              : \" no referrals.\"}\n          </div> */}\n\n          <EncounterSummary\n            toggleShowNewReferral={toggleShowNewReferral}\n            showNewReferral={showNewReferral}\n            currentEncounter={currentEncounter}\n            sendNotificationUU={sendNotificationUU}\n            profileName={profileName}\n          />\n          {showNewReferral ? (\n            <CreateReferral\n              onCreate={onCreateReferral}\n              toggleShowNewReferral={toggleShowNewReferral}\n            />\n          ) : null}\n          {referralList?.length > 0 ? (\n            <div className=\"table-responsive\">\n              <table className=\"table table-hover\">\n                <thead>\n                  <tr>\n                    <th>DATE SENT</th>\n                    <th>STATUS</th>\n                    <th>SERVICE TYPE</th>\n                    <th>RECEIPIENT</th>\n                    <th>NOTES</th>\n                    <th>UU REFERRAL</th>\n                    <th>+/-</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {referralList.map((referral, index) => (\n                    <ReferralSummary\n                      key={index}\n                      referral={referral}\n                      showFhirSource={showFhirSource}\n                      editReferralStatus={editReferralStatus}\n                      showAddNoteWindow={showAddNoteWindow}\n                      baseUrl={baseUrl}\n                      sendUUNotification={sendUUNotification}\n                      currentStage={currentStage}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : null}\n        </div>\n      </div>\n\n      <Modal id=\"fhirSource\" size=\"lg\" show={showSource} onHide={closeWindow}>\n        <Modal.Header className=\"bg-light\" closeButton>\n          <Modal.Title>\n            {fullJson?.resourceType} : {fullJson?.id}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <pre id=\"json\">{JSON.stringify(fullJson, undefined, 2)}</pre>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"warning\" onClick={closeWindow}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <StatusSelector\n        showReferralStatus={showReferralStatus}\n        currentReferralStatus={currentReferralStatus}\n        closeReferralStatusEdit={closeReferralStatusEdit}\n        profileName={profileName}\n      ></StatusSelector>\n\n      <AddNote\n        showAddNote={showAddNote}\n        referral={currentReferral}\n        communicationList={currentReferral?.Communication}\n        closeAddNote={closeAddNote}\n        baseUrl={baseUrl}\n        currentStageBaseUrl={currentStage.baseUrl}\n      ></AddNote>\n    </div>\n  );\n}\n\nexport default Referrals;\n","export const Profile_Epic = {\n  name: 'Epic',\n\n  defaultPatient: {\n    firstName: 'Calvin',\n    lastName: 'Ccm',\n    gender: 'Male',\n    dob: '01/01/1990',\n    mrn: '203724',\n    fhirId: 'e4ikKcC2Rp3EsZQh8Ac6C5A3',\n    uuid: 'b5318891-3dc8-426a-af50-531e106ad1a1',\n  },\n\n  defaultProvider: {\n    firstName: 'Case',\n    lastName: 'Manager',\n    fhirId: 'eaToFIkaJ32mO4K002q3BLw3',\n    uuid: '94e5f7ee-1425-42bc-8833-3474b687b125',\n    groupId: 'bf4aa373-81eb-4da5-9980-2d3e51c57b3c',\n    networkId: '145ca925-ba86-490d-b404-35f4fe5ada66',\n  },\n\n  defaultEncounter: 'eEDcHpsgsD0Pv4Ih8HnfOxA3', //\"enZf6GWN2rMGQWF1rqqDgNg3\",\n  defaultDocumentReference: 'e1.cnazaNgltIElLYGLL4Sg3',\n  defaultBaseUrl:\n    'https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4',\n  defaultNotificationUrl:\n    'https://fhir-crn.uniteustraining.com/poc/FhirNotificationWebService',\n  accessToken:\n    'e2a4575581b3f57203e182b0b1f3dcea479baecd31bef125cc57f6dd4b8905ac',\n};\n\nexport const Profile_Epic_2 = {\n  name: 'Epic2',\n\n  defaultPatient: {\n    firstName: 'Beverly',\n    lastName: 'Ccm',\n    gender: 'Female',\n    dob: '01/01/1940',\n    mrn: '203722',\n    fhirId: 'egHmZUd91rLItB1AqGV49Pg3',\n    uuid: 'b5318891-3dc8-426a-af50-531e106ad1a1',\n  },\n\n  defaultProvider: {\n    firstName: 'Case',\n    lastName: 'Manager',\n    fhirId: 'eaToFIkaJ32mO4K002q3BLw3',\n    uuid: '94e5f7ee-1425-42bc-8833-3474b687b125',\n    groupId: 'bf4aa373-81eb-4da5-9980-2d3e51c57b3c',\n    networkId: '145ca925-ba86-490d-b404-35f4fe5ada66',\n  },\n\n  defaultEncounter: 'eFBT3k94CLm3fCPMNlKH2DQ3', //\"enZf6GWN2rMGQWF1rqqDgNg3\",\n  defaultDocumentReference: 'e.-1q0eXQDEZ.9mNdXwVjYA3',\n  defaultBaseUrl:\n    'https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4',\n  defaultNotificationUrl:\n    'https://fhir-crn.uniteustraining.com/poc/FhirNotificationWebService',\n  accessToken:\n    'e2a4575581b3f57203e182b0b1f3dcea479baecd31bef125cc57f6dd4b8905ac',\n};\n\nexport const Profile_Logica = {\n  name: 'Logica',\n  defaultPatient: {\n    firstName: 'Beverly',\n    lastName: 'Ccm',\n    gender: 'Female',\n    dob: '01/01/1940',\n    mrn: '203722',\n    fhirId: '14730',\n    uuid: 'b5318891-3dc8-426a-af50-531e106ad1a1',\n  },\n  defaultProvider: {\n    firstName: 'Demo',\n    lastName: 'Provider',\n    fhirId: '14734',\n    uuid: '94e5f7ee-1425-42bc-8833-3474b687b125',\n    groupId: 'bf4aa373-81eb-4da5-9980-2d3e51c57b3c',\n    networkId: '145ca925-ba86-490d-b404-35f4fe5ada66',\n  },\n  defaultEncounter: '14801',\n  defaultDocumentReference: '14740',\n  defaultBaseUrl: 'https://api.logicahealth.org/uufhircrn/open',\n  defaultNotificationUrl:\n    'https://fhir-crn.uniteustraining.com/poc/FhirNotificationWebService',\n  accessToken: '',\n};\n\nexport const Stage_Staging = {\n  name: 'staging',\n  baseUrl: 'https://fhir-crn.uniteusdev.com/v1',\n  appUrl: 'https://app.uniteusdev.com',\n  token: 'wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03',\n  provider: {\n    firstName: 'Five',\n    lastName: 'Auto',\n    email: 'five@auto.com',\n    user_id: '184bd75d-e4da-4751-899c-b3a9da0599ba',\n    group_id: 'c31a43c0-c593-4c96-84ed-6f966e895649',\n    network_id: 'c88b9628-b76c-434b-ad58-62bb2ca9d6c0',\n    access_token_legacy:\n      'b6063af252fb95dea2a0e0a5e049035ddad33a14192f19804662b9f9896b6bd0',\n    access_token_core:\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImZoaXJjcm5yZXF1ZXN0cyJ9.eyJpc3MiOm51bGwsInN1YiI6Ijk2NDA4MjA5LTA2YzktNGVjYi05ZjBkLWYyZjAxNTc4Y2QyZiIsImVtYWlsIjoiZmhpci5jcm4ucmVxdWVzdHNAdW5pdGV1cy5jb20iLCJhdWQiOltdLCJleHAiOjIxNDc0ODM2NDcsIm5iZiI6MTYyNjcxODMxOSwiaWF0IjoxNjI2NzE4MzE5LCJqdGkiOiIzY2U1MjE0ODhmM2RjZTgzZjVkNmM2MzgwYWFjMzYzZGU2MjI1ZTNlODU1ZGVmOWFiOSIsInVzZXJfaW50ZXJjb21faG1hYyI6ImEwYmY1NGI1OGUzYzg0MDI2MWUxMWMwZWI5Y2EyMGM2NDYzMTMwOWUzZjYxMWZhZjlhOTQwZjQyNDBlOTk4YzgifQ.JU3X_WOYWZlLr2dYSKf135LyvkDzjDqhtUbJYlZd0NM',\n  }.freeze,\n};\n\nexport const Stage_Training = {\n  name: 'training',\n  baseUrl: 'https://fhir-crn.uniteustraining.com/v1',\n  appUrl: 'https://app.uniteustraining.com',\n  token: 'qgx2q5m35Q42q83kkM5FX67S0KHyFsCf4HVb5hpI',\n  provider: {\n    firstName: 'Case',\n    lastName: 'Manager',\n    fhirId: 'eaToFIkaJ32mO4K002q3BLw3',\n    uuid: '94e5f7ee-1425-42bc-8833-3474b687b125',\n    groupId: 'bf4aa373-81eb-4da5-9980-2d3e51c57b3c',\n    networkId: '145ca925-ba86-490d-b404-35f4fe5ada66',\n  },\n};\n\nexport const Stage_POC = {\n  name: 'poc',\n  baseUrl: 'https://fhir-crn.uniteustraining.com/poc',\n  appUrl: 'https://devqa.uniteusdev.com/core-phase-3',\n  appUrl2: 'https://devqa.uniteusdev.com/core-phase-3',\n  token: 'USZEkhXmZO8vDzg2aArT16bsPregoov66fetdapY', //'sfsdfddfdsfsdfs32342343',\n  provider: {\n    firstName: 'Case',\n    lastName: 'Manager',\n    fhirId: 'eaToFIkaJ32mO4K002q3BLw3',\n    uuid: '94e5f7ee-1425-42bc-8833-3474b687b125',\n    groupId: 'bf4aa373-81eb-4da5-9980-2d3e51c57b3c',\n    networkId: '145ca925-ba86-490d-b404-35f4fe5ada66',\n  },\n};\n","import './App.css';\nimport Header from './components/Header';\nimport Encounters from './components/Encounters';\nimport Referrals from './components/Referrals';\nimport { useState, useEffect } from 'react';\nimport {\n  Profile_Epic,\n  Profile_Epic_2,\n  Profile_Logica,\n  Stage_Staging,\n  Stage_Training,\n  Stage_POC,\n} from './components/Profiles';\n\nfunction App() {\n  const defaultProfile = Profile_Logica;\n  const defaultProfileName = defaultProfile.name;\n  const [currentProfileName, setCurrentProfileName] =\n    useState(defaultProfileName);\n  //const [profile, setProfile] = useState(defaultProfile);\n  const [patient, setPatient] = useState(defaultProfile.defaultPatient);\n  const [provider, setProvider] = useState(defaultProfile.defaultProvider);\n  const [currentEncounter, setCurrentEncounter] = useState(\n    defaultProfile.defaultEncounter\n  );\n  const [accessToken, setAccessToken] = useState(defaultProfile.access_token);\n  const [baseUrl, setBaseUrl] = useState(defaultProfile.defaultBaseUrl);\n  const [referrals, setReferrals] = useState([]);\n  const [encounters, setEncounters] = useState([]);\n\n  const [sampleDocumentReference, setSampleDocumentReference] = useState('');\n\n  const defaultToastMessage = 'Retrieving FHIR resources ... ';\n  const [toastMessage, setToastMessage] = useState(defaultToastMessage);\n  const [showMessageToast, setShowMessageToast] = useState(true);\n  const toggleShowMessageToast = () => setShowMessageToast(!showMessageToast);\n\n  const defaultStage = Stage_Training;\n  const [currentStage, setCurrentStage] = useState(defaultStage);\n  const [currentStageBaseUrl, setCurrentStageBaseUrl] = useState(\n    defaultStage.baseUrl\n  );\n\n  const [progress, setProgress] = useState('0%');\n\n  const retrievePatientInfo = async (patientFhirId) => {\n    let newProfile = {\n      name: 'Logica2',\n      defaultPatient: {\n        fhirId: patientFhirId,\n        uuid: '',\n      },\n      defaultProvider: {\n        firstName: 'Demo',\n        lastName: 'Provider',\n        fhirId: '14734',\n        uuid: '94e5f7ee-1425-42bc-8833-3474b687b125',\n        groupId: 'bf4aa373-81eb-4da5-9980-2d3e51c57b3c',\n        networkId: '145ca925-ba86-490d-b404-35f4fe5ada66',\n      },\n      defaultEncounter: '14801',\n      defaultDocumentReference: '14740',\n      defaultBaseUrl: 'https://api.logicahealth.org/uufhircrn/open',\n    };\n\n    const url = baseUrl + '/Patient/' + patientFhirId;\n\n    const res = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n      },\n    });\n    if (res.status !== 200) return null;\n\n    const data = await res.json();\n    console.log('Patient received: ', data);\n    newProfile.defaultPatient.firstName = data.name[0]?.given[0];\n    newProfile.defaultPatient.lastName = data.name[0]?.family;\n    newProfile.defaultPatient.gender = data.gender;\n    newProfile.defaultPatient.dob = data.birthDate;\n    return newProfile;\n  };\n\n  const switchProfile = async (profileName, patientFhirId = '') => {\n    //if (profileName === currentProfileName) return\n    setProgress('0%');\n    setToastMessage(defaultToastMessage);\n    setShowMessageToast(true);\n\n    console.log('Switch to profile: ', profileName, patientFhirId);\n    setCurrentProfileName(profileName);\n    let newProfile; //'= profileName === \"Logica\" ? Profile_Logica : Profile_Epic;\n    switch (profileName) {\n      case 'Logica':\n        newProfile = Profile_Logica;\n        if (currentStage.name === 'poc')\n          currentStage.appUrl = Stage_Staging.appUrl;\n        break;\n      case 'Logica2':\n        // newProfile = Profile_Logica_2;\n        if (patientFhirId === '') {\n          setShowMessageToast(false);\n          return;\n        }\n        newProfile = await retrievePatientInfo(patientFhirId);\n        if (newProfile === null) {\n          setToastMessage('Invalid patient FHIR ID');\n          setProgress('error');\n          //setShowMessageToast(false);\n          return;\n        }\n        if (currentStage.name === 'poc')\n          currentStage.appUrl = Stage_POC.appUrl2;\n        break;\n      case 'Epic2':\n        newProfile = Profile_Epic_2;\n        if (currentStage.name === 'poc')\n          currentStage.appUrl = Stage_POC.appUrl2;\n        break;\n      default:\n        newProfile = Profile_Epic;\n        if (currentStage.name === 'poc')\n          currentStage.appUrl = Stage_POC.appUrl2;\n    }\n    setPatient(newProfile.defaultPatient);\n    setProvider(newProfile.defaultProvider);\n    setBaseUrl(newProfile.defaultBaseUrl);\n    if (newProfile.name === 'Logica' || newProfile.name === 'Logica2') {\n      setAccessToken(patientFhirId);\n    } else {\n      let token = await getAccessToken();\n      setAccessToken(token);\n    }\n\n    setShowMessageToast(false);\n    setProgress('0%');\n    //setToastMessage(\"\");\n  };\n\n  const switchStage = async (stageName) => {\n    let newStage = currentStage;\n    switch (stageName) {\n      case 'training':\n        newStage = Stage_Training;\n        break;\n      case 'staging':\n        newStage = Stage_Staging;\n        break;\n      case 'poc':\n        newStage = Stage_POC;\n        if (currentProfileName === 'Logica')\n          newStage.appUrl = Stage_Staging.appUrl;\n        else newStage.appUrl = Stage_POC.appUrl2;\n        break;\n      default:\n        newStage = defaultStage;\n    }\n    console.log('Switch to stage: ', newStage);\n    setCurrentStage(newStage);\n    setCurrentStageBaseUrl(newStage.baseUrl);\n    await changeCurrentEncounter(currentEncounter, baseUrl);\n  };\n\n  const refreshProfileSettings = async () => {\n    const encounterList = await getEncounters(patient.fhirId, baseUrl);\n    if (encounterList?.length > 0) {\n      await changeCurrentEncounter(encounterList[0].resource.id, baseUrl);\n    }\n  };\n\n  // Create a referral\n  const createReferral = async (referral) => {\n    setProgress('0%');\n    setToastMessage('Sending create requests ... ');\n    setShowMessageToast(true);\n\n    console.log('create referral: ', referral);\n    const nowISO = new Date().toISOString();\n\n    // Create ServiceRequest\n    let url = baseUrl + '/ServiceRequest';\n    let resource = {\n      resourceType: 'ServiceRequest',\n      status: 'active',\n      intent: 'plan',\n      category: [\n        {\n          coding: [\n            {\n              system: 'http://snomed.info/sct',\n              code: '307835004',\n              display: 'Referral by service',\n            },\n          ],\n          text: 'Referral by service',\n        },\n      ],\n      priority: 'routine',\n      subject: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + ', ' + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      authoredOn: nowISO,\n      requester: [\n        {\n          reference: `Practitioner/${provider.fhirId}`,\n          display: provider.firstName + ' ' + provider.lastName,\n        },\n      ],\n      /*       orderDetail: {\n        text: referral.serviceType.text,\n        coding: [\n          {\n            system: 'Unite Us',\n            code: referral.serviceType.value,\n            display: referral.serviceType.text,\n          },\n        ],\n      }, */\n    };\n\n    if (referral.attachDocument && sampleDocumentReference.length > 0) {\n      resource.supportingInfo = [\n        {\n          reference: `DocumentReference/${sampleDocumentReference}`,\n        },\n      ];\n    }\n\n    let res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(resource),\n    });\n\n    let data = await res.json();\n    let newServiceRequestId = data.id;\n    console.log('server request id: ', newServiceRequestId);\n\n    // Create Task\n    url = baseUrl + '/Task';\n    resource = {\n      resourceType: 'Task',\n      basedOn: [\n        {\n          reference: `ServiceRequest/${newServiceRequestId}`,\n        },\n      ],\n      status: 'requested',\n      intent: 'plan',\n      priority: 'routine',\n      for: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + ', ' + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      authoredOn: nowISO,\n      lastModified: nowISO,\n      requester: [\n        {\n          reference: `Practitioner/${provider.fhirId}`,\n          display: provider.firstName + ' ' + provider.lastName,\n        },\n      ],\n      // description:\n      //   referral.description +\n      //   \"/n referred to : \" +\n      //   referral.referredToGroupIds.text +\n      //   \" [\" +\n      //   referral.referredToGroupIds.value +\n      //   \"]\",\n      owner: {\n        reference: `Organization/${referral.referredToGroupIds.value}`,\n        display: referral.referredToGroupIds.text,\n      },\n    };\n\n    setProgress('5%');\n\n    res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(resource),\n    });\n\n    data = await res.json();\n    let newTaskId = data.id;\n    console.log('Task id: ', newTaskId);\n\n    // Create initial Communication\n    url = baseUrl + '/Communication';\n    resource = {\n      resourceType: 'Communication',\n      basedOn: [\n        {\n          reference: `ServiceRequest/${newServiceRequestId}`,\n        },\n      ],\n      partOf: [\n        {\n          reference: `Task/${newTaskId}`,\n        },\n      ],\n      status: 'in-progress',\n      subject: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + ', ' + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      sent: nowISO,\n      recipient: [\n        {\n          reference: `Organization/${referral.referredToGroupIds.value}`,\n          display: referral.referredToGroupIds.text,\n        },\n      ],\n      sender: {\n        reference: `Practitioner/${provider.fhirId}`,\n        display: provider.firstName + ' ' + provider.lastName,\n      },\n    };\n\n    resource.payload = [];\n    if (referral.description.length > 0) {\n      resource.payload = [\n        {\n          contentString: referral.description,\n        },\n      ];\n    }\n\n    if (referral.attachDocument && sampleDocumentReference.length > 0) {\n      resource.payload = [\n        ...resource.payload,\n        {\n          contentReference: {\n            reference: `DocumentReference/${sampleDocumentReference}`,\n          },\n        },\n      ];\n    }\n\n    res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(resource),\n    });\n\n    data = await res.json();\n    let newCommunicationId = data.id;\n    console.log('Communication id: ', newCommunicationId);\n\n    await getReferrals();\n\n    setProgress('100%');\n    setShowMessageToast(false);\n  };\n\n  const fetchReferrals = async (\n    encounterId = currentEncounter,\n    referralBaseUrl = baseUrl\n  ) => {\n    // fetching Task + ServiceRequest\n    //setToastMessage(\"Fetching FHIR resources: \\n Tasks ... \\n ServiceRequests ... \");\n    setToastMessage(defaultToastMessage);\n    setProgress('10%');\n\n    const url =\n      referralBaseUrl +\n      '/Task?encounter=' +\n      encounterId +\n      '&_include=Task%3Apatient&_include=Task%3Aencounter&_include=Task%3Arequester&_include=Task%3A' +\n      'based-on' + //(currentProfileName === \"Epic\" ? \"basedon\" : \"based-on\") + \"%3AServiceRequest\" +\n      '&_include=Task%3Aowner%3AOrganization';\n\n    const res = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        Authorization:\n          accessToken?.length > 0 &&\n          currentProfileName.substring(0, 6) !== 'Logica'\n            ? 'bearer ' + accessToken\n            : '',\n      },\n    });\n    const data = await res.json();\n    let entryList = data.total === 0 ? [] : data.entry;\n    if (!entryList) return [];\n    console.log('Task bundle received: ', entryList);\n\n    // //_include works at Epic, no need to fetch ServiceRequest seperatedly\n    // const url2 = baseUrl + \"/ServiceRequest?encounter=\" + encounterId;\n    // const res2 = await fetch(url2, {\n    //   method: \"GET\",\n    //   headers: {\n    //     \"Content-type\": \"application/json\",\n    //     Accept: \"application/json\",\n    //     Authorization: accessToken.length > 0 ? \"bearer \" + accessToken : \"\",\n    //   },\n    // });\n    // const data2 = await res2.json();\n    // let entryList2 = data2.total === 0 ? [] : data2.entry;\n    // entryList = entryList.concat(entryList2);\n\n    //filter ServiceRequest and Task\n    // if (entryList.length > 0) {\n    //   entryList = entryList.filter((entry) => {\n    //     return (\n    //       entry.resource.resourceType === \"ServiceRequest\" ||\n    //       entry.resource.resourceType === \"Task\"\n    //     );\n    //   });\n    // }\n\n    // Take all the Task\n    let referralList = [];\n    entryList.forEach((entry, index) => {\n      if (entry.resource.resourceType === 'Task') {\n        let referral = {\n          id: 'Task/' + entry.resource.id,\n          Task: entry,\n        };\n        referralList.push(referral);\n      }\n    });\n\n    // Group the other resources with the Task\n    referralList.forEach((referral, index) => {\n      const resource = referral?.Task?.resource;\n      if (!resource) return;\n\n      const patientId = resource.for?.reference;\n      const serviceRequestId = resource.basedOn[0].reference;\n      const practitionerId = resource.requester?.reference;\n      const organizationId = resource.owner?.reference;\n\n      entryList.forEach((entry, index) => {\n        let entryId = entry.resource.id;\n        switch (entry.resource.resourceType) {\n          case 'ServiceRequest': {\n            if (serviceRequestId === `ServiceRequest/${entryId}`)\n              referral.ServiceRequest = entry;\n            break;\n          }\n          case 'Patient': {\n            if (patientId === `Patient/${entryId}`) referral.Patient = entry;\n            break;\n          }\n          case 'Organization': {\n            if (organizationId === `Organization/${entryId}`)\n              referral.Organization = entry;\n            break;\n          }\n          case 'Practitioner': {\n            if (practitionerId === `Practitioner/${entryId}`)\n              referral.Practitioner = entry;\n            break;\n          }\n          default:\n        }\n      });\n    });\n\n    // Fetch Communications for each Task\n    //setToastMessage((a) => { return a + \"\\n Communications ... \"});\n    setProgress('40%');\n    for (let referral of referralList) {\n      const referralId = referral?.Task?.resource?.id;\n      const communications = await fetchCommunications(referralId);\n\n      referral.Communication = communications.entry;\n\n      if (referral.Communication == null) continue;\n      for (let communication of referral.Communication) {\n        communication.received = await checkCommunication(\n          communication.resource.id\n        );\n      }\n    }\n\n    // Fetch DocumentReferences for each ServiceRequest\n    //setToastMessage((a) => { return a + \"\\n DocumentReferences ... \"});\n    setProgress('70%');\n    for (let referral of referralList) {\n      const documentReferences = await fetchDocumentReferences(referral);\n      if (documentReferences?.length > 0) {\n        referral.DocumentReference = documentReferences;\n        setSampleDocumentReference(referral.DocumentReference[0].id);\n        console.log('documentReference', referral.DocumentReference);\n        console.log('sampleDocumentReference', sampleDocumentReference);\n      }\n    }\n\n    // Fetch Binaries for all DocumentReferences\n    //setToastMessage((a) => { return a + \"\\nBinaries ... \"});\n    setProgress('85%');\n    for (let referral of referralList) {\n      if (referral.DocumentReference?.length > 0) {\n        const binaryList = await fetchBinaries(referral.DocumentReference);\n        if (binaryList?.length > 0) {\n          referral.Binary = binaryList;\n        }\n      }\n    }\n\n    setProgress('95%');\n    // look up referral UUID in AWS DDB\n    for (let referral of referralList) {\n      if (referral.Task?.resource?.id) {\n        const trackingItem = await lookupUUReferralId(\n          `${baseUrl}/Task/${referral.Task?.resource?.id}`\n        );\n        if (trackingItem) referral.trackingItem = trackingItem;\n      }\n    }\n\n    //referralList = referralList.filter((entry) => {\n    //  return entry.Task;\n    //});\n\n    // Fetch Consents\n    //if (currentProfileName === \"Epic\") {\n    //setToastMessage((a) => { return a + \"\\n Consents ... \"});\n    const consentList = await fetchConsents();\n    if (consentList?.length > 0) {\n      referralList.forEach((entry, index) => {\n        entry.Consent = consentList;\n      });\n    }\n    //}\n\n    console.log('referral list', referralList);\n    referralList.sort((a, b) => {\n      const timeA = new Date(a.ServiceRequest.resource.authoredOn).getTime();\n      const timeB = new Date(b.ServiceRequest.resource.authoredOn).getTime();\n      return timeB - timeA;\n    });\n\n    setProgress('100%');\n    return referralList;\n  };\n\n  const fetchEncounters = async (\n    patientId = patient.fhirId,\n    encounterBaseUrl = baseUrl\n  ) => {\n    const url = encounterBaseUrl + '/Encounter?patient=' + patientId;\n    const res = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        Authorization:\n          accessToken?.length > 0 &&\n          currentProfileName.substring(0, 6) !== 'Logica'\n            ? 'bearer ' + accessToken\n            : '',\n      },\n    });\n    const data = await res.json();\n\n    const encounterList = data.total > 0 ? data.entry : [];\n\n    encounterList.sort((a, b) => {\n      const timeA = new Date(a.resource?.period?.start).getTime();\n      const timeB = new Date(b.resource?.period?.start).getTime();\n      return timeB - timeA;\n    });\n    console.log('encounter', encounterList);\n    return encounterList;\n  };\n\n  // Fetch Communications for a Task\n  const fetchCommunications = async (taskId) => {\n    const url = baseUrl + '/Communication?part-of=' + taskId;\n\n    const res = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        Authorization:\n          accessToken?.length > 0 &&\n          currentProfileName.substring(0, 6) !== 'Logica'\n            ? 'bearer ' + accessToken\n            : '',\n      },\n    });\n    const data = await res.json();\n    console.log('communications: ', data);\n    return data;\n  };\n\n  const checkCommunication = async (fhirId) => {\n    const url = `${currentStageBaseUrl}/mockapi/communication/read`;\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': currentStage.token,\n      },\n      body: JSON.stringify({\n        fullUrl: baseUrl + '/Communication/' + fhirId,\n      }),\n    });\n    const data = await res.json();\n    const item = data?.response?.item;\n    console.log('check communication ', fhirId, ' result ', item === undefined);\n    return item === undefined;\n  };\n\n  // Fetch DocumentReferences for a ServiceRequest\n  const fetchDocumentReferences = async (referral) => {\n    const documentList = [];\n    const supportingInfo = referral?.ServiceRequest?.resource?.supportingInfo;\n\n    if (!supportingInfo) return documentList;\n\n    for (let entry of supportingInfo) {\n      const url = baseUrl + '/' + entry.reference;\n      const res = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json',\n          Accept: 'application/json',\n          Authorization:\n            accessToken?.length > 0 &&\n            currentProfileName.substring(0, 6) !== 'Logica'\n              ? 'bearer ' + accessToken\n              : '',\n        },\n      });\n      const data = await res.json();\n      console.log('documentReference: ', data);\n      if (data?.resourceType === 'DocumentReference') documentList.push(data);\n    }\n\n    return documentList;\n  };\n\n  // Fetch DocumentReferences for a ServiceRequest\n  const fetchBinaries = async (documentReferenceList) => {\n    const binaryList = [];\n\n    if (!documentReferenceList) return binaryList;\n\n    for (let entry of documentReferenceList) {\n      const url = baseUrl + '/' + entry.content[0]?.attachment?.url;\n      const res = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json',\n          Accept: 'application/fhir+json',\n          Authorization:\n            accessToken?.length > 0 &&\n            currentProfileName.substring(0, 6) !== 'Logica'\n              ? 'bearer ' + accessToken\n              : '',\n        },\n      });\n      const data = await res.json();\n      if (data?.resourceType === 'Binary') {\n        binaryList.push(data);\n      }\n    }\n\n    return binaryList;\n  };\n\n  // Fetch Consent for a Patient\n  const fetchConsents = async (\n    patientFhirId = patient.fhirId,\n    category = currentProfileName === 'Logica' ||\n    currentProfileName === 'Logica2'\n      ? '64292-6'\n      : 'http://loinc.org|64292-6',\n    status = 'active'\n  ) => {\n    const url = `${baseUrl}/Consent?patient=${patientFhirId}&category=${category}&status=${status}`;\n    const res = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        Authorization:\n          accessToken?.length > 0 &&\n          currentProfileName.substring(0, 6) !== 'Logica'\n            ? 'bearer ' + accessToken\n            : '',\n      },\n    });\n    const data = await res.json();\n    console.log('consent: ', data);\n    return data.entry;\n  };\n\n  const lookupUUReferralId = async (fhirUrl) => {\n    const url = `${currentStageBaseUrl}/mockapi/resource_tracking/read`;\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': currentStage.token,\n      },\n      body: JSON.stringify({\n        full_url: fhirUrl,\n      }),\n    });\n    const data = await res.json();\n    const item = data.response?.item;\n    console.log('Found item: ', item);\n    return item;\n  };\n\n  const changeCurrentEncounter = async (encounterSelected, currentBaseUrl) => {\n    //if (encounterSelected === currentEncounter) return;\n    setProgress('0%');\n    setToastMessage(defaultToastMessage);\n    setShowMessageToast(true);\n\n    setCurrentEncounter(encounterSelected);\n    await getReferrals(encounterSelected, currentBaseUrl);\n\n    setShowMessageToast(false);\n    setProgress('0%');\n    //setToastMessage(\"\");\n\n    return;\n  };\n\n  const getReferrals = async (encounterSelected, referralBaseUrl) => {\n    const data = await fetchReferrals(encounterSelected, referralBaseUrl);\n    setReferrals(data);\n  };\n\n  const getEncounters = async (patientId, encounterBaseUrl) => {\n    setProgress('0%');\n    setShowMessageToast(true);\n\n    const data = await fetchEncounters(patientId, encounterBaseUrl);\n    setEncounters(data);\n\n    setShowMessageToast(false);\n    setProgress('0%');\n    //setToastMessage(\"\");\n\n    return data;\n  };\n\n  const sendUUNotification = async (fhirId, type) => {\n    setToastMessage(`Sending ${type} notification to Unite Us ... `);\n    setProgress('25%');\n    setShowMessageToast(true);\n\n    const notification = {\n      resourceType: 'Bundle',\n      type: 'Event',\n      entry: [\n        {\n          fullUrl: baseUrl + '/' + type + '/' + fhirId,\n        },\n      ],\n    };\n    const url = `${currentStageBaseUrl}/FhirNotificationWebService`;\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'x-api-key': currentStage.token,\n      },\n      body: JSON.stringify(notification),\n    });\n\n    setProgress('80%');\n\n    const data = await res.json();\n\n    console.log('notification response: ', data);\n    setProgress('100%');\n    setToastMessage(data.statusCode + ': ' + data.message);\n    setProgress('hide');\n\n    return data;\n  };\n\n  /* const sendCommunicationNotification = async (fhirId) => {\n    setToastMessage('Sending communication notification to Unite Us ... ');\n    setProgress('25%');\n    setShowMessageToast(true);\n\n    const notification = {\n      resourceType: 'Bundle',\n      type: 'Event',\n      entry: [\n        {\n          fullUrl: baseUrl + '/Communication/' + fhirId,\n        },\n      ],\n    };\n    const url =\n      `${currentStageBaseUrl}/FhirNotificationWebService`;\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'x-api-key': 'sfsdfddfdsfsdfs32342343',\n      },\n      body: JSON.stringify(notification),\n    });\n\n    setProgress('80%');\n\n    const data = await res.json();\n\n    console.log('notification response: ', data);\n    setProgress('100%');\n    setToastMessage(data.statusCode + ': ' + data.message);\n    setProgress('hide');\n\n    return data;\n  }; */\n\n  const sendNotificationUU = async () => {\n    setToastMessage('Sending encounter notification to Unite Us ... ');\n    setProgress('25%');\n    setShowMessageToast(true);\n\n    const url = `${currentStageBaseUrl}/FhirNotificationWebService`;\n    const notification = {\n      resourceType: 'Bundle',\n      type: 'Event',\n      entry: [\n        {\n          fullUrl: baseUrl + '/Encounter/' + currentEncounter,\n        },\n      ],\n    };\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'x-api-key': currentStage.token, //\"wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03\",\n      },\n      body: JSON.stringify(notification),\n    });\n    setProgress('80%');\n    const data = await res.json();\n    console.log('notification response: ', data);\n    setProgress('100%');\n    setToastMessage(data.statusCode + ': ' + data.message);\n    setProgress('hide');\n    return data;\n  };\n\n  const getAccessToken = async () => {\n    const url = `${currentStageBaseUrl}/mockapi/authentication/token`;\n    const res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': currentStage.token, //\"wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03\",\n      },\n      body: JSON.stringify({\n        privateKey: null,\n      }),\n    });\n    const data = await res.json();\n    const token = data.body['access_token'];\n    console.log('access token ', token);\n    return token;\n  };\n\n  const updateReferralStatus = async (taskFhirId, newStatus) => {\n    console.log('new status: ', newStatus);\n    setProgress('0%');\n    setToastMessage('Updating Task Status ...');\n    setShowMessageToast(true);\n\n    // fetch the Task first\n    let url = `${currentStageBaseUrl}/mockapi/request/read`;\n    let res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': currentStage.token,\n      },\n      body: JSON.stringify({\n        baseUrl: baseUrl,\n        resourceType: 'Task',\n        resourceId: taskFhirId,\n      }),\n    });\n    let data = await res.json();\n    let task = data.response.body;\n    let headers = data.response.headers;\n    let eTag =\n      currentProfileName === 'Logica' || currentProfileName === 'Logica2'\n        ? headers['etag'][0]\n        : headers['e-tag'][0];\n    console.log('task: ', task);\n    console.log('headers', headers);\n\n    setProgress('5%');\n    // update status and match header\n    task.status = newStatus.value;\n    let epicCode = mapToEpicCode(newStatus.rejectReason.reason.text);\n    if (newStatus.value === 'rejected') {\n      task.statusReason = {\n        coding: [\n          {\n            system:\n              currentProfileName.substring(0, 6) === 'Logica'\n                ? 'HTTPS://UNITEUS.COM/IO/STRUCTUREDEFINITION/STATUS-REASON'\n                : 'urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025',\n            code: epicCode.code,\n            display: epicCode.display,\n          },\n        ],\n        text: `${newStatus.rejectReason.reason.value}. ${newStatus.rejectReason.note}`,\n      };\n    }\n    console.log('new task: ', task);\n\n    // send Task update requester\n    url = `${currentStageBaseUrl}/mockapi/request/update`;\n    res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json',\n        'x-api-key': currentStage.token,\n      },\n      body: JSON.stringify({\n        baseUrl: baseUrl,\n        resourceType: 'Task',\n        resourceId: taskFhirId,\n        etag: eTag,\n        resource: task,\n      }),\n    });\n\n    setProgress('10%');\n    setToastMessage('Retrieving FHIR Resources ...');\n    await getReferrals(currentEncounter, baseUrl);\n    setShowMessageToast(false);\n    setProgress('0%');\n    return;\n  };\n\n  const mapToEpicCode = (uuCode) => {\n    switch (uuCode) {\n      case 'Not Eligible':\n        return {\n          system: 'urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025',\n          code: '104',\n          display:\n            'Patient does not meet the level of care required for admission',\n        };\n      case 'No Capacity':\n        return {\n          system: 'urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025',\n          code: '101',\n          display: 'Facility Full',\n        };\n      case 'Do Not Provide Service':\n        return {\n          system: 'urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025',\n          code: '103',\n          display: \"Facility cannot provide for patient's needs\",\n        };\n      case 'Duplicate':\n      case 'Unable to Contact Client':\n      case 'Other':\n      default:\n        return {\n          system: 'urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025',\n          code: '99',\n          display: 'Other (Comment)',\n        };\n    }\n  };\n\n  useEffect(() => {\n    const setProfile = async (profileName) => {\n      await switchProfile(profileName);\n    };\n\n    setProfile(defaultProfileName);\n  }, []);\n\n  useEffect(() => {\n    const updateFhir = async () => {\n      await refreshProfileSettings();\n    };\n\n    updateFhir();\n  }, [accessToken]);\n\n  return (\n    <div className=\"App\">\n      <Header\n        patient={patient}\n        provider={provider}\n        profileName={currentProfileName}\n        switchProfile={switchProfile}\n        stageName={currentStage.name}\n        switchStage={switchStage}\n      />\n\n      <div\n        className={\n          showMessageToast\n            ? progress === 'error'\n              ? 'toast bg-danger text-secondary show'\n              : progress === 'hide'\n              ? 'toast bg-info text-secondary show'\n              : 'toast bg-warning text-secondary show'\n            : 'toast'\n        }\n        role=\"alert\"\n        aria-live=\"assertive\"\n        aria-atomic=\"true\"\n        id=\"messageToast\"\n      >\n        <div className=\"toast-header\">\n          {progress === 'error' ? (\n            <strong className=\"me-auto\">Error</strong>\n          ) : progress === 'hide' ? (\n            <strong className=\"me-auto\">Success</strong>\n          ) : (\n            <strong className=\"me-auto\">Please Wait ...</strong>\n          )}\n          <button\n            type=\"button\"\n            class=\"btn-close\"\n            data-bs-dismiss=\"messageToast\"\n            aria-label=\"Close\"\n            onClick={() => {\n              setShowMessageToast(false);\n            }}\n          ></button>\n        </div>\n        <div className=\"toast-body\">\n          {toastMessage}\n          {progress === 'hide' || progress === 'error' ? null : (\n            <>\n              <div className=\"spinner-border text-warning\" role=\"status\">\n                <span className=\"visually-hidden\">...</span>\n              </div>\n              <div className=\"progress my-2\">\n                <div\n                  className=\"progress-bar bg-warning progress-bar-striped progress-bar-animated\"\n                  role=\"progressbar\"\n                  style={{ width: progress }}\n                  aria-valuenow=\"0\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                ></div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n\n      <div className=\"container-fluid px-0\">\n        <div className=\"row mt-0 mx-0\">\n          <Encounters\n            encounterList={encounters}\n            currentEncounter={currentEncounter}\n            changeCurrentEncounter={changeCurrentEncounter}\n            refreshEncounters={getEncounters}\n          />\n          <Referrals\n            onCreate={createReferral}\n            referralList={referrals}\n            currentEncounter={currentEncounter}\n            sendNotificationUU={sendNotificationUU}\n            profileName={currentProfileName}\n            updateReferralStatus={updateReferralStatus}\n            baseUrl={baseUrl}\n            sendUUNotification={sendUUNotification}\n            currentStage={currentStage}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}