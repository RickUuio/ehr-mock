{"version":3,"sources":["components/Patient.js","components/Provider.js","components/ProfileSelector.js","components/Header.js","components/Encounters.js","components/EncounterSummary.js","components/CreateReferral.js","components/ReferralSummary.js","components/StatusSelector.js","components/AddNote.js","components/Referrals.js","components/Profiles.js","App.js","reportWebVitals.js","index.js"],"names":["Patient","patient","className","style","color","firstName","lastName","dob","gender","mrn","fhirId","Provider","provider","uuid","ProfileSelector","profileName","switchProfile","role","aria-label","id","type","name","autoComplete","defaultChecked","onClick","htmlFor","Header","title","defaultProps","Encounters","encounterList","currentEncounter","changeCurrentEncounter","refreshEncounters","console","log","length","map","encounter","index","selected","resource","eClassName","visible","encounterSelected","href","fullUrl","period","start","split","class","display","EncounterSummary","toggleShowNewReferral","showNewReferral","sendNotificationUU","toggle","disabled","CreateReferral","onCreate","useState","referredToGroupIds","setReferredToGroupIds","referredFromGroupId","setReferredFromGroupId","networkId","setNetworkId","serviceType","setServiceType","description","setDescription","attachDocument","setAttachDocument","onSubmit","e","preventDefault","alert","placeholder","readOnly","value","onChange","target","text","options","selectedIndex","rows","cols","checked","for","ReferralSummary","referral","showFhirSource","editReferralStatus","showAddNoteWindow","expandReferralId","setExpandReferralId","showSource","fullJson","findUUID","identifier","find","entry","system","toUpperCase","expandStatus","referralId","status","rowColor","Task","data-bs-toggle","data-bs-target","ServiceRequest","aria-expanded","aria-controls","authoredOn","data-bs-placement","currentStatus","orderDetail","owner","Communication","trackingItem","core_referral_id","rel","pop","colSpan","scoope","resourceType","Practitioner","requester","supportingInfo","DocumentReference","lastModified","Organization","family","given","Consent","consent","scope","provision","end","documentReference","Binary","binary","contentType","download","data","communication","sent","sender","recipient","payload","contentString","contentReference","StatusSelector","showReferralStatus","currentReferralStatus","closeReferralStatusEdit","newReferralStatus","setNewReferralStatus","rejectReason","setRejectReason","rejectReasonNote","setRejectReasonNote","enforceBusinessRule","setEnforceBusinessRule","closeStatusEdit","changeStatus","newStatus","statusEnabled","stageColor","stage","colorDone","newStage","Modal","size","show","onHide","closeButton","Title","Body","rowSpan","display_name","option","Footer","Button","variant","reason","note","AddNote","showAddNote","closeAddNote","baseUrl","noteText","setNoteText","callResponse","setCallResponse","refreshCount","setRefreshCount","showMessageToast","setShowMessageToast","communicationList","setCommunicationList","waitMessage","setWaitMessage","useEffect","updateList","a","fetch","method","headers","Accept","body","JSON","stringify","queryParams","res","json","response","total","sendNote","sentAt","Math","floor","Date","now","reference","noteColor","noteAlign","responseTo","recipients","responseToStr","forEach","closeAddNoteWindow","backgroundColor","opacity","aria-live","aria-atomic","calssName","Referrals","referralList","updateReferralStatus","setShowNewReferral","setShowSource","setShowReferralStatus","setFullJson","setCurrentReferralStatus","editReferralId","setEditReferralId","setShowAddNote","currentReferral","setCurrentReferral","closeWindow","undefined","Profile_Epic","defaultPatient","defaultProvider","groupId","defaultEncounter","defaultDocumentReference","defaultBaseUrl","defaultNotificationUrl","accessToken","Profile_Epic_2","Profile_Logica","App","defaultProfile","defaultProfileName","currentProfileName","setCurrentProfileName","setPatient","setProvider","setCurrentEncounter","access_token","setAccessToken","setBaseUrl","notificationUrl","setNotificationUrl","referrals","setReferrals","encounters","setEncounters","sampleDocumentReference","setSampleDocumentReference","defaultToastMessage","toastMessage","setToastMessage","progress","setProgress","newProfile","getAccessToken","token","refreshProfileSettings","getEncounters","createReferral","nowISO","toISOString","url","intent","category","coding","code","priority","subject","newServiceRequestId","basedOn","newTaskId","partOf","newCommunicationId","getReferrals","fetchReferrals","encounterId","referralBaseUrl","Authorization","entryList","push","patientId","serviceRequestId","practitionerId","organizationId","entryId","fetchCommunications","communications","fetchDocumentReferences","documentReferences","fetchBinaries","binaryList","lookupUUReferralId","fetchConsents","consentList","sort","b","timeA","getTime","fetchEncounters","encounterBaseUrl","taskId","documentList","documentReferenceList","content","attachment","patientFhirId","fhirUrl","full_url","item","currentBaseUrl","notification","statusCode","message","privateKey","taskFhirId","resourceId","task","eTag","epicCode","mapToEpicCode","statusReason","etag","uuCode","setProfile","updateFhir","data-bs-dismiss","width","aria-valuenow","aria-valuemin","aria-valuemax","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5871a2a1.chunk.js","sourcesContent":["import { FaRegUser } from \"react-icons/fa\";\n\nconst Patient = ({patient}) => {\n  return (\n    <div className=\"p-2\">\n      <h4 style = {{ color: \"yellow\"}}>\n          <FaRegUser />\n          {patient.firstName} {patient.lastName}\n      </h4>\n      <h6>\n      <span className='badge bg-light text-dark'>DOB</span> : {patient.dob}\n      <span>    </span> \n      <span className='badge bg-light text-dark'>Gender</span> : {patient.gender}\n      </h6>\n      <h6><span className='badge bg-light text-dark'>MRN</span> : {patient.mrn}</h6>\n      <h6><span className='badge bg-light text-dark'>FHIR ID</span> : {patient.fhirId}</h6>\n    </div>\n  );\n};\n\nexport default Patient;\n","import { FaUserMd } from \"react-icons/fa\";\n\nconst Provider = ({ provider }) => {\n  return (\n    <div className=\"p-2\">\n      <h4 style={{ color: \"HotPink\" }}>\n        {provider.firstName} {provider.lastName} <FaUserMd></FaUserMd>\n      </h4>\n      <h6><span className='badge bg-light text-dark'>FHIR ID</span> : {provider.fhirId}</h6>\n      <h6><span className='badge bg-light text-dark'>UUID </span> : {provider.uuid}</h6>\n    </div>\n  );\n};\n\nexport default Provider;\n","const ProfileSelector = ({ profileName, switchProfile }) => {\n  return (\n    <div className=\"btn-group mb-2\" role=\"group\" aria-label=\"Profile selector\" id=\"profileGroup\">\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnProfile\"\n        id=\"profileEpic\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === \"Epic\"}\n        onClick={() => {\n          profileName = \"Epic\";\n          switchProfile(\"Epic\");\n        }}\n      />\n      <label className=\"btn btn-outline-danger\" htmlFor=\"profileEpic\">\n        Calvin @Epic\n      </label>\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnProfile\"\n        id=\"profileEpic2\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === \"Epic2\"}\n        onClick={() => {\n          profileName = \"Epic2\";\n          switchProfile(\"Epic2\");\n        }}\n      />\n      <label className=\"btn btn-outline-danger\" htmlFor=\"profileEpic2\">\n        Beverly @Epic\n      </label>\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnProfile\"\n        id=\"profileLogica\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === \"Logica\"}\n        onClick={() => {\n          profileName = \"Logica\";\n          switchProfile(\"Logica\");\n        }}\n      />\n      <label className=\"btn btn-outline-info\" htmlFor=\"profileLogica\">\n        Beverly @Logica\n      </label>\n    </div>\n  );\n};\n\nexport default ProfileSelector;\n","import PropTypes from \"prop-types\";\nimport Patient from \"./Patient\";\nimport Provider from \"./Provider\";\nimport ProfileSelector from \"./ProfileSelector\";\nimport { FaFire } from \"react-icons/fa\";\n\nconst Header = ({ title, patient, provider, profileName, switchProfile }) => {\n  return (\n    <header>\n      <div id=\"navbarTop\">\n        <div className=\"row\">\n          <div className=\"col-lg-6 col-md-12 order-lg-2\">\n            <h2 className=\"pt-4\">\n              <FaFire style={{ color: \"#d60c05ee\" }} /> {title}\n            </h2>\n            <ProfileSelector profileName = {profileName} switchProfile = {switchProfile} />\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 order-lg-1\">\n            <Patient patient={patient} />\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 order-lg-3\">\n            <Provider provider={provider} />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: \"Mock EHR : : Social Care Referrals\",\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n// const headingStyle = {\n//   color: \"white\",\n//   backgroundColor: \"#2c405a\",\n// };\n\nexport default Header;\n","import {FcRefresh} from 'react-icons/fc'\nimport {FaCalendarCheck} from 'react-icons/fa'\n\nconst Encounters = ({ encounterList, currentEncounter = 'smart-2', changeCurrentEncounter, refreshEncounters }) => {\n  const refresh = () => {\n    console.log(\"Retrieving patient's encounters\");\n    refreshEncounters();\n  };\n\n  const setCurrentEncounter = (encounterSelected) => {\n    changeCurrentEncounter(encounterSelected)\n  }\n\n  return (\n    <div className=\"encounter col-md-3 col-lg-2 mx-0 px-0\">\n      <div\n        className=\"btn btn-default btn-lg btn-block table-hover mx-0\"\n        onClick={refresh}\n      >\n        All Encounters\n        <div className=\"badge bg-primary mx-2\">{encounterList.length}</div>\n        <FcRefresh />\n      </div>\n\n      <dl>\n        {encounterList.map((encounter, index) => {\n          const selected = (encounter.resource.id === currentEncounter)\n          const eClassName = selected\n            ? \"row list-hover m-0 px-2 text-break selected\"\n            : \"row list-hover m-0 px-2 text-break\";\n          const visible = selected\n            ? \"visible\"\n            : \"invisible\";\n\n            return <div key={index} className={eClassName} onClick={() => setCurrentEncounter(encounter.resource.id)}>\n            <dt>\n              <a href={encounter.fullUrl}>{encounter.resource.id} <FaCalendarCheck className={visible} /></a>\n            </dt>\n            <dd>\n              { <div>{encounter.resource.period.start.split(\"T\")[0]}</div> }\n              { <div> {encounter.resource.class.display}</div> }\n            </dd>\n          </div>\n        }\n        )\n      }\n      </dl>\n    </div>\n  );\n};\n\nexport default Encounters;\n","const EncounterSummary = ({\n  toggleShowNewReferral,\n  showNewReferral,\n  currentEncounter,\n  sendNotificationUU,\n  profileName,\n}) => {\n  const toggle = () => {\n    toggleShowNewReferral();\n  };\n\n  const sendNotification = () => {\n    console.log(\"sending an encounter notification to Unite Us...\");\n    sendNotificationUU();\n  };\n\n  return (\n    <div className=\"encounterSummary\">\n      <div className=\"row pt-2 row-cols-1 row-cols-lg-3\">\n        <div className=\"col mx-auto text-break\">\n          <h4>Current Encounter: {currentEncounter}</h4>\n        </div>\n        <div className=\"col\">\n        {!showNewReferral ? (\n          \n          <button\n            className=\"btn btn-primary btn-block mx-1\"\n            onClick={toggle}\n            disabled={profileName === \"Epic\"}\n          >\n            Create New Referral\n          </button>\n     \n        ) : (\n          <button\n            className=\"btn btn-warning btn-block col mx-1\"\n            onClick={toggle}\n          >\n            Cancel New Referral\n          </button>\n        )}\n     </div>\n     <div className=\"col\">\n        <button\n          className=\"btn btn-primary btn-block col mx-1\"\n          onClick={sendNotification}\n        >\n          Send Notification to Unite Us\n        </button>\n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EncounterSummary;\n","import { useState } from \"react\";\nimport { GrAttachment } from \"react-icons/gr\";\n\nexport const CreateReferral = ({ onCreate, toggleShowNewReferral }) => {\n  const [referredToGroupIds, setReferredToGroupIds] = useState(\"\");\n  const [referredFromGroupId, setReferredFromGroupId] = useState(\"\");\n  const [networkId, setNetworkId] = useState(\"\");\n  const [serviceType, setServiceType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [attachDocument, setAttachDocument] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!serviceType) {\n      alert(\"Please select a service for the referral!\");\n      return;\n    }\n\n    onCreate({\n      serviceType,\n      description,\n      referredToGroupIds,\n      referredFromGroupId,\n      networkId,\n      attachDocument,\n    });\n\n    setReferredToGroupIds(\"\");\n    setReferredFromGroupId(\"demo-hospital\");\n    setNetworkId(\"demo-network\");\n    setServiceType(\"\");\n    setDescription(\"\");\n    setAttachDocument(false);\n  };\n\n  const cancelReferralCreation = () => {\n    toggleShowNewReferral();\n  };\n  return (\n    <div className=\"newReferral\">\n      <form className=\"add-form\" onSubmit={onSubmit}>\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SENDING NETWORK</label>\n              <div>\n                <input\n                  className=\"form-select\"\n                  type=\"text\"\n                  placeholder=\"Healthy Demo Network\"\n                  readOnly\n                  disabled\n                  value={networkId}\n                  onChange={(e) => setNetworkId(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label className=\"col-form-label\">RECEIVING NETWORK</label>\n              <div>\n                <input\n                  className=\"form-select\"\n                  type=\"text\"\n                  readOnly\n                  disabled\n                  placeholder=\"Healthy Demo Network\"\n                  value={networkId}\n                  onChange={(e) => setNetworkId(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SENDER</label>\n              <div>\n                <input\n                  className=\"form-select\"\n                  type=\"text\"\n                  readOnly\n                  disabled\n                  placeholder=\"Local Hospital Center\"\n                  value={referredFromGroupId}\n                  onChange={(e) => setReferredFromGroupId(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"col-lg-6\">\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SERVICE TYPE</label>\n              <div>\n                <select\n                  className=\"form-select\"\n                  value={serviceType.value}\n                  onChange={(e) =>\n                    setServiceType({\n                      value: e.target.value,\n                      text: e.target.options[e.target.selectedIndex].text,\n                    })\n                  }\n                >\n                  <option>Select a service ...</option>\n                  <option value=\"f020d616-5016-4fb7-9fad-91d8d99cd7a1\">\n                    Emergency Food\n                  </option>\n                  <option value=\"f6760383-7fc4-442b-b686-fc5055bfec06\">\n                    Emergency Housing\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">RECEIPIENT</label>\n              <div>\n                <select\n                  className=\"form-select\"\n                  value={referredToGroupIds.value}\n                  onChange={(e) =>\n                    setReferredToGroupIds({\n                      value: e.target.value,\n                      text: e.target.options[e.target.selectedIndex].text,\n                    })\n                  }\n                >\n                  <option>Select an organization ...</option>\n                  <option value=\"14742\">Housing California</option>\n                  <option value=\"14733\">River City Food Bank</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">INITIAL COMMUNICATION</label>\n              <div>\n                <textarea\n                  className=\"form-control\"\n                  rows=\"3\"\n                  cols=\"50\"\n                  placeholder=\"Enter a description for the referral\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <div className=\"form-check form-switch mx-2 text-start\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  id=\"flexSwitchCheckDefault\"\n                  checked={attachDocument}\n                  onChange={(e) => setAttachDocument(e.target.checked)}\n                />\n                <label\n                  className=\"form-check-label\"\n                  for=\"flexSwitchCheckDefault\"\n                >\n                  Attach document to the communication{\" \"}\n                  <GrAttachment></GrAttachment>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row d-inline\">\n          <input\n            value=\"Cancel\"\n            className=\"btn btn-warning col-md-6 mt-4\"\n            onClick={cancelReferralCreation}\n            readOnly\n          />\n\n          <input\n            value=\"Submit\"\n            className=\"btn btn-primary col-md-6 mt-4\"\n            onClick={onSubmit}\n            readOnly\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateReferral;\n","import { IoOpenOutline, IoCloudDownloadSharp } from \"react-icons/io5\";\nimport { useState } from \"react\";\n// import { MdExpandLess, MdExpandMore } from \"react-icons/md\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { BiMessageEdit } from \"react-icons/bi\";\n\nfunction ReferralSummary({ referral, showFhirSource, editReferralStatus, showAddNoteWindow }) {\n  const [expandReferralId, setExpandReferralId] = useState(\"\");\n\n  const showSource = (fullJson) => {\n    showFhirSource(fullJson, true);\n  };\n\n  const editStatus = (referralId, currentStatus) => {\n    editReferralStatus(referralId, currentStatus);\n  };\n\n  let findUUID = (resource) => {\n    const cboUUID = resource.identifier.find(\n      (entry) =>\n        entry.system.toUpperCase() ===\n        \"HTTPS://UNITEUS.COM/IO/STRUCTUREDEFINITION/CBO-UUID\"\n    );\n    return cboUUID;\n  };\n\n  const toggleExpand = (referralId) => {\n    if (expandReferralId === referralId) setExpandReferralId(\"\");\n    else setExpandReferralId(referralId);\n  };\n\n  const expandStatus = (referralId) => {\n    return expandReferralId === referralId;\n  };\n\n  const rowColor = (status) => {\n    switch (status) {\n      case \"accepted\":\n        return \"primary\";\n      case \"in-progress\":\n        return \"info\";\n      case \"rejected\":\n        return \"danger\";\n      case \"failed\":\n        return \"danger\";\n      case \"completed\":\n        return \"success\";\n      case \"cancelled\":\n        return \"danger\";\n      default:\n        return \"light\";\n    }\n  };\n\n  return (\n    <>\n      <tr\n        className={\n          \"align-middle table-\" + rowColor(referral.Task?.resource?.status)\n        }\n        data-bs-toggle=\"collapse\"\n        data-bs-target={\"#referral\" + referral.ServiceRequest.resource.id}\n        aria-expanded=\"false\"\n        aria-controls={\"referral\" + referral.ServiceRequest.resource.id}\n        onClick={() => toggleExpand(referral.ServiceRequest.resource.id)}\n        role=\"button\"\n      >\n        <td>{referral.ServiceRequest.resource.authoredOn}</td>\n        <td>\n          <div\n            className=\"btn btn-outline-primary my-0\"\n            data-bs-toggle=\"tooltip\"\n            title=\"Click to edit referral status\"\n            data-bs-placement=\"top\"\n            onClick={() =>\n              editStatus(\n                referral.Task?.resource?.id,\n                referral.Task?.resource?.status\n              )\n            }\n          >\n            {referral.Task?.resource?.status}{\" \"}<FaEdit></FaEdit>\n          </div>\n        </td>\n        <td>\n          {referral.ServiceRequest.resource.orderDetail\n            ? referral.ServiceRequest.resource.orderDetail[0].text\n            : \"Not Confirmed\"}\n        </td>\n        <td>{referral.Task?.resource?.owner?.display}</td>\n        <td>\n          <div role=\"button\" onClick={() =>\n              showAddNoteWindow(referral)\n            }>\n            <div className=\"badge bg-primary\">\n              {referral.Communication?.length || \"0\"}\n            </div>{\" \"}\n            <BiMessageEdit className=\"text-primary \" />\n          </div>\n        </td>\n        {/* <td>\n          <div className=\"form-check form-switch mx-2 text-start\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              role=\"button\"\n              id={\"flexSwitchCheck\" + referral.ServiceRequest.resource.id}\n              checked={expandStatus(referral.ServiceRequest.resource.id)}\n              onChange={() => toggleExpand(referral.ServiceRequest.resource.id)}\n            />\n            <label\n              className=\"form-check-label\"\n              role=\"button\"\n              for={\"flexSwitchCheck\" + referral.ServiceRequest.resource.id}\n            >\n              Fhir Resources{\" \"}\n              {expandStatus(referral.ServiceRequest.resource.id) ? (\n                <MdExpandLess></MdExpandLess>\n              ) : (\n                <MdExpandMore></MdExpandMore>\n              )}\n            </label>\n          </div>\n        </td> */}\n        <td>\n          {referral.trackingItem ? (\n            <a\n              href={`https://app.uniteustraining.com/dashboard/referrals/sent/all/${referral.trackingItem.core_referral_id}`}\n              data-bs-toggle=\"tooltip\"\n              title={referral.trackingItem.core_referral_id}\n              data-bs-placement=\"top\"\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              {\"...\" + referral.trackingItem.core_referral_id.split(\"-\").pop()}\n            </a>\n          ) : null}\n        </td>\n        <td>{expandStatus(referral.ServiceRequest.resource.id) ? \"-\" : \"+\"}</td>\n      </tr>\n      <tr\n        className={\n          expandStatus(referral.ServiceRequest.resource.id)\n            ? \"table-light\"\n            : \"collapse\"\n        }\n        id={\"referral\" + referral.ServiceRequest.resource.id}\n      >\n        <td colSpan=\"7\">\n          <div className=\"row px-3\">\n            <table className=\"table table-sm align-middle text-start\">\n              <tbody>\n                {referral.trackingItem ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() => showSource(referral.trackingItem)}\n                      >\n                        Task Tracking <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      Referral created in Unite Us{\" \"}\n                      <a\n                        href={`https://app.uniteustraining.com/dashboard/referrals/sent/all/${referral.trackingItem.core_referral_id}`}\n                        data-bs-toggle=\"tooltip\"\n                        title={referral.trackingItem.core_referral_id}\n                        data-bs-placement=\"top\"\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                      >\n                        {referral.trackingItem.core_referral_id}\n                      </a>\n                    </td>\n                  </tr>\n                ) : null}\n                <tr>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() =>\n                        showSource(referral.ServiceRequest.resource)\n                      }\n                    >\n                      {referral.ServiceRequest.resource.resourceType}{\" \"}\n                      <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td>\n                    Referral was authored on{\" \"}\n                    <div className=\"btn btn-outline-primary disabled\">\n                      {referral.ServiceRequest.resource.authoredOn}\n                    </div>{\" \"}\n                    by{\" \"}\n                    <div\n                      className=\"btn btn-outline-primary\"\n                      onClick={() => showSource(referral.Practitioner.resource)}\n                    >\n                      {referral.ServiceRequest.resource.requester.display}{\" \"}\n                      <IoOpenOutline />\n                    </div>\n                    .{\" \"}\n                    {referral.ServiceRequest.resource.orderDetail ? (\n                      <span>\n                        {\"Service type is \"}\n                        <div className=\"btn btn-outline-primary disabled\">\n                          {referral.ServiceRequest.resource.orderDetail[0].text}\n                        </div>\n                        .\n                      </span>\n                    ) : (\n                      \"Service type has not been confirmed yet.\"\n                    )}\n                    {referral.ServiceRequest.resource.supportingInfo ? (\n                      <span>\n                        {\" \"}\n                        Attached is a supporting document of\n                        <div\n                          className=\"btn btn-outline-primary\"\n                          onClick={() =>\n                            showSource(referral.DocumentReference[0])\n                          }\n                        >\n                          {referral.DocumentReference[0].type.text}{\" \"}\n                          <IoOpenOutline />\n                        </div>\n                      </span>\n                    ) : null}\n                  </td>\n                </tr>\n                <tr>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() => showSource(referral.Task.resource)}\n                    >\n                      {referral.Task.resource.resourceType} <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td>\n                    <span>\n                      Referral status is{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Task?.resource?.status}\n                      </div>\n                      , last modified on{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Task?.resource?.lastModified}\n                      </div>\n                    </span>{\" \"}\n                    <span>\n                      Recipient is{\" \"}\n                      <div\n                        className=\"btn btn-outline-primary\"\n                        onClick={() =>\n                          showSource(referral.Organization?.resource)\n                        }\n                      >\n                        {referral.Task?.resource?.owner?.display}{\" \"}\n                        <IoOpenOutline />\n                      </div>\n                    </span>\n                  </td>\n                </tr>\n                {referral.Organization ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() =>\n                          showSource(referral.Organization.resource)\n                        }\n                      >\n                        {referral.Organization.resource.resourceType}{\" \"}\n                        <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      <span>\n                        Recipient is{\" \"}\n                        <div className=\"btn btn-outline-primary disabled\">\n                          {referral.Organization.resource.name}\n                        </div>\n                      </span>\n                      {findUUID(referral.Organization.resource) ? (\n                        <span>\n                          Their Unite Us UUID is{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {findUUID(referral.Organization.resource).value}\n                          </div>\n                        </span>\n                      ) : null}\n                    </td>\n                  </tr>\n                ) : null}\n                {referral.Patient ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() => showSource(referral.Patient.resource)}\n                      >\n                        {referral.Patient.resource.resourceType}{\" \"}\n                        <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Patient.resource.name[0].family},{\" \"}\n                        {referral.Patient.resource.name[0].given[0]}\n                      </div>\n                    </td>\n                  </tr>\n                ) : null}\n                {referral.Practitioner ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() =>\n                          showSource(referral.Practitioner.resource)\n                        }\n                      >\n                        {referral.Practitioner.resource.resourceType}{\" \"}\n                        <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Practitioner.resource.name[0].family},{\" \"}\n                        {referral.Practitioner.resource.name[0].given[0]}\n                      </div>\n                    </td>\n                  </tr>\n                ) : null}\n\n                {referral.Consent?.map((consent, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(consent.resource)}\n                        >\n                          {consent.resource.resourceType} <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          Consent status is{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.status}\n                          </div>\n                          . Scope is{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.scope?.text}\n                          </div>\n                          . Provision period is from\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.provision?.period?.start}\n                          </div>\n                          to\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.provision?.period?.end}\n                          </div>\n                        </span>\n                      </td>\n                    </tr>\n                  );\n                })}\n\n                {referral.DocumentReference?.map((documentReference, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(documentReference)}\n                        >\n                          {documentReference.resourceType} <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          Document type is{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {documentReference.type.text}\n                          </div>\n                          . Document description is{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {documentReference.description}\n                          </div>\n                        </span>\n                      </td>\n                    </tr>\n                  );\n                })}\n\n                {referral.Binary?.map((binary, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(binary)}\n                        >\n                          {binary.resourceType} <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          Content type is{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {binary.contentType}\n                          </div>\n                          .\n                        </span>{\" \"}\n                        <div className=\"btn btn-link\">\n                          <a\n                            download=\"Epic_CRN.pdf\"\n                            href={`data:application/pdf;base64,${binary.data}`}\n                            title=\"Download pdf document\"\n                          >\n                            Click to download PDF file <IoCloudDownloadSharp />\n                          </a>\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n\n                {referral.Communication?.map((communication, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(communication.resource)}\n                        >\n                          {communication.resource.resourceType}{\" \"}\n                          <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          On{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {communication.resource?.sent}\n                          </div>\n                          , sent from{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {communication.resource?.sender.display}\n                          </div>\n                          to{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {communication.resource?.recipient[0].display}\n                          </div>\n                          .\n                        </span>\n                        {communication.resource.payload ? (\n                          <div>\n                            {\" \"}\n                            Note message:{\" \"}\n                            <div className=\"btn btn-outline-primary disabled\">\n                              {communication.resource.payload[0].contentString}\n                            </div>\n                          </div>\n                        ) : (\n                          <span> Note message is empty.</span>\n                        )}\n                        {communication.resource.payload &&\n                        communication.resource.payload[1]?.contentReference ? (\n                          <div>\n                            {\" \"}\n                            A{\" \"}\n                            <div\n                              className=\"btn btn-outline-primary\"\n                              onClick={() =>\n                                showSource(referral.DocumentReference[0])\n                              }\n                            >\n                              document <IoOpenOutline />\n                            </div>{\" \"}\n                            was attached to the communication.\n                          </div>\n                        ) : null}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </td>\n      </tr>\n    </>\n  );\n}\n\nexport default ReferralSummary;\n","import { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport {\n  FaAngleDoubleRight,\n  FaAngleDoubleLeft,\n  FaFlagCheckered,\n} from \"react-icons/fa\";\nimport { AiOutlineStop } from \"react-icons/ai\";\n\nconst StatusSelector = ({\n  showReferralStatus,\n  currentReferralStatus,\n  closeReferralStatusEdit,\n  profileName,\n}) => {\n  const [newReferralStatus, setNewReferralStatus] = useState(\"\");\n  const [rejectReason, setRejectReason] = useState({\n    value: \"Please select a reason ...\",\n  });\n  const [rejectReasonNote, setRejectReasonNote] = useState(\"\");\n  const [enforceBusinessRule, setEnforceBusinessRule] = useState(false);\n\n  const closeStatusEdit = () => {\n    setNewReferralStatus(\"\");\n    setRejectReason({ value: \"Please select a reason ...\" });\n    setRejectReasonNote(\"\");\n    closeReferralStatusEdit(null);\n  };\n\n  const submitStatusChange = () => {\n    setNewReferralStatus(newReferralStatus);\n    closeReferralStatusEdit({\n      value: newReferralStatus,\n      rejectReason: { reason: rejectReason, note: rejectReasonNote },\n    });\n  };\n\n  const changeStatus = (newStatus) => {\n    console.log(\"new status is: \", newStatus);\n    setNewReferralStatus(newStatus);\n  };\n\n  const statusEnabled = (status) => {\n    if (!enforceBusinessRule) return true;\n    // if (profileName === \"Logica\") return true;\n\n    switch (status) {\n      case \"requested\":\n        if (\n          currentReferralStatus === \"requested\" ||\n          currentReferralStatus === \"accepted\" ||\n          currentReferralStatus === \"rejected\" ||\n          currentReferralStatus === \"\"\n        )\n          return true;\n        else return false;\n      case \"accepted\":\n      case \"rejected\":\n        if (\n          currentReferralStatus === \"requested\" ||\n          currentReferralStatus === \"accepted\" ||\n          currentReferralStatus === \"rejected\" ||\n          currentReferralStatus === \"\"\n        )\n          return true;\n        else return false;\n\n      case \"completed\":\n      case \"failed\":\n        if (currentReferralStatus === \"in-progress\") return true;\n        else return false;\n\n      default:\n        return false;\n    }\n  };\n\n  const rejectReasonOptions = () => {\n    const uuRejectReasons = [\n      {\n        display_name: \"Not Eligible\",\n        value: \"Client is not eligible for our services\",\n      },\n      {\n        display_name: \"Duplicate\",\n        value: \"Duplicate, case already exists in the system\",\n      },\n      {\n        display_name: \"No Capacity\",\n        value: \"We do not have capacity to serve client\",\n      },\n      {\n        display_name: \"Do Not Provide Service\",\n        value: \"We do not provide the services requested/needed\",\n      },\n      {\n        display_name: \"Unable to Contact Client\",\n        value: \"We were unable to contact the client\",\n      },\n      { display_name: \"Other\", value: \"Other\" },\n    ];\n\n    return uuRejectReasons.map((option) => {\n      return <option value={option.value}>{option.display_name}</option>;\n    });\n  };\n\n  const rowColor = (status) => {\n    switch (status) {\n      case \"accepted\":\n        return \"primary\";\n      case \"in-progress\":\n        return \"info\";\n      case \"rejected\":\n        return \"danger\";\n      case \"failed\":\n        return \"danger\";\n      case \"completed\":\n        return \"success\";\n      case \"cancelled\":\n        return \"danger\";\n      case \"requested\":\n        return \"secondary\";\n      default:\n        return \"dark\";\n    }\n  };\n\n  const stageColor = (stage) => {\n    const colorDone = rowColor(newReferralStatus || currentReferralStatus);\n    const colorNotDone = \"table-secondary\";\n    let newStage = 1;\n\n    switch (newReferralStatus || currentReferralStatus) {\n      case \"requested\":\n        newStage = 1;\n        break;\n      case \"accepted\":\n        newStage = 2;\n        break;\n      case \"in-progress\":\n        newStage = 3;\n        break;\n      case \"completed\":\n        newStage = 4;\n        break;\n      default:\n        newStage = 5;\n    }\n    return newStage < stage ? colorNotDone : \"table-\" + colorDone;\n  };\n\n  return (\n    <Modal\n      id=\"referralStatus\"\n      size=\"lg\"\n      show={showReferralStatus}\n      onHide={closeStatusEdit}\n    >\n      <Modal.Header className=\"bg-light\" closeButton>\n        <Modal.Title>Update Referral Status</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"row my-3 text-center\">\n          <div className=\"col-6\">\n            {\"Current Stauts: \"}\n            <div\n              className={\n                \"btn btn-outline-\" + rowColor(currentReferralStatus)\n              }\n            >\n              {currentReferralStatus}\n            </div>\n          </div>\n          <div className=\"col-6\">\n            {\"New Status    : \"}\n            <div\n              className={\n                \"btn active btn-outline-\" +\n                rowColor(newReferralStatus || currentReferralStatus)\n              }\n            >\n              {newReferralStatus || currentReferralStatus}\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"btn-group mb-2 text-center container-fluid\"\n          role=\"group\"\n          aria-label=\"Referral status selector\"\n          id=\"statusGroup\"\n        >\n          <table className=\"table table-bordered table-sm\">\n            <thead>\n              <tr>\n                <th className={stageColor(1)}>\n                  INITIATE{\" \"}\n                  <span className=\"float-end\">\n                    <FaAngleDoubleRight />\n                  </span>\n                </th>\n                <th className={stageColor(2)}>\n                  RESPONSE{\" \"}\n                  <span className=\"float-end\">\n                    <FaAngleDoubleRight />\n                  </span>\n                </th>\n                <th className={stageColor(3)}>\n                  CONFIRM{\" \"}\n                  <span className=\"float-end\">\n                    <FaAngleDoubleRight />\n                  </span>\n                </th>\n                <th className={stageColor(4)}>\n                  RESOLVE{\" \"}\n                  <span className=\"float-end\">\n                    <FaFlagCheckered />\n                  </span>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td rowSpan=\"3\" className=\"table-light\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusRequested\"\n                      autoComplete=\"off\"\n                      value=\"requested\"\n                      defaultChecked={currentReferralStatus === \"requested\"}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled(\"requested\")}\n                    />\n                    <label\n                      class=\"btn btn-outline-secondary\"\n                      htmlFor=\"statusRequested\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled(\"requested\") ? \"invisible\" : \"visible\"\n                        }\n                      />{\" \"}\n                      requested <AiOutlineStop className=\"invisible\" />\n                    </label>\n                  </div>\n                </td>\n\n                <td colSpan=\"3\" className=\"table-light\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check btn-block\"\n                      name=\"btnStatus\"\n                      id=\"statusCancelled\"\n                      autoComplete=\"off\"\n                      value=\"cancelled\"\n                      defaultChecked={currentReferralStatus === \"cancelled\"}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled(\"cancelled\")}\n                    />\n                    <label\n                      class=\"btn btn-outline-danger\"\n                      htmlFor=\"statusCancelled\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled(\"cancelled\") ? \"invisible\" : \"visible\"\n                        }\n                      />{\" \"}\n                      cancelled{\" \"}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                  </div>\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusAccepted\"\n                      autoComplete=\"off\"\n                      value=\"accepted\"\n                      defaultChecked={currentReferralStatus === \"accepted\"}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled(\"accepted\")}\n                    />\n                    <label\n                      class=\"btn btn-outline-primary\"\n                      htmlFor=\"statusAccepted\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled(\"accepted\") ? \"invisible\" : \"visible\"\n                        }\n                      />{\" \"}\n                      accepted <AiOutlineStop className=\"invisible\" />\n                    </label>\n                  </div>\n                </td>\n                <td className=\"table-light\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusInProgress\"\n                      autoComplete=\"off\"\n                      value=\"in-progress\"\n                      defaultChecked={currentReferralStatus === \"in-progress\"}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled(\"in-progress\")}\n                    />\n                    <label\n                      class=\"btn btn-outline-info\"\n                      htmlFor=\"statusInProgress\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled(\"in-progress\") ? \"invisible\" : \"visible\"\n                        }\n                      />{\" \"}\n                      in-progress <AiOutlineStop className=\"invisible\" />\n                    </label>\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusCompleted\"\n                      autoComplete=\"off\"\n                      value=\"completed\"\n                      defaultChecked={currentReferralStatus === \"completed\"}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled(\"completed\")}\n                    />\n                    <label\n                      class=\"btn btn-outline-success\"\n                      htmlFor=\"statusCompleted\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled(\"completed\") ? \"invisible\" : \"visible\"\n                        }\n                      />{\" \"}\n                      completed{\" \"}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusFailed\"\n                      autoComplete=\"off\"\n                      value=\"failed\"\n                      defaultChecked={currentReferralStatus === \"failed\"}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled(\"failed\")}\n                    />\n                    <label\n                      class=\"btn btn-outline-danger\"\n                      htmlFor=\"statusFailed\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled(\"failed\") ? \"invisible\" : \"visible\"\n                        }\n                      />{\" \"}\n                      failed{\" \"}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                  </div>\n                </td>\n              </tr>\n\n              <tr>\n                <td colSpan=\"3\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn btn-sm btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusRejected\"\n                      autoComplete=\"off\"\n                      value=\"rejected\"\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      defaultChecked={currentReferralStatus === \"rejected\"}\n                      disabled={!statusEnabled(\"rejected\")}\n                    />\n                    <label\n                      class=\"btn btn-outline-danger\"\n                      htmlFor=\"statusRejected\"\n                    >\n                      <AiOutlineStop\n                        className={\n                          statusEnabled(\"rejected\") ? \"invisible\" : \"visible\"\n                        }\n                      />{\" \"}\n                      rejected{\" \"}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                    <div\n                      className={\n                        newReferralStatus === \"rejected\" ? \"\" : \"d-none\"\n                      }\n                    >\n                      <div className=\"form-group\">\n                        <label className=\"col-form-label\">REJECT REASON</label>\n                        <div>\n                          <select\n                            className=\"form-select\"\n                            value={rejectReason.value}\n                            onChange={(e) =>\n                              setRejectReason({\n                                value: e.target.value,\n                                text: e.target.options[e.target.selectedIndex]\n                                  .text,\n                              })\n                            }\n                          >\n                            <option>Select a reason ...</option>\n                            {rejectReasonOptions()}\n                          </select>\n                        </div>\n                      </div>\n\n                      <div className=\"form-group\">\n                        <label className=\"col-form-label\">NOTE</label>\n                        <div>\n                          <textarea\n                            className=\"form-control\"\n                            rows=\"3\"\n                            cols=\"50\"\n                            placeholder=\"Enter a note for the reject reason\"\n                            value={rejectReasonNote}\n                            onChange={(e) =>\n                              setRejectReasonNote(e.target.value)\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <div className=\"col form-check form-switch mx-2 float-start text-start\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            role=\"button\"\n            id=\"flexSwitchBusinessRule\"\n            checked={enforceBusinessRule}\n            onChange={() => setEnforceBusinessRule(!enforceBusinessRule)}\n          />\n          <label\n            className=\"form-check-label\"\n            role=\"button\"\n            htmlFor=\"flexSwitchBusinessRule\"\n          >\n            Enforce Epic Business Rules\n          </label>\n        </div>\n\n        <Button className=\"col\" variant=\"warning\" onClick={closeStatusEdit}>\n          Cancel\n        </Button>\n        <Button className=\"col\" variant=\"primary\" onClick={submitStatusChange}>\n          Submit\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default StatusSelector;\n","import { useState, useEffect, useRef } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { BiMessage } from \"react-icons/bi\";\nimport { TiDeleteOutline } from \"react-icons/ti\";\n\nimport {\n  FaAngleDoubleRight,\n  FaAngleDoubleLeft,\n  FaFlagCheckered,\n} from \"react-icons/fa\";\nimport { IoOpenOutline, IoCloudDownloadSharp } from \"react-icons/io5\";\nimport { CgAttachment } from \"react-icons/cg\";\n\nconst AddNote = ({ showAddNote, referral, closeAddNote, baseUrl }) => {\n  const [noteText, setNoteText] = useState(\"\");\n  const [callResponse, setCallResponse] = useState(\"\");\n  const [refreshCount, setRefreshCount] = useState(0);\n  const [showMessageToast, setShowMessageToast] = useState(false);\n  const [communicationList, setCommunicationList] = useState([]);\n  const [waitMessage, setWaitMessage] = useState(\n    \"Sending communication note ...\"\n  );\n\n  useEffect(() => {\n    setCommunicationList(referral?.Communication);\n    console.log(\"useEffect cl:\", communicationList);\n  }, [referral]);\n\n  useEffect(() => {\n    const updateList = async () => {\n      setWaitMessage(\"Retriving communcation notes ...\");\n      setShowMessageToast(true);\n\n      const url =\n        \"https://fhir-crn.uniteustraining.com/rick/mockapi/request/search\";\n\n      const res = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Accept: \"application/json\",\n          \"x-api-key\": \"sfsdfddfdsfsdfs32342343\",\n        },\n        body: JSON.stringify({\n          baseUrl: baseUrl,\n          resourceType: \"Communication\",\n          queryParams: {\n            \"part-of\": referral?.Task.resource.id,\n          },\n        }),\n      });\n      const data = await res.json();\n\n      if (data.response?.body?.total > 0) {\n        setCommunicationList(data.response?.body?.entry);\n        referral.Communication = data.response?.body?.entry;\n      }\n\n      setShowMessageToast(false);\n    };\n\n    if (referral?.Task) updateList();\n    setNoteText(\"\");\n    //setCallResponse(\"\");\n  }, [refreshCount]);\n\n  const sendNote = async () => {\n    setWaitMessage(\"Sending communication note ...\");\n    setShowMessageToast(true);\n    const url =\n      \"https://fhir-crn.uniteustraining.com/rick/mockapi/communication_out/process\";\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        \"x-api-key\": \"sfsdfddfdsfsdfs32342343\",\n      },\n      body: JSON.stringify({\n        note: noteText,\n        referralId: referral?.trackingItem?.core_referral_id,\n        sentAt: Math.floor(Date.now() / 1000),\n      }),\n    });\n    const data = await res.json();\n    setCallResponse(JSON.stringify(data));\n    setRefreshCount(refreshCount + 1);\n    setShowMessageToast(false);\n    return;\n  };\n\n  const sender = (communication) => {\n    if (communication) {\n      const senderName = communication.resource?.sender?.display;\n      let senderType;\n\n      if (\n        communication.resource?.sender?.reference?.split(\"/\")[0] ===\n        \"Organization\"\n      )\n        senderType = \"cbo\";\n      else senderType = \"ehr\";\n      const senderInfo = { name: senderName, type: senderType };\n      return senderInfo;\n    }\n\n    return null;\n  };\n\n  const noteColor = (communication) => {\n    if (sender(communication)?.type === \"ehr\") return \"seashell\";\n    else return \"aliceblue\";\n  };\n\n  const noteAlign = (communication) => {\n    if (sender(communication)?.type === \"ehr\") return \"start\";\n    else return \"end\";\n  };\n\n  const responseTo = (communication) => {\n    const recipients = communication.resource?.recipient;\n    let responseToStr = \"Replied to: \";\n    recipients.forEach((entry) => {\n      responseToStr += entry.display + \", \";\n    });\n    return responseToStr;\n  };\n\n  const closeAddNoteWindow = () => {\n    //setCommunicationList([]);\n    setCallResponse(\"\");\n    closeAddNote();\n  };\n\n  return (\n    <>\n      <Modal\n        id=\"addNote\"\n        size=\"lg\"\n        show={showAddNote}\n        onHide={closeAddNoteWindow}\n      >\n        <Modal.Header className=\"bg-light\" closeButton>\n          <Modal.Title>Referral Communications</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <table className=\"table table-responsive table-hover\">\n            <tbody>\n              {communicationList?.map((entry, index) => (\n                <tr>\n                  <td className=\"p-0\">\n                    <table className=\"table table-borderless m-0 p-0\">\n                      <tbody>\n                        <tr>\n                          <td className=\"text-center text-secondary\">\n                            {entry.resource?.sent}\n                          </td>\n                        </tr>\n\n                        {sender(entry).type === \"cbo\" ? (\n                          <tr\n                            className={`text-${noteAlign(\n                              entry\n                            )} text-secondary`}\n                          >\n                            <td className=\"py-0\">{responseTo(entry)}</td>{\" \"}\n                          </tr>\n                        ) : (\n                          <tr\n                            className={`text-${noteAlign(\n                              entry\n                            )} text-secondary`}\n                          >\n                            <td className=\"py-0\">From: {sender(entry).name}</td>\n                          </tr>\n                        )}\n                        <tr className={`text-${noteAlign(entry)}`}>\n                          <td style={{ backgroundColor: noteColor(entry) }}>\n                            <div\n                              className={`btn mt-0 mx-0 text-start disabled text-body`}\n                              style={{ opacity: 1 }}\n                            >\n                              {entry.resource?.payload\n                                ? entry.resource?.payload[0]?.contentString\n                                : \"[empty]\"}\n                            </div>\n                            {entry.resource?.payload &&\n                            entry.resource?.payload[1]?.contentReference ? (\n                              <p>\n                                <CgAttachment />\n                                Document attachment\n                              </p>\n                            ) : null}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          {referral?.trackingItem ? (\n            <div className=\"form-group\">\n              <div className=\"d-flex\">\n                <label className=\"col-form-label col-6 vertical-bottom\">\n                  NEW NOTE\n                </label>\n                <div className=\"btn btn-primary col-6\" onClick={sendNote}>\n                  Send\n                </div>\n              </div>\n              <div\n                className={\n                  showMessageToast\n                    ? \"toast bg-warning text-secondary show\"\n                    : \"toast\"\n                }\n                role=\"alert\"\n                aria-live=\"assertive\"\n                aria-atomic=\"true\"\n                id=\"messageToastModal\"\n              >\n                <div className=\"toast-header\">\n                  <strong className=\"me-auto\">Please Wait ...</strong>\n                </div>\n                <div className=\"toast-body\">\n                  {waitMessage}{\" \"}\n                  <div className=\"spinner-border text-warning\" role=\"status\">\n                    <span className=\"visually-hidden\">...</span>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <textarea\n                  className=\"form-control\"\n                  rows=\"3\"\n                  cols=\"50\"\n                  placeholder=\"Enter a new note\"\n                  value={noteText}\n                  onChange={(e) => setNoteText(e.target.value)}\n                />\n              </div>\n              {callResponse === \"\" ? null : (\n                <div className=\"row\">\n                  <div className=\"col-10\">\n                    <pre>{callResponse}</pre>{\" \"}\n                  </div>\n                  <div className=\"col-2\">\n                    <TiDeleteOutline\n                      calssName=\"col-2\"\n                      onClick={() => {\n                        setCallResponse(\"\");\n                      }}\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : null}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            className=\"col\"\n            variant=\"warning\"\n            onClick={closeAddNoteWindow}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddNote;\n","import EncounterSummary from \"./EncounterSummary\";\nimport CreateReferral from \"./CreateReferral\";\nimport ReferralSummary from \"./ReferralSummary\";\nimport StatusSelector from \"./StatusSelector\";\nimport AddNote from \"./AddNote\";\nimport { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction Referrals({\n  onCreate,\n  referralList,\n  currentEncounter,\n  sendNotificationUU,\n  profileName,\n  updateReferralStatus,\n  baseUrl,\n}) {\n  const [showNewReferral, setShowNewReferral] = useState(false);\n  const [showSource, setShowSource] = useState(false);\n  const [showReferralStatus, setShowReferralStatus] = useState(false);\n  const [fullJson, setFullJson] = useState();\n  const [currentReferralStatus, setCurrentReferralStatus] = useState(\"\");\n  //const [newReferralStatus, setNewReferralStatus] = useState(\n  //  currentReferralStatus\n  //);\n  const [editReferralId, setEditReferralId] = useState();\n  const [showAddNote, setShowAddNote] = useState(false);\n  const [currentReferral, setCurrentReferral] = useState();\n\n  const toggleShowNewReferral = () => {\n    setShowNewReferral((showNewReferral) => !showNewReferral);\n  };\n\n  const onCreateReferral = (referral) => {\n    onCreate(referral);\n    toggleShowNewReferral();\n  };\n\n  const showFhirSource = (fullJson, show) => {\n    setFullJson(fullJson);\n    setShowSource(show);\n  };\n\n  const closeWindow = () => setShowSource(false);\n\n  const editReferralStatus = (referralId, currentStatus) => {\n    setShowReferralStatus(true);\n    setEditReferralId(referralId);\n    setCurrentReferralStatus(currentStatus);\n    //setNewReferralStatus(\"\");\n  };\n\n  const closeReferralStatusEdit = (newStatus) => {\n    setShowReferralStatus(false);\n    if (newStatus !== null) {\n      //setNewReferralStatus(newReferralStatus.value);\n      console.log(\"new status: \", newStatus.value, newStatus.rejectReason);\n      updateReferralStatus(editReferralId, newStatus);\n    } //else setNewReferralStatus(\"\");\n  };\n\n  const showAddNoteWindow = (referral) => {\n    setCurrentReferral(referral)\n    setShowAddNote(true);\n  };\n  const closeAddNote = () => {\n    setShowAddNote(false);\n  };\n\n  return (\n    <div className=\"col-md-9 col-lg-10 px-0\">\n      <div className=\"referrals\">\n        <EncounterSummary\n          toggleShowNewReferral={toggleShowNewReferral}\n          showNewReferral={showNewReferral}\n          currentEncounter={currentEncounter}\n          sendNotificationUU={sendNotificationUU}\n          profileName={profileName}\n        />\n        {showNewReferral ? (\n          <CreateReferral\n            onCreate={onCreateReferral}\n            toggleShowNewReferral={toggleShowNewReferral}\n          />\n        ) : null}\n        <div className=\"referralList\">\n          <div className=\"h5 py-3\">\n            This encounter has{\" \"}\n            {referralList.length > 1\n              ? referralList.length + \" referrals.\"\n              : referralList.length === 1\n              ? \" 1 referral.\"\n              : \" no referrals.\"}\n          </div>\n          {referralList.length > 0 ? (\n            <table className=\"table table-hover\">\n              <thead>\n                <tr>\n                  <th>DATE SENT</th>\n                  <th>STATUS</th>\n                  <th>SERVICE TYPE</th>\n                  <th>RECEIPIENT</th>\n                  <th>NOTES</th>\n                  <th>UU REFERRAL</th>\n                  <th>+/-</th>\n                </tr>\n              </thead>\n              <tbody>\n                {referralList.map((referral, index) => (\n                  <ReferralSummary\n                    key={index}\n                    referral={referral}\n                    showFhirSource={showFhirSource}\n                    editReferralStatus={editReferralStatus}\n                    showAddNoteWindow={showAddNoteWindow}\n                  />\n                ))}\n              </tbody>\n            </table>\n          ) : null}\n        </div>\n      </div>\n      <Modal id=\"fhirSource\" size=\"lg\" show={showSource} onHide={closeWindow}>\n        <Modal.Header className=\"bg-light\" closeButton>\n          <Modal.Title>\n            {fullJson?.resourceType} : {fullJson?.id}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <pre id=\"json\">{JSON.stringify(fullJson, undefined, 2)}</pre>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"warning\" onClick={closeWindow}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <StatusSelector\n        showReferralStatus={showReferralStatus}\n        currentReferralStatus={currentReferralStatus}\n        closeReferralStatusEdit={closeReferralStatusEdit}\n        profileName={profileName}\n      ></StatusSelector>\n      <AddNote\n        showAddNote={showAddNote}\n        referral={currentReferral}\n        communicationList={currentReferral?.Communication}\n        closeAddNote={closeAddNote}\n        baseUrl={baseUrl}\n      ></AddNote>\n    </div>\n  );\n}\n\nexport default Referrals;\n","export const Profile_Epic = {\n  name: \"Epic\",\n\n  defaultPatient: {\n    firstName: \"Calvin\",\n    lastName: \"Ccm\",\n    gender: \"Male\",\n    dob: \"01/01/1990\",\n    mrn: \"203724\",\n    fhirId: \"e4ikKcC2Rp3EsZQh8Ac6C5A3\",\n    uuid: \"b5318891-3dc8-426a-af50-531e106ad1a1\",\n  },\n\n  defaultProvider: {\n    firstName: \"Case\",\n    lastName: \"Manager\",\n    fhirId: \"eaToFIkaJ32mO4K002q3BLw3\",\n    uuid: \"94e5f7ee-1425-42bc-8833-3474b687b125\",\n    groupId: \"bf4aa373-81eb-4da5-9980-2d3e51c57b3c\",\n    networkId: \"145ca925-ba86-490d-b404-35f4fe5ada66\",\n  },\n\n  defaultEncounter: \"eEDcHpsgsD0Pv4Ih8HnfOxA3\", //\"enZf6GWN2rMGQWF1rqqDgNg3\",\n  defaultDocumentReference: \"e1.cnazaNgltIElLYGLL4Sg3\",\n  defaultBaseUrl:\n    \"https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4\",\n  defaultNotificationUrl:\n    \"https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService\",\n  accessToken:\n    \"e2a4575581b3f57203e182b0b1f3dcea479baecd31bef125cc57f6dd4b8905ac\",\n};\n\nexport const Profile_Epic_2 = {\n  name: \"Epic2\",\n\n  defaultPatient: {\n    firstName: \"Beverly\",\n    lastName: \"Ccm\",\n    gender: \"Female\",\n    dob: \"01/01/1940\",\n    mrn: \"203722\",\n    fhirId: \"egHmZUd91rLItB1AqGV49Pg3\",\n    uuid: \"b5318891-3dc8-426a-af50-531e106ad1a1\",\n  },\n\n  defaultProvider: {\n    firstName: \"Case\",\n    lastName: \"Manager\",\n    fhirId: \"eaToFIkaJ32mO4K002q3BLw3\",\n    uuid: \"94e5f7ee-1425-42bc-8833-3474b687b125\",\n    groupId: \"bf4aa373-81eb-4da5-9980-2d3e51c57b3c\",\n    networkId: \"145ca925-ba86-490d-b404-35f4fe5ada66\",\n  },\n\n  defaultEncounter: \"eFBT3k94CLm3fCPMNlKH2DQ3\", //\"enZf6GWN2rMGQWF1rqqDgNg3\",\n  defaultDocumentReference: \"e.-1q0eXQDEZ.9mNdXwVjYA3\",\n  defaultBaseUrl:\n    \"https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4\",\n  defaultNotificationUrl:\n    \"https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService\",\n  accessToken:\n    \"e2a4575581b3f57203e182b0b1f3dcea479baecd31bef125cc57f6dd4b8905ac\",\n};\n\nexport const Profile_Logica = {\n  name: \"Logica\",\n\n  defaultPatient: {\n    firstName: \"Beverly\",\n    lastName: \"Ccm\",\n    gender: \"Female\",\n    dob: \"01/01/1940\",\n    mrn: \"203722\",\n    fhirId: \"14730\",\n    uuid: \"b5318891-3dc8-426a-af50-531e106ad1a1\",\n  },\n  defaultProvider: {\n    firstName: \"Demo\",\n    lastName: \"Provider\",\n    fhirId: \"14734\",\n    uuid: \"94e5f7ee-1425-42bc-8833-3474b687b125\",\n    groupId: \"bf4aa373-81eb-4da5-9980-2d3e51c57b3c\",\n    networkId: \"145ca925-ba86-490d-b404-35f4fe5ada66\",\n  },\n\n  defaultEncounter: \"14801\",\n  defaultDocumentReference: \"14740\",\n\n  defaultBaseUrl: \"https://api.logicahealth.org/uufhircrn/open\",\n\n  defaultNotificationUrl:\n    \"https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService\",\n  accessToken: \"\",\n};\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Encounters from \"./components/Encounters\";\nimport Referrals from \"./components/Referrals\";\nimport { useState, useEffect } from \"react\";\nimport {\n  Profile_Epic,\n  Profile_Epic_2,\n  Profile_Logica,\n} from \"./components/Profiles\";\n\nfunction App() {\n  const defaultProfile = Profile_Epic;\n  const defaultProfileName = defaultProfile.name;\n  const [currentProfileName, setCurrentProfileName] =\n    useState(defaultProfileName);\n  //const [profile, setProfile] = useState(defaultProfile);\n  const [patient, setPatient] = useState(defaultProfile.defaultPatient);\n  const [provider, setProvider] = useState(defaultProfile.defaultProvider);\n  const [currentEncounter, setCurrentEncounter] = useState(\n    defaultProfile.defaultEncounter\n  );\n  const [accessToken, setAccessToken] = useState(defaultProfile.access_token);\n  const [baseUrl, setBaseUrl] = useState(defaultProfile.defaultBaseUrl);\n  const [notificationUrl, setNotificationUrl] = useState(\n    defaultProfile.defaultNotificationUrl\n  );\n  const [referrals, setReferrals] = useState([]);\n  const [encounters, setEncounters] = useState([]);\n\n  const [sampleDocumentReference, setSampleDocumentReference] = useState(\"\");\n\n  const defaultToastMessage = \"Retrieving FHIR resources ... \";\n  const [toastMessage, setToastMessage] = useState(\n    defaultToastMessage\n  );\n  const [showMessageToast, setShowMessageToast] = useState(true);\n  const toggleShowMessageToast = () => setShowMessageToast(!showMessageToast);\n\n  const [progress, setProgress] = useState(\"0%\");\n\n  const switchProfile = async (profileName) => {\n    //if (profileName === currentProfileName) return\n    setProgress(\"0%\");\n    setToastMessage(defaultToastMessage);\n    setShowMessageToast(true);\n\n    console.log(\"Switch to profile: \", profileName);\n    setCurrentProfileName(profileName);\n    let newProfile; //'= profileName === \"Logica\" ? Profile_Logica : Profile_Epic;\n    switch (profileName) {\n      case \"Logica\":\n        newProfile = Profile_Logica;\n        break;\n      case \"Epic2\":\n        newProfile = Profile_Epic_2;\n        break;\n      default:\n        newProfile = Profile_Epic;\n    }\n    setPatient(newProfile.defaultPatient);\n    setProvider(newProfile.defaultProvider);\n    setBaseUrl(newProfile.defaultBaseUrl);\n    setNotificationUrl(newProfile.defaultNotificationUrl);\n    if (newProfile.name === \"Logica\") {\n      setAccessToken(newProfile.accessToken);\n    } else {\n      let token = await getAccessToken();\n      setAccessToken(token);\n    }\n\n    setShowMessageToast(false);\n    setProgress(\"0%\");\n    //setToastMessage(\"\");\n  };\n\n  const refreshProfileSettings = async () => {\n    const encounterList = await getEncounters(patient.fhirId, baseUrl);\n    if (encounterList?.length > 0) {\n      await changeCurrentEncounter(encounterList[0].resource.id, baseUrl);\n    }\n  };\n\n  // Create a referral\n  const createReferral = async (referral) => {\n    setProgress(\"0%\");\n    setToastMessage(\"Sending create requests ... \");\n    setShowMessageToast(true);\n\n    console.log(\"create referral: \", referral);\n    const nowISO = new Date().toISOString();\n\n    // Create ServiceRequest\n    let url = baseUrl + \"/ServiceRequest\";\n    let resource = {\n      resourceType: \"ServiceRequest\",\n      status: \"active\",\n      intent: \"plan\",\n      category: [\n        {\n          coding: [\n            {\n              system: \"http://snomed.info/sct\",\n              code: \"307835004\",\n              display: \"Referral by service\",\n            },\n          ],\n          text: \"Referral by service\",\n        },\n      ],\n      priority: \"routine\",\n      subject: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + \", \" + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      authoredOn: nowISO,\n      requester: [\n        {\n          reference: `Practitioner/${provider.fhirId}`,\n          display: provider.firstName + \" \" + provider.lastName,\n        },\n      ],\n      // orderDetail: {\n      //   text: referral.serviceType.text,\n      //   coding: [\n      //     {\n      //       system: \"Unite Us\",\n      //       code: referral.serviceType.value,\n      //       display: referral.serviceType.text,\n      //     },\n      //   ],\n      // },\n    };\n\n    if (referral.attachDocument && sampleDocumentReference.length > 0) {\n      resource.supportingInfo = [\n        {\n          reference: `DocumentReference/${sampleDocumentReference}`,\n        },\n      ];\n    }\n\n    let res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(resource),\n    });\n\n    let data = await res.json();\n    let newServiceRequestId = data.id;\n    console.log(\"server request id: \", newServiceRequestId);\n\n    // Create Task\n    url = baseUrl + \"/Task\";\n    resource = {\n      resourceType: \"Task\",\n      basedOn: [\n        {\n          reference: `ServiceRequest/${newServiceRequestId}`,\n        },\n      ],\n      status: \"requested\",\n      intent: \"plan\",\n      priority: \"routine\",\n      for: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + \", \" + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      authoredOn: nowISO,\n      lastModified: nowISO,\n      requester: [\n        {\n          reference: `Practitioner/${provider.fhirId}`,\n          display: provider.firstName + \" \" + provider.lastName,\n        },\n      ],\n      // description:\n      //   referral.description +\n      //   \"/n referred to : \" +\n      //   referral.referredToGroupIds.text +\n      //   \" [\" +\n      //   referral.referredToGroupIds.value +\n      //   \"]\",\n      owner: {\n        reference: `Organization/${referral.referredToGroupIds.value}`,\n        display: referral.referredToGroupIds.text,\n      },\n    };\n\n    setProgress(\"5%\");\n\n    res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(resource),\n    });\n\n    data = await res.json();\n    let newTaskId = data.id;\n    console.log(\"Task id: \", newTaskId);\n\n    // Create initial Communication\n    url = baseUrl + \"/Communication\";\n    resource = {\n      resourceType: \"Communication\",\n      basedOn: [\n        {\n          reference: `ServiceRequest/${newServiceRequestId}`,\n        },\n      ],\n      partOf: [\n        {\n          reference: `Task/${newTaskId}`,\n        },\n      ],\n      status: \"in-progress\",\n      subject: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + \", \" + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      sent: nowISO,\n      recipient: [\n        {\n          reference: `Organization/${referral.referredToGroupIds.value}`,\n          display: referral.referredToGroupIds.text,\n        },\n      ],\n      sender: {\n        reference: `Practitioner/${provider.fhirId}`,\n        display: provider.firstName + \" \" + provider.lastName,\n      },\n    };\n\n    if (referral.description.length > 0) {\n      resource.payload = [\n        {\n          contentString: referral.description,\n        },\n      ];\n    }\n\n    if (referral.attachDocument && sampleDocumentReference.length > 0) {\n      resource.payload = [\n        ...resource.payload,\n        {\n          contentReference: {\n            reference: `DocumentReference/${sampleDocumentReference}`,\n          },\n        },\n      ];\n    }\n\n    res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(resource),\n    });\n\n    data = await res.json();\n    let newCommunicationId = data.id;\n    console.log(\"Communication id: \", newCommunicationId);\n\n    await getReferrals();\n\n    setProgress(\"100%\");\n    setShowMessageToast(false);\n  };\n\n  const fetchReferrals = async (\n    encounterId = currentEncounter,\n    referralBaseUrl = baseUrl\n  ) => {\n    // fetching Task + ServiceRequest\n    //setToastMessage(\"Fetching FHIR resources: \\n Tasks ... \\n ServiceRequests ... \");\n    setToastMessage(defaultToastMessage);\n    setProgress(\"10%\");\n\n    const url =\n      referralBaseUrl +\n      \"/Task?encounter=\" +\n      encounterId +\n      \"&_include=Task%3Apatient&_include=Task%3Aencounter&_include=Task%3Arequester&_include=Task%3A\" +\n      \"based-on\" + //(currentProfileName === \"Epic\" ? \"basedon\" : \"based-on\") + \"%3AServiceRequest\" +\n      \"&_include=Task%3Aowner%3AOrganization\";\n\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n      },\n    });\n    const data = await res.json();\n    let entryList = data.total === 0 ? [] : data.entry;\n    if (!entryList) return [];\n    console.log(\"Task bundle received: \", entryList);\n\n    // //_include works at Epic, no need to fetch ServiceRequest seperatedly\n    // const url2 = baseUrl + \"/ServiceRequest?encounter=\" + encounterId;\n    // const res2 = await fetch(url2, {\n    //   method: \"GET\",\n    //   headers: {\n    //     \"Content-type\": \"application/json\",\n    //     Accept: \"application/json\",\n    //     Authorization: accessToken.length > 0 ? \"bearer \" + accessToken : \"\",\n    //   },\n    // });\n    // const data2 = await res2.json();\n    // let entryList2 = data2.total === 0 ? [] : data2.entry;\n    // entryList = entryList.concat(entryList2);\n\n    //filter ServiceRequest and Task\n    // if (entryList.length > 0) {\n    //   entryList = entryList.filter((entry) => {\n    //     return (\n    //       entry.resource.resourceType === \"ServiceRequest\" ||\n    //       entry.resource.resourceType === \"Task\"\n    //     );\n    //   });\n    // }\n\n    // Take all the Task\n    let referralList = [];\n    entryList.forEach((entry, index) => {\n      if (entry.resource.resourceType === \"Task\") {\n        let referral = {\n          id: \"Task/\" + entry.resource.id,\n          Task: entry,\n        };\n        referralList.push(referral);\n      }\n    });\n\n    // Group the other resources with the Task\n    referralList.forEach((referral, index) => {\n      const resource = referral?.Task?.resource;\n      if (!resource) return;\n\n      const patientId = resource.for?.reference;\n      const serviceRequestId = resource.basedOn[0].reference;\n      const practitionerId = resource.requester?.reference;\n      const organizationId = resource.owner?.reference;\n\n      entryList.forEach((entry, index) => {\n        let entryId = entry.resource.id;\n        switch (entry.resource.resourceType) {\n          case \"ServiceRequest\": {\n            if (serviceRequestId === `ServiceRequest/${entryId}`)\n              referral.ServiceRequest = entry;\n            break;\n          }\n          case \"Patient\": {\n            if (patientId === `Patient/${entryId}`) referral.Patient = entry;\n            break;\n          }\n          case \"Organization\": {\n            if (organizationId === `Organization/${entryId}`)\n              referral.Organization = entry;\n            break;\n          }\n          case \"Practitioner\": {\n            if (practitionerId === `Practitioner/${entryId}`)\n              referral.Practitioner = entry;\n            break;\n          }\n          default:\n        }\n      });\n    });\n\n    // Fetch Communications for each Task\n    //setToastMessage((a) => { return a + \"\\n Communications ... \"});\n    setProgress(\"40%\");\n    for (let referral of referralList) {\n      const referralId = referral?.Task?.resource?.id;\n      const communications = await fetchCommunications(referralId);\n      referral.Communication = communications.entry;\n    }\n\n    // Fetch DocumentReferences for each ServiceRequest\n    //setToastMessage((a) => { return a + \"\\n DocumentReferences ... \"});\n    setProgress(\"70%\");\n    for (let referral of referralList) {\n      const documentReferences = await fetchDocumentReferences(referral);\n      if (documentReferences?.length > 0) {\n        referral.DocumentReference = documentReferences;\n        setSampleDocumentReference(referral.DocumentReference[0].id);\n        console.log(\"documentReference\", referral.DocumentReference);\n        console.log(\"sampleDocumentReference\", sampleDocumentReference);\n      }\n    }\n\n    // Fetch Binaries for all DocumentReferences\n    //setToastMessage((a) => { return a + \"\\nBinaries ... \"});\n    setProgress(\"85%\");\n    for (let referral of referralList) {\n      if (referral.DocumentReference?.length > 0) {\n        const binaryList = await fetchBinaries(referral.DocumentReference);\n        if (binaryList?.length > 0) {\n          referral.Binary = binaryList;\n        }\n      }\n    }\n\n    setProgress(\"95%\");\n    // look up referral UUID in AWS DDB\n    for (let referral of referralList) {\n      if (referral.Task?.resource?.id) {\n        const trackingItem = await lookupUUReferralId(\n          `${baseUrl}/Task/${referral.Task?.resource?.id}`\n        );\n        if (trackingItem) referral.trackingItem = trackingItem;\n      }\n    }\n\n    //referralList = referralList.filter((entry) => {\n    //  return entry.Task;\n    //});\n\n    // Fetch Consents\n    //if (currentProfileName === \"Epic\") {\n    //setToastMessage((a) => { return a + \"\\n Consents ... \"});\n    const consentList = await fetchConsents();\n    if (consentList?.length > 0) {\n      referralList.forEach((entry, index) => {\n        entry.Consent = consentList;\n      });\n    }\n    //}\n\n    console.log(\"referral list\", referralList);\n    referralList.sort((a, b) => {\n      const timeA = new Date(a.ServiceRequest.resource.authoredOn).getTime();\n      const timeB = new Date(b.ServiceRequest.resource.authoredOn).getTime();\n      return timeB - timeA;\n    });\n\n    setProgress(\"100%\");\n    return referralList;\n  };\n\n  const fetchEncounters = async (\n    patientId = patient.fhirId,\n    encounterBaseUrl = baseUrl\n  ) => {\n    const url = encounterBaseUrl + \"/Encounter?patient=\" + patientId;\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization:\n          accessToken?.length > 0 && currentProfileName !== \"Logica\"\n            ? \"bearer \" + accessToken\n            : \"\",\n      },\n    });\n    const data = await res.json();\n\n    const encounterList = data.total > 0 ? data.entry : [];\n\n    encounterList.sort((a, b) => {\n      const timeA = new Date(a.resource?.period?.start).getTime();\n      const timeB = new Date(b.resource?.period?.start).getTime();\n      return timeB - timeA;\n    });\n    console.log(\"encounter\", encounterList);\n    return encounterList;\n  };\n\n  // Fetch Communications for a Task\n  const fetchCommunications = async (taskId) => {\n    const url = baseUrl + \"/Communication?part-of=\" + taskId;\n\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n      },\n    });\n    const data = await res.json();\n    console.log(\"communications: \", data);\n    return data;\n  };\n\n  // Fetch DocumentReferences for a ServiceRequest\n  const fetchDocumentReferences = async (referral) => {\n    const documentList = [];\n    const supportingInfo = referral?.ServiceRequest?.resource?.supportingInfo;\n\n    if (!supportingInfo) return documentList;\n\n    for (let entry of supportingInfo) {\n      const url = baseUrl + \"/\" + entry.reference;\n      const res = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n        },\n      });\n      const data = await res.json();\n      console.log(\"documentReference: \", data);\n      if (data?.resourceType === \"DocumentReference\") documentList.push(data);\n    }\n\n    return documentList;\n  };\n\n  // Fetch DocumentReferences for a ServiceRequest\n  const fetchBinaries = async (documentReferenceList) => {\n    const binaryList = [];\n\n    if (!documentReferenceList) return binaryList;\n\n    for (let entry of documentReferenceList) {\n      const url = baseUrl + \"/\" + entry.content[0]?.attachment?.url;\n      const res = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Accept: \"application/fhir+json\",\n          Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n        },\n      });\n      const data = await res.json();\n      if (data?.resourceType === \"Binary\") {\n        binaryList.push(data);\n      }\n    }\n\n    return binaryList;\n  };\n\n  // Fetch Consent for a Patient\n  const fetchConsents = async (\n    patientFhirId = patient.fhirId,\n    category = currentProfileName === \"Logica\"\n      ? \"64292-6\"\n      : \"http://loinc.org|64292-6\",\n    status = \"active\"\n  ) => {\n    const url = `${baseUrl}/Consent?patient=${patientFhirId}&category=${category}&status=${status}`;\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n      },\n    });\n    const data = await res.json();\n    console.log(\"consent: \", data);\n    return data.entry;\n  };\n\n  const lookupUUReferralId = async (fhirUrl) => {\n    const url =\n      \"https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/resource_tracking/read\";\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        \"x-api-key\": \"sfsdfddfdsfsdfs32342343\",\n      },\n      body: JSON.stringify({\n        full_url: fhirUrl,\n      }),\n    });\n    const data = await res.json();\n    const item = data.response?.item;\n    console.log(\"Found item: \", item);\n    return item;\n  };\n\n  const changeCurrentEncounter = async (encounterSelected, currentBaseUrl) => {\n    //if (encounterSelected === currentEncounter) return;\n    setProgress(\"0%\");\n    setToastMessage(defaultToastMessage);\n    setShowMessageToast(true);\n\n    setCurrentEncounter(encounterSelected);\n    await getReferrals(encounterSelected, currentBaseUrl);\n\n    setShowMessageToast(false);\n    setProgress(\"0%\");\n    //setToastMessage(\"\");\n\n    return;\n  };\n\n  const getReferrals = async (encounterSelected, referralBaseUrl) => {\n    const data = await fetchReferrals(encounterSelected, referralBaseUrl);\n    setReferrals(data);\n  };\n\n  const getEncounters = async (patientId, encounterBaseUrl) => {\n    setProgress(\"0%\");\n    setShowMessageToast(true);\n\n    const data = await fetchEncounters(patientId, encounterBaseUrl);\n    setEncounters(data);\n\n    setShowMessageToast(false);\n    setProgress(\"0%\");\n    //setToastMessage(\"\");\n\n    return data;\n  };\n\n  const sendNotificationUU = async () => {\n    setToastMessage('Sending encounter notification to Unite Us ... ');\n    setProgress(\"25%\");\n    setShowMessageToast(true);\n    \n    const url = notificationUrl;\n    const notification = {\n      resourceType: \"Bundle\",\n      type: \"Event\",\n      entry: [\n        {\n          fullUrl: baseUrl + \"/Encounter/\" + currentEncounter,\n        },\n      ],\n    };\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"x-api-key\": \"sfsdfddfdsfsdfs32342343\", //\"wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03\",\n      },\n      body: JSON.stringify(notification),\n    });\n    setProgress(\"80%\");\n    const data = await res.json();\n    console.log(\"notification response: \", data);\n    setProgress(\"100%\");\n    setToastMessage(data.statusCode + \": \" + data.message);\n    setProgress(\"hide\");\n    return data;\n  };\n\n  const getAccessToken = async () => {\n    const url =\n      \"https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/authentication/token\";\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        \"x-api-key\": \"sfsdfddfdsfsdfs32342343\", //\"wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03\",\n      },\n      body: JSON.stringify({\n        privateKey: null,\n      }),\n    });\n    const data = await res.json();\n    const token = data.body.access_token;\n    console.log(\"access token \", token);\n    return token;\n  };\n\n  const updateReferralStatus = async (taskFhirId, newStatus) => {\n    console.log(\"new status: \", newStatus);\n    setProgress(\"0%\");\n    setToastMessage(\"Updating Task Status ...\");\n    setShowMessageToast(true);\n\n    // fetch the Task first\n    let url =\n      \"https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/request/read\";\n    let res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        \"x-api-key\": \"sfsdfddfdsfsdfs32342343\",\n      },\n      body: JSON.stringify({\n        baseUrl: baseUrl,\n        resourceType: \"Task\",\n        resourceId: taskFhirId,\n      }),\n    });\n    let data = await res.json();\n    let task = data.response.body;\n    let headers = data.response.headers;\n    let eTag =\n      currentProfileName === \"Logica\"\n        ? headers[\"etag\"][0]\n        : headers[\"e-tag\"][0];\n    console.log(\"task: \", task);\n    console.log(\"headers\", headers);\n\n    setProgress(\"5%\");\n    // update status and match header\n    task.status = newStatus.value;\n    let epicCode = mapToEpicCode(newStatus.rejectReason.reason.text);\n    if (newStatus.value === \"rejected\") {\n      task.statusReason = {\n        coding: [\n          {\n            system:\n              currentProfileName === \"Logica\"\n                ? \"HTTPS://UNITEUS.COM/IO/STRUCTUREDEFINITION/STATUS-REASON\"\n                : \"urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025\",\n            code: epicCode.code,\n            display: epicCode.display,\n          },\n        ],\n        text: `${newStatus.rejectReason.reason.value}. ${newStatus.rejectReason.note}`,\n      };\n    }\n    console.log(\"new task: \", task);\n\n    // send Task update requester\n    url =\n      \"https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/request/update\";\n    res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        \"x-api-key\": \"sfsdfddfdsfsdfs32342343\",\n      },\n      body: JSON.stringify({\n        baseUrl: baseUrl,\n        resourceType: \"Task\",\n        resourceId: taskFhirId,\n        etag: eTag,\n        resource: task,\n      }),\n    });\n\n    setProgress(\"10%\");\n    setToastMessage(\"Retrieving FHIR Resources ...\");\n    await getReferrals(currentEncounter, baseUrl);\n    setShowMessageToast(false);\n    setProgress(\"0%\");\n    return;\n  };\n\n  const mapToEpicCode = (uuCode) => {\n    switch (uuCode) {\n      case \"Not Eligible\":\n        return {\n          system: \"urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025\",\n          code: \"104\",\n          display:\n            \"Patient does not meet the level of care required for admission\",\n        };\n      case \"No Capacity\":\n        return {\n          system: \"urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025\",\n          code: \"101\",\n          display: \"Facility Full\",\n        };\n      case \"Do Not Provide Service\":\n        return {\n          system: \"urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025\",\n          code: \"103\",\n          display: \"Facility cannot provide for patient's needs\",\n        };\n      case \"Duplicate\":\n      case \"Unable to Contact Client\":\n      case \"Other\":\n      default:\n        return {\n          system: \"urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025\",\n          code: \"99\",\n          display: \"Other (Comment)\",\n        };\n    }\n  };\n\n  useEffect(() => {\n    const setProfile = async (profileName) => {\n      await switchProfile(profileName);\n    };\n\n    setProfile(defaultProfileName);\n  }, []);\n\n  useEffect(() => {\n    const updateFhir = async () => {\n      await refreshProfileSettings();\n    };\n\n    updateFhir();\n  }, [accessToken]);\n\n  return (\n    <div className=\"App\">\n      <Header\n        patient={patient}\n        provider={provider}\n        profileName={currentProfileName}\n        switchProfile={switchProfile}\n      />\n\n      <div\n        className={\n          showMessageToast ? \"toast bg-warning text-secondary show\" : \"toast\"\n        }\n        role=\"alert\"\n        aria-live=\"assertive\"\n        aria-atomic=\"true\"\n        id=\"messageToast\"\n      >\n        <div className=\"toast-header\">\n          <strong className=\"me-auto\">Please Wait ...</strong>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"messageToast\" aria-label=\"Close\" onClick={() => {setShowMessageToast(false)}}></button>\n        </div>\n        <div className=\"toast-body\">\n          {toastMessage}\n          { progress === \"hide\" ? null :\n          <>\n          <div className=\"spinner-border text-warning\" role=\"status\">\n            <span className=\"visually-hidden\">...</span>\n          </div>\n          <div className=\"progress my-2\">\n            <div\n              className=\"progress-bar bg-warning progress-bar-striped progress-bar-animated\"\n              role=\"progressbar\"\n              style={{ width: progress }}\n              aria-valuenow=\"0\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            ></div>\n          </div>\n          </>\n          }\n        </div>\n      </div>\n\n      <div className=\"container-fluid\">\n        <div className=\"row mt-1 mx-0\">\n          <Encounters\n            encounterList={encounters}\n            currentEncounter={currentEncounter}\n            changeCurrentEncounter={changeCurrentEncounter}\n            refreshEncounters={getEncounters}\n          />\n          <Referrals\n            onCreate={createReferral}\n            referralList={referrals}\n            currentEncounter={currentEncounter}\n            sendNotificationUU={sendNotificationUU}\n            profileName={currentProfileName}\n            updateReferralStatus={updateReferralStatus}\n            baseUrl={baseUrl}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}