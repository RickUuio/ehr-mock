{"version":3,"sources":["components/Patient.js","components/Provider.js","components/ProfileSelector.js","components/Header.js","components/Encounters.js","components/EncounterSummary.js","components/CreateReferral.js","components/ReferralSummary.js","components/StatusSelector.js","components/Referrals.js","components/Profiles.js","App.js","reportWebVitals.js","index.js"],"names":["Patient","patient","className","style","color","firstName","lastName","dob","gender","mrn","fhirId","Provider","provider","uuid","ProfileSelector","profileName","switchProfile","role","aria-label","id","type","name","autoComplete","defaultChecked","onClick","class","htmlFor","Header","title","defaultProps","Encounters","encounterList","currentEncounter","changeCurrentEncounter","refreshEncounters","console","log","length","map","encounter","index","selected","resource","eClassName","visible","encounterSelected","href","fullUrl","period","start","split","display","EncounterSummary","toggleShowNewReferral","showNewReferral","sendNotificationUU","toggle","disabled","CreateReferral","onCreate","useState","referredToGroupIds","setReferredToGroupIds","referredFromGroupId","setReferredFromGroupId","networkId","setNetworkId","serviceType","setServiceType","description","setDescription","attachDocument","setAttachDocument","onSubmit","e","preventDefault","alert","placeholder","readOnly","value","onChange","target","text","options","selectedIndex","rows","cols","checked","for","ReferralSummary","referral","showFhirSource","editReferralStatus","expandReferralId","setExpandReferralId","showSource","fullJson","findUUID","identifier","find","entry","system","toUpperCase","expandStatus","referralId","status","rowColor","Task","data-bs-toggle","data-bs-target","ServiceRequest","aria-expanded","aria-controls","authoredOn","data-bs-placement","currentStatus","orderDetail","owner","colspan","scoope","resourceType","Practitioner","requester","supportingInfo","DocumentReference","lastModified","Organization","family","given","Consent","consent","scope","provision","end","documentReference","Binary","binary","contentType","download","data","Communication","communication","sent","sender","recipient","payload","contentString","contentReference","StatusSelector","showReferralStatus","currentReferralStatus","closeReferralStatusEdit","newReferralStatus","setNewReferralStatus","rejectReason","setRejectReason","rejectReasonNote","setRejectReasonNote","enforceBusinessRule","setEnforceBusinessRule","closeStatusEdit","changeStatus","newStatus","statusEnabled","stageColor","stage","colorDone","newStage","Modal","size","show","onHide","Title","Body","rowSpan","colSpan","display_name","option","Footer","Button","variant","reason","note","Referrals","referralList","updateReferralStatus","setShowNewReferral","setShowSource","setShowReferralStatus","setFullJson","setCurrentReferralStatus","editReferralId","setEditReferralId","closeWindow","closeButton","JSON","stringify","undefined","Profile_Epic","defaultPatient","defaultProvider","groupId","defaultEncounter","defaultDocumentReference","defaultBaseUrl","defaultNotificationUrl","accessToken","Profile_Epic_2","Profile_Logica","App","defaultProfile","defaultProfileName","currentProfileName","setCurrentProfileName","setPatient","setProvider","setCurrentEncounter","access_token","setAccessToken","baseUrl","setBaseUrl","notificationUrl","setNotificationUrl","referrals","setReferrals","encounters","setEncounters","sampleDocumentReference","setSampleDocumentReference","toastMessage","setToastMessage","showMessageToast","setShowMessageToast","progress","setProgress","a","newProfile","getAccessToken","token","refreshProfileSettings","getEncounters","createReferral","nowISO","Date","toISOString","url","intent","category","coding","code","priority","subject","reference","fetch","method","headers","body","res","json","newServiceRequestId","basedOn","newTaskId","partOf","newCommunicationId","getReferrals","fetchReferrals","encounterId","referralBaseUrl","Accept","Authorization","entryList","total","forEach","push","patientId","serviceRequestId","practitionerId","organizationId","entryId","fetchCommunications","communications","fetchDocumentReferences","documentReferences","fetchBinaries","binaryList","fetchConsents","consentList","sort","b","timeA","getTime","fetchEncounters","encounterBaseUrl","taskId","documentList","documentReferenceList","content","attachment","patientFhirId","currentBaseUrl","notification","privateKey","taskFhirId","resourceId","task","response","eTag","epicCode","mapToEpicCode","statusReason","etag","uuCode","useEffect","setProfile","updateFhir","aria-live","aria-atomic","width","aria-valuenow","aria-valuemin","aria-valuemax","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26952769.chunk.js","sourcesContent":["import { FaRegUser } from \"react-icons/fa\";\n\nconst Patient = ({patient}) => {\n  return (\n    <div className=\"p-2\">\n      <h4 style = {{ color: \"yellow\"}}>\n          <FaRegUser />\n          {patient.firstName} {patient.lastName}\n      </h4>\n      <h6>\n      <span className='badge bg-light text-dark'>DOB</span> : {patient.dob}\n      <span>    </span> \n      <span className='badge bg-light text-dark'>Gender</span> : {patient.gender}\n      </h6>\n      <h6><span className='badge bg-light text-dark'>MRN</span> : {patient.mrn}</h6>\n      <h6><span className='badge bg-light text-dark'>FHIR ID</span> : {patient.fhirId}</h6>\n    </div>\n  );\n};\n\nexport default Patient;\n","import { FaUserMd } from \"react-icons/fa\";\n\nconst Provider = ({ provider }) => {\n  return (\n    <div className=\"p-2\">\n      <h4 style={{ color: \"HotPink\" }}>\n        {provider.firstName} {provider.lastName} <FaUserMd></FaUserMd>\n      </h4>\n      <h6><span className='badge bg-light text-dark'>FHIR ID</span> : {provider.fhirId}</h6>\n      <h6><span className='badge bg-light text-dark'>UUID </span> : {provider.uuid}</h6>\n    </div>\n  );\n};\n\nexport default Provider;\n","const ProfileSelector = ({ profileName, switchProfile }) => {\n  return (\n    <div className=\"btn-group mb-2\" role=\"group\" aria-label=\"Profile selector\" id=\"profileGroup\">\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnProfile\"\n        id=\"profileEpic\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === \"Epic\"}\n        onClick={() => {\n          profileName = \"Epic\";\n          switchProfile(\"Epic\");\n        }}\n      />\n      <label class=\"btn btn-outline-danger\" htmlFor=\"profileEpic\">\n        Calvin @Epic\n      </label>\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnProfile\"\n        id=\"profileEpic2\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === \"Epic2\"}\n        onClick={() => {\n          profileName = \"Epic2\";\n          switchProfile(\"Epic2\");\n        }}\n      />\n      <label class=\"btn btn-outline-danger\" htmlFor=\"profileEpic2\">\n        Beverly @Epic\n      </label>\n      <input\n        type=\"radio\"\n        className=\"btn-check\"\n        name=\"btnProfile\"\n        id=\"profileLogica\"\n        autoComplete=\"off\"\n        defaultChecked={profileName === \"Logica\"}\n        onClick={() => {\n          profileName = \"Logica\";\n          switchProfile(\"Logica\");\n        }}\n      />\n      <label className=\"btn btn-outline-info\" htmlFor=\"profileLogica\">\n        Beverly @Logica\n      </label>\n    </div>\n  );\n};\n\nexport default ProfileSelector;\n","import PropTypes from \"prop-types\";\nimport Patient from \"./Patient\";\nimport Provider from \"./Provider\";\nimport ProfileSelector from \"./ProfileSelector\";\nimport { FaFire } from \"react-icons/fa\";\n\nconst Header = ({ title, patient, provider, profileName, switchProfile }) => {\n  return (\n    <header>\n      <div id=\"navbarTop\">\n        <div className=\"row\">\n          <div className=\"col-lg-6 col-md-12 order-lg-2\">\n            <h2 className=\"pt-4\">\n              <FaFire style={{ color: \"#d60c05ee\" }} /> {title}\n            </h2>\n            <ProfileSelector profileName = {profileName} switchProfile = {switchProfile} />\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 order-lg-1\">\n            <Patient patient={patient} />\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 order-lg-3\">\n            <Provider provider={provider} />\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: \"Mock EHR : : Social Care Referrals\",\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n// const headingStyle = {\n//   color: \"white\",\n//   backgroundColor: \"#2c405a\",\n// };\n\nexport default Header;\n","import {FcRefresh} from 'react-icons/fc'\nimport {FaCalendarCheck} from 'react-icons/fa'\n\nconst Encounters = ({ encounterList, currentEncounter = 'smart-2', changeCurrentEncounter, refreshEncounters }) => {\n  const refresh = () => {\n    console.log(\"Retrieving patient's encounters\");\n    refreshEncounters();\n  };\n\n  const setCurrentEncounter = (encounterSelected) => {\n    changeCurrentEncounter(encounterSelected)\n  }\n\n  return (\n    <div className=\"encounter col-md-3 col-lg-2 mx-0 px-0\">\n      <div\n        className=\"btn btn-default btn-lg btn-block table-hover mx-0\"\n        onClick={refresh}\n      >\n        All Encounters\n        <div className=\"badge bg-primary mx-2\">{encounterList.length}</div>\n        <FcRefresh />\n      </div>\n\n      <dl>\n        {encounterList.map((encounter, index) => {\n          const selected = (encounter.resource.id === currentEncounter)\n          const eClassName = selected\n            ? \"row list-hover m-0 px-2 text-break selected\"\n            : \"row list-hover m-0 px-2 text-break\";\n          const visible = selected\n            ? \"visible\"\n            : \"invisible\";\n\n            return <div key={index} className={eClassName} onClick={() => setCurrentEncounter(encounter.resource.id)}>\n            <dt>\n              <a href={encounter.fullUrl}>{encounter.resource.id} <FaCalendarCheck className={visible} /></a>\n            </dt>\n            <dd>\n              { <div>{encounter.resource.period.start.split(\"T\")[0]}</div> }\n              { <div> {encounter.resource.class.display}</div> }\n            </dd>\n          </div>\n        }\n        )\n      }\n      </dl>\n    </div>\n  );\n};\n\nexport default Encounters;\n","const EncounterSummary = ({\n  toggleShowNewReferral,\n  showNewReferral,\n  currentEncounter,\n  sendNotificationUU,\n  profileName,\n}) => {\n  const toggle = () => {\n    toggleShowNewReferral();\n  };\n\n  const sendNotification = () => {\n    console.log(\"sending an encounter notification to Unite Us...\");\n    sendNotificationUU();\n  };\n\n  return (\n    <div className=\"encounterSummary\">\n      <div className=\"row pt-2 row-cols-1 row-cols-lg-3\">\n        <div className=\"col mx-auto text-break\">\n          <h4>Current Encounter: {currentEncounter}</h4>\n        </div>\n        <div className=\"col\">\n        {!showNewReferral ? (\n          \n          <button\n            className=\"btn btn-primary btn-block mx-1\"\n            onClick={toggle}\n            disabled={profileName === \"Epic\"}\n          >\n            Create New Referral\n          </button>\n     \n        ) : (\n          <button\n            className=\"btn btn-warning btn-block col mx-1\"\n            onClick={toggle}\n          >\n            Cancel New Referral\n          </button>\n        )}\n     </div>\n     <div className=\"col\">\n        <button\n          className=\"btn btn-primary btn-block col mx-1\"\n          onClick={sendNotification}\n        >\n          Send Notification to Unite Us\n        </button>\n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EncounterSummary;\n","import { useState } from \"react\";\nimport { GrAttachment } from \"react-icons/gr\";\n\nexport const CreateReferral = ({ onCreate, toggleShowNewReferral }) => {\n  const [referredToGroupIds, setReferredToGroupIds] = useState(\"\");\n  const [referredFromGroupId, setReferredFromGroupId] = useState(\"\");\n  const [networkId, setNetworkId] = useState(\"\");\n  const [serviceType, setServiceType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [attachDocument, setAttachDocument] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!serviceType) {\n      alert(\"Please select a service for the referral!\");\n      return;\n    }\n\n    onCreate({\n      serviceType,\n      description,\n      referredToGroupIds,\n      referredFromGroupId,\n      networkId,\n      attachDocument,\n    });\n\n    setReferredToGroupIds(\"\");\n    setReferredFromGroupId(\"demo-hospital\");\n    setNetworkId(\"demo-network\");\n    setServiceType(\"\");\n    setDescription(\"\");\n    setAttachDocument(false);\n  };\n\n  const cancelReferralCreation = () => {\n    toggleShowNewReferral();\n  };\n  return (\n    <div className=\"newReferral\">\n      <form className=\"add-form\" onSubmit={onSubmit}>\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SENDING NETWORK</label>\n              <div>\n                <input\n                  className=\"form-select\"\n                  type=\"text\"\n                  placeholder=\"Healthy Demo Network\"\n                  readOnly\n                  disabled\n                  value={networkId}\n                  onChange={(e) => setNetworkId(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label className=\"col-form-label\">RECEIVING NETWORK</label>\n              <div>\n                <input\n                  className=\"form-select\"\n                  type=\"text\"\n                  readOnly\n                  disabled\n                  placeholder=\"Healthy Demo Network\"\n                  value={networkId}\n                  onChange={(e) => setNetworkId(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SENDER</label>\n              <div>\n                <input\n                  className=\"form-select\"\n                  type=\"text\"\n                  readOnly\n                  disabled\n                  placeholder=\"Local Hospital Center\"\n                  value={referredFromGroupId}\n                  onChange={(e) => setReferredFromGroupId(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"col-lg-6\">\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">SERVICE TYPE</label>\n              <div>\n                <select\n                  className=\"form-select\"\n                  value={serviceType.value}\n                  onChange={(e) =>\n                    setServiceType({\n                      value: e.target.value,\n                      text: e.target.options[e.target.selectedIndex].text,\n                    })\n                  }\n                >\n                  <option>Select a service ...</option>\n                  <option value=\"f020d616-5016-4fb7-9fad-91d8d99cd7a1\">\n                    Emergency Food\n                  </option>\n                  <option value=\"f6760383-7fc4-442b-b686-fc5055bfec06\">\n                    Emergency Housing\n                  </option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">RECEIPIENT</label>\n              <div>\n                <select\n                  className=\"form-select\"\n                  value={referredToGroupIds.value}\n                  onChange={(e) =>\n                    setReferredToGroupIds({\n                      value: e.target.value,\n                      text: e.target.options[e.target.selectedIndex].text,\n                    })\n                  }\n                >\n                  <option>Select an organization ...</option>\n                  <option value=\"14742\">Housing California</option>\n                  <option value=\"14733\">River City Food Bank</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\">INITIAL COMMUNICATION</label>\n              <div>\n                <textarea\n                  className=\"form-control\"\n                  rows=\"3\"\n                  cols=\"50\"\n                  placeholder=\"Enter a description for the referral\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <div className=\"form-check form-switch mx-2 text-start\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  id=\"flexSwitchCheckDefault\"\n                  checked={attachDocument}\n                  onChange={(e) => setAttachDocument(e.target.checked)}\n                />\n                <label\n                  className=\"form-check-label\"\n                  for=\"flexSwitchCheckDefault\"\n                >\n                  Attach document to the communication{\" \"}\n                  <GrAttachment></GrAttachment>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row d-inline\">\n          <input\n            value=\"Cancel\"\n            className=\"btn btn-warning col-md-6 mt-4\"\n            onClick={cancelReferralCreation}\n            readOnly\n          />\n\n          <input\n            value=\"Submit\"\n            className=\"btn btn-primary col-md-6 mt-4\"\n            onClick={onSubmit}\n            readOnly\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateReferral;\n","import { IoOpenOutline, IoCloudDownloadSharp } from \"react-icons/io5\";\nimport { useState } from \"react\";\nimport { MdExpandLess, MdExpandMore } from \"react-icons/md\";\nimport {FaEdit} from \"react-icons/fa\";\n\nfunction ReferralSummary({ referral, showFhirSource, editReferralStatus }) {\n  const [expandReferralId, setExpandReferralId] = useState(\"\");\n\n  const showSource = (fullJson) => {\n    showFhirSource(fullJson, true);\n  };\n\n  const editStatus = (referralId, currentStatus) => {\n    editReferralStatus(referralId, currentStatus);\n  }\n\n  let findUUID = (resource) => {\n    const cboUUID = resource.identifier.find(\n      (entry) =>\n        entry.system.toUpperCase() ===\n        \"HTTPS://UNITEUS.COM/IO/STRUCTUREDEFINITION/CBO-UUID\"\n    );\n    return cboUUID;\n  };\n\n  const toggleExpand = (referralId) => {\n    if (expandReferralId === referralId) setExpandReferralId(\"\");\n    else setExpandReferralId(referralId);\n  };\n\n  const expandStatus = (referralId) => {\n    return expandReferralId === referralId;\n  };\n\n  const rowColor = (status) => {\n    switch (status) {\n      case \"accepted\":\n        return \"primary\";\n      case \"in-progress\":\n        return \"info\";\n      case \"rejected\":\n        return \"danger\";\n      case \"failed\":\n        return \"danger\";\n      case \"completed\":\n        return \"success\";\n      case \"cancelled\":\n        return \"danger\";\n      default:\n        return \"light\";\n    }\n  };\n\n  return (\n    <>\n      <tr\n        className={\"align-middle table-\" + rowColor(referral.Task?.resource?.status)}\n        data-bs-toggle=\"collapse\"\n        data-bs-target={\"#referral\" + referral.ServiceRequest.resource.id}\n        aria-expanded=\"false\"\n        aria-controls={\"referral\" + referral.ServiceRequest.resource.id}\n      >\n        <td>{referral.ServiceRequest.resource.authoredOn}</td>\n        <td>\n          <div\n            className=\"btn btn-outline-primary my-0\" data-bs-toggle=\"tooltip\" title=\"Click to edit referral status\" data-bs-placement=\"top\"\n            onClick={() => editStatus(referral.Task?.resource?.id, referral.Task?.resource?.status)}\n          >\n            {referral.Task?.resource?.status}  <FaEdit></FaEdit>\n          </div>\n        </td>\n        <td>\n          {referral.ServiceRequest.resource.orderDetail\n            ? referral.ServiceRequest.resource.orderDetail[0].text\n            : \"Not Confirmed\"}\n        </td>\n        <td>{referral.Task?.resource?.owner?.display}</td>\n        <td>\n          <div className=\"form-check form-switch mx-2 text-start\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              role=\"button\"\n              id={\"flexSwitchCheck\" + referral.ServiceRequest.resource.id}\n              checked={expandStatus(referral.ServiceRequest.resource.id)}\n              onChange={() => toggleExpand(referral.ServiceRequest.resource.id)}\n            />\n            <label\n              className=\"form-check-label\"\n              role=\"button\"\n              for={\"flexSwitchCheck\" + referral.ServiceRequest.resource.id}\n            >\n              Fhir Resources{\" \"}\n              {expandStatus(referral.ServiceRequest.resource.id) ? (\n                <MdExpandLess></MdExpandLess>\n              ) : (\n                <MdExpandMore></MdExpandMore>\n              )}\n            </label>\n          </div>\n        </td>\n      </tr>\n      <tr\n        className={\n          expandStatus(referral.ServiceRequest.resource.id)\n            ? \"table-light\"\n            : \"collapse\"\n        }\n        id={\"referral\" + referral.ServiceRequest.resource.id}\n      >\n        <td colspan=\"5\">\n          <div className=\"row px-3\">\n            <table className=\"table table-sm align-middle text-start\">\n              <tbody>\n                <tr>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() =>\n                        showSource(referral.ServiceRequest.resource)\n                      }\n                    >\n                      {referral.ServiceRequest.resource.resourceType}{\" \"}\n                      <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td>\n                    Referral was authored on{\" \"}\n                    <div className=\"btn btn-outline-primary disabled\">\n                      {referral.ServiceRequest.resource.authoredOn}\n                    </div>{\" \"}\n                    by{\" \"}\n                    <div\n                      className=\"btn btn-outline-primary\"\n                      onClick={() => showSource(referral.Practitioner.resource)}\n                    >\n                      {referral.ServiceRequest.resource.requester.display}{\" \"}\n                      <IoOpenOutline />\n                    </div>\n                    .{\" \"}\n                    {referral.ServiceRequest.resource.orderDetail ? (\n                      <span>\n                        {\"Service type is \"}\n                        <div className=\"btn btn-outline-primary disabled\">\n                          {referral.ServiceRequest.resource.orderDetail[0].text}\n                        </div>\n                        .\n                      </span>\n                    ) : (\n                      \"Service type has not been confirmed yet.\"\n                    )}\n                    {referral.ServiceRequest.resource.supportingInfo ? (\n                      <span>\n                        {\" \"}\n                        Attached is a supporting document of\n                        <div\n                          className=\"btn btn-outline-primary\"\n                          onClick={() =>\n                            showSource(referral.DocumentReference[0])\n                          }\n                        >\n                          {referral.DocumentReference[0].type.text}{\" \"}\n                          <IoOpenOutline />\n                        </div>\n                      </span>\n                    ) : null}\n                  </td>\n                </tr>\n                <tr>\n                  <th scoope=\"row\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={() => showSource(referral.Task.resource)}\n                    >\n                      {referral.Task.resource.resourceType} <IoOpenOutline />\n                    </button>\n                  </th>\n                  <td>\n                    <span>\n                      Referral status is{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Task?.resource?.status}\n                      </div>\n                      , last modified on{\" \"}\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Task?.resource?.lastModified}\n                      </div>\n                    </span>{\" \"}\n                    <span>\n                      Recipient is{\" \"}\n                      <div\n                        className=\"btn btn-outline-primary\"\n                        onClick={() =>\n                          showSource(referral.Organization?.resource)\n                        }\n                      >\n                        {referral.Task?.resource?.owner?.display}{\" \"}\n                        <IoOpenOutline />\n                      </div>\n                    </span>\n                  </td>\n                </tr>\n                {referral.Organization ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() =>\n                          showSource(referral.Organization.resource)\n                        }\n                      >\n                        {referral.Organization.resource.resourceType}{\" \"}\n                        <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      <span>\n                        Recipient is{\" \"}\n                        <div className=\"btn btn-outline-primary disabled\">\n                          {referral.Organization.resource.name}\n                        </div>\n                      </span>\n                      {findUUID(referral.Organization.resource) ? (\n                        <span>\n                          Their Unite Us UUID is{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {findUUID(referral.Organization.resource).value}\n                          </div>\n                        </span>\n                      ) : null}\n                    </td>\n                  </tr>\n                ) : null}\n                {referral.Patient ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() => showSource(referral.Patient.resource)}\n                      >\n                        {referral.Patient.resource.resourceType}{\" \"}\n                        <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Patient.resource.name[0].family},{\" \"}\n                        {referral.Patient.resource.name[0].given[0]}\n                      </div>\n                    </td>\n                  </tr>\n                ) : null}\n                {referral.Practitioner ? (\n                  <tr>\n                    <th scoope=\"row\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-link\"\n                        onClick={() =>\n                          showSource(referral.Practitioner.resource)\n                        }\n                      >\n                        {referral.Practitioner.resource.resourceType}{\" \"}\n                        <IoOpenOutline />\n                      </button>\n                    </th>\n                    <td>\n                      <div className=\"btn btn-outline-primary disabled\">\n                        {referral.Practitioner.resource.name[0].family},{\" \"}\n                        {referral.Practitioner.resource.name[0].given[0]}\n                      </div>\n                    </td>\n                  </tr>\n                ) : null}\n\n                {referral.Consent?.map((consent, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(consent.resource)}\n                        >\n                          {consent.resource.resourceType} <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          Consent status is{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.status}\n                          </div>\n                          . Scope is{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.scope?.text}\n                          </div>\n                          . Provision period is from\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.provision?.period?.start}\n                          </div>\n                          to\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {consent.resource.provision?.period?.end}\n                          </div>\n                        </span>\n                      </td>\n                    </tr>\n                  );\n                })}\n\n                {referral.DocumentReference?.map((documentReference, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(documentReference)}\n                        >\n                          {documentReference.resourceType} <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          Document type is{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {documentReference.type.text}\n                          </div>\n                          . Document description is{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {documentReference.description}\n                          </div>\n                        </span>\n                      </td>\n                    </tr>\n                  );\n                })}\n\n                {referral.Binary?.map((binary, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(binary)}\n                        >\n                          {binary.resourceType} <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          Content type is{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {binary.contentType}\n                          </div>\n                          .\n                        </span>{\" \"}\n                        <div className=\"btn btn-link\">\n                          <a\n                            download=\"Epic_CRN.pdf\"\n                            href={`data:application/pdf;base64,${binary.data}`}\n                            title=\"Download pdf document\"\n                          >\n                            Click to download PDF file <IoCloudDownloadSharp />\n                          </a>\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n\n                {referral.Communication?.map((communication, index) => {\n                  return (\n                    <tr key={index}>\n                      <th scoope=\"row\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-link\"\n                          onClick={() => showSource(communication.resource)}\n                        >\n                          {communication.resource.resourceType}{\" \"}\n                          <IoOpenOutline />\n                        </button>\n                      </th>\n                      <td>\n                        <span>\n                          On{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {communication.resource?.sent}\n                          </div>\n                          , sent from{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {communication.resource?.sender.display}\n                          </div>\n                          to{\" \"}\n                          <div className=\"btn btn-outline-primary disabled\">\n                            {communication.resource?.recipient[0].display}\n                          </div>\n                          .\n                        </span>\n                        {communication.resource.payload ? (\n                          <p>\n                            {\" \"}\n                            Note message:{\" \"}\n                            <div className=\"btn btn-outline-primary disabled\">\n                              {communication.resource.payload[0].contentString}\n                            </div>\n                          </p>\n                        ) : (\n                          <span> Note message is empty.</span>\n                        )}\n                        {communication.resource.payload &&\n                        communication.resource.payload[1]?.contentReference ? (\n                          <p>\n                            {\" \"}\n                            A{\" \"}\n                            <div\n                              className=\"btn btn-outline-primary\"\n                              onClick={() =>\n                                showSource(referral.DocumentReference[0])\n                              }\n                            >\n                              document <IoOpenOutline />\n                            </div>{\" \"}\n                            was attached to the communication.\n                          </p>\n                        ) : null}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </td>\n      </tr>\n    </>\n  );\n}\n\nexport default ReferralSummary;\n","import { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport {\n  FaAngleDoubleRight,\n  FaAngleDoubleLeft,\n  FaFlagCheckered,\n} from \"react-icons/fa\";\nimport { AiOutlineStop } from \"react-icons/ai\";\n\nconst StatusSelector = ({\n  showReferralStatus,\n  currentReferralStatus,\n  closeReferralStatusEdit,\n  profileName,\n}) => {\n  const [newReferralStatus, setNewReferralStatus] = useState(\"\");\n  const [rejectReason, setRejectReason] = useState({\n    value: \"Please select a reason ...\",\n  });\n  const [rejectReasonNote, setRejectReasonNote] = useState(\"\");\n  const [enforceBusinessRule, setEnforceBusinessRule] = useState(false);\n\n  const closeStatusEdit = () => {\n    setNewReferralStatus(\"\");\n    setRejectReason({ value: \"Please select a reason ...\" });\n    setRejectReasonNote(\"\");\n    closeReferralStatusEdit(null);\n  };\n\n  const submitStatusChange = () => {\n    setNewReferralStatus(newReferralStatus);\n    closeReferralStatusEdit({\n      value: newReferralStatus,\n      rejectReason: { reason: rejectReason, note: rejectReasonNote },\n    });\n  };\n\n  const changeStatus = (newStatus) => {\n    console.log(\"new status is: \", newStatus);\n    setNewReferralStatus(newStatus);\n  };\n\n  const statusEnabled = (status) => {\n    if (!enforceBusinessRule) return true;\n    // if (profileName === \"Logica\") return true;\n\n    switch (status) {\n      case \"requested\":\n        if (\n          currentReferralStatus === \"requested\" ||\n          currentReferralStatus === \"accepted\" ||\n          currentReferralStatus === \"rejected\" ||\n          currentReferralStatus === \"\"\n        )\n          return true;\n        else return false;\n      case \"accepted\":\n      case \"rejected\":\n        if (\n          currentReferralStatus === \"requested\" ||\n          currentReferralStatus === \"in-progress\" ||\n          currentReferralStatus === \"accepted\" ||\n          currentReferralStatus === \"rejected\" ||\n          currentReferralStatus === \"\"\n        )\n          return true;\n        else return false;\n\n      case \"completed\":\n      case \"failed\":\n        if (currentReferralStatus === \"in-progress\") return true;\n        else return false;\n\n      default:\n        return false;\n    }\n  };\n\n  const rejectReasonOptions = () => {\n    const uuRejectReasons = [\n      {\n        display_name: \"Not Eligible\",\n        value: \"Client is not eligible for our services\",\n      },\n      {\n        display_name: \"Duplicate\",\n        value: \"Duplicate, case already exists in the system\",\n      },\n      {\n        display_name: \"No Capacity\",\n        value: \"We do not have capacity to serve client\",\n      },\n      {\n        display_name: \"Do Not Provide Service\",\n        value: \"We do not provide the services requested/needed\",\n      },\n      {\n        display_name: \"Unable to Contact Client\",\n        value: \"We were unable to contact the client\",\n      },\n      { display_name: \"Other\", value: \"Other\" },\n    ];\n\n    return uuRejectReasons.map((option) => {\n      return <option value={option.value}>{option.display_name}</option>;\n    });\n  };\n\n  const rowColor = (status) => {\n    switch (status) {\n      case \"accepted\":\n        return \"primary\";\n      case \"in-progress\":\n        return \"info\";\n      case \"rejected\":\n        return \"danger\";\n      case \"failed\":\n        return \"danger\";\n      case \"completed\":\n        return \"success\";\n      case \"cancelled\":\n        return \"danger\";\n      default:\n        return \"dark\";\n    }\n  };\n\n  const stageColor = (stage) => {\n    const colorDone = rowColor(newReferralStatus || currentReferralStatus);\n    const colorNotDone = \"table-secondary\";\n    let newStage = 1;\n\n    switch (newReferralStatus || currentReferralStatus) {\n      case \"requested\":\n        newStage = 1;\n        break;\n      case \"accepted\":\n        newStage = 2;\n        break;\n      case \"in-progress\":\n        newStage = 3;\n        break;\n      case \"completed\":\n        newStage = 4;\n        break;\n      default:\n        newStage = 5;\n    }\n    return newStage < stage ? colorNotDone : \"table-\" + colorDone;\n  };\n\n  return (\n    <Modal\n      id=\"referralStatus\"\n      size=\"lg\"\n      show={showReferralStatus}\n      onHide={closeStatusEdit}\n    >\n      <Modal.Header className=\"bg-light\">\n        <Modal.Title>Update Referral Status</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"row my-3 text-center\">\n          <div className=\"col-6\">\n            {\"Current Stauts: \"}\n            <div\n              className={\n                \"btn disabled btn-outline-\" + rowColor(currentReferralStatus)\n              }\n            >\n              {currentReferralStatus}\n            </div>\n          </div>\n          <div className=\"col-6\">\n            {\"New Status    : \"}\n            <div\n              className={\n                \"btn active btn-outline-\" +\n                rowColor(newReferralStatus || currentReferralStatus)\n              }\n            >\n              {newReferralStatus || currentReferralStatus}\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"btn-group mb-2 text-center container-fluid\"\n          role=\"group\"\n          aria-label=\"Referral status selector\"\n          id=\"statusGroup\"\n        >\n          <table className=\"table table-bordered table-sm\">\n            <thead>\n              <tr>\n                <th className={stageColor(1)}>\n                  INITIATE{\" \"}\n                  <span className=\"float-end\">\n                    <FaAngleDoubleRight />\n                  </span>\n                </th>\n                <th className={stageColor(2)}>\n                  RESPONSE{\" \"}\n                  <span className=\"float-end\">\n                    <FaAngleDoubleRight />\n                  </span>\n                </th>\n                <th className={stageColor(3)}>\n                  CONFIRM{\" \"}\n                  <span className=\"float-end\">\n                    <FaAngleDoubleRight />\n                  </span>\n                </th>\n                <th className={stageColor(4)}>\n                  RESOLVE{\" \"}\n                  <span className=\"float-end\">\n                    <FaFlagCheckered />\n                  </span>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td rowSpan=\"3\" className=\"table-light\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusRequested\"\n                      autoComplete=\"off\"\n                      value=\"requested\"\n                      defaultChecked={currentReferralStatus === \"requested\"}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled(\"requested\")}\n                    />\n                    <label\n                      class=\"btn btn-outline-dark\"\n                      htmlFor=\"statusRequested\"\n                    >\n                      {!statusEnabled(\"requested\") ? <AiOutlineStop /> : null}{\" \"}\n                      requested{\" \"}\n                      <span className=\"float-end\">\n                        <FaAngleDoubleRight />\n                      </span>\n                    </label>\n                  </div>\n                </td>\n\n                <td colSpan=\"3\" className=\"table-light\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check btn-block\"\n                      name=\"btnStatus\"\n                      id=\"statusCancelled\"\n                      autoComplete=\"off\"\n                      value=\"cancelled\"\n                      defaultChecked={currentReferralStatus === \"cancelled\"}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled(\"cancelled\")}\n                    />\n                    <label\n                      class=\"btn btn-outline-danger\"\n                      htmlFor=\"statusCancelled\"\n                    >\n                      {!statusEnabled(\"cancelled\") ? <AiOutlineStop /> : null}{\" \"}\n                      cancelled{\" \"}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                  </div>\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusAccepted\"\n                      autoComplete=\"off\"\n                      value=\"accepted\"\n                      defaultChecked={currentReferralStatus === \"accepted\"}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled(\"accepted\")}\n                    />\n                    <label\n                      class=\"btn btn-outline-primary\"\n                      htmlFor=\"statusAccepted\"\n                    >\n                      <span className=\"float-start\">\n                        <FaAngleDoubleLeft />\n                      </span>{\" \"}\n                      {!statusEnabled(\"accepted\") ? <AiOutlineStop /> : null}{\" \"}\n                      accepted{\" \"}\n                      <span className=\"float-end\">\n                        <FaAngleDoubleRight />\n                      </span>\n                    </label>\n                  </div>\n                </td>\n                <td className=\"table-light\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusInProgress\"\n                      autoComplete=\"off\"\n                      value=\"in-progress\"\n                      defaultChecked={currentReferralStatus === \"in-progress\"}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled(\"in-progress\")}\n                    />\n                    <label\n                      class=\"btn btn-outline-info\"\n                      htmlFor=\"statusInProgress\"\n                    >\n                      <span className=\"float-start\">\n                        <FaAngleDoubleLeft />\n                      </span>{\" \"}\n                      {!statusEnabled(\"in-progress\") ? <AiOutlineStop /> : null}{\" \"}\n                      in-progress{\" \"}\n                      <span className=\"float-end\">\n                        <FaAngleDoubleRight />\n                      </span>\n                    </label>\n                  </div>\n                </td>\n                <td>\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusCompleted\"\n                      autoComplete=\"off\"\n                      value=\"completed\"\n                      defaultChecked={currentReferralStatus === \"completed\"}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled(\"completed\")}\n                    />\n                    <label\n                      class=\"btn btn-outline-success\"\n                      htmlFor=\"statusCompleted\"\n                    >\n                      {!statusEnabled(\"completed\") ? <AiOutlineStop /> : null}{\" \"}\n                      completed{\" \"}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                    <input\n                      type=\"radio\"\n                      className=\"btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusFailed\"\n                      autoComplete=\"off\"\n                      value=\"failed\"\n                      defaultChecked={currentReferralStatus === \"failed\"}\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      disabled={!statusEnabled(\"failed\")}\n                    />\n                    <label\n                      class=\"btn btn-outline-danger\"\n                      htmlFor=\"statusFailed\"\n                    >\n                      {!statusEnabled(\"failed\") ? <AiOutlineStop /> : null}{\" \"}\n                      failed{\" \"}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                  </div>\n                </td>\n              </tr>\n\n              <tr>\n                <td colspan=\"3\">\n                  <div className=\"d-grid gap-2\">\n                    <input\n                      type=\"radio\"\n                      className=\"btn btn-sm btn-check\"\n                      name=\"btnStatus\"\n                      id=\"statusRejected\"\n                      autoComplete=\"off\"\n                      value=\"rejected\"\n                      onClick={(e) => {\n                        changeStatus(e.target.value);\n                      }}\n                      defaultChecked={currentReferralStatus === \"rejected\"}\n                      disabled={!statusEnabled(\"rejected\")}\n                    />\n                    <label\n                      class=\"btn btn-outline-danger\"\n                      htmlFor=\"statusRejected\"\n                    >\n                      {!statusEnabled(\"rejected\") ? <AiOutlineStop /> : null}{\" \"}\n                      rejected{\" \"}\n                      <span className=\"float-end\">\n                        <FaFlagCheckered />\n                      </span>\n                    </label>\n                    <div\n                      className={\n                        newReferralStatus === \"rejected\" ? \"\" : \"d-none\"\n                      }\n                    >\n                      <div className=\"form-group\">\n                        <label className=\"col-form-label\">REJECT REASON</label>\n                        <div>\n                          <select\n                            className=\"form-select\"\n                            value={rejectReason.value}\n                            onChange={(e) =>\n                              setRejectReason({\n                                value: e.target.value,\n                                text: e.target.options[e.target.selectedIndex]\n                                  .text,\n                              })\n                            }\n                          >\n                            <option>Select a reason ...</option>\n                            {rejectReasonOptions()}\n                          </select>\n                        </div>\n                      </div>\n\n                      <div className=\"form-group\">\n                        <label className=\"col-form-label\">NOTE</label>\n                        <div>\n                          <textarea\n                            className=\"form-control\"\n                            rows=\"3\"\n                            cols=\"50\"\n                            placeholder=\"Enter a note for the reject reason\"\n                            value={rejectReasonNote}\n                            onChange={(e) =>\n                              setRejectReasonNote(e.target.value)\n                            }\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        \n          <div className=\"col form-check form-switch mx-2 float-start text-start\">\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              role=\"button\"\n              id=\"flexSwitchBusinessRule\"\n              checked={enforceBusinessRule}\n              onChange={() => setEnforceBusinessRule(!enforceBusinessRule)}\n            />\n            <label\n              className=\"form-check-label\"\n              role=\"button\"\n              for=\"flexSwitchBusinessRule\"\n            >\n              Enforce Epic Business Rules\n            </label>\n          </div>\n  \n        <Button className=\"col\" variant=\"warning\" onClick={closeStatusEdit}>\n          Cancel\n        </Button>\n        <Button className=\"col\" variant=\"primary\" onClick={submitStatusChange}>\n          Submit\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default StatusSelector;\n","import EncounterSummary from \"./EncounterSummary\";\nimport CreateReferral from \"./CreateReferral\";\nimport ReferralSummary from \"./ReferralSummary\";\nimport StatusSelector from \"./StatusSelector\";\nimport { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction Referrals({\n  onCreate,\n  referralList,\n  currentEncounter,\n  sendNotificationUU,\n  profileName,\n  updateReferralStatus,\n}) {\n  const [showNewReferral, setShowNewReferral] = useState(false);\n  const [showSource, setShowSource] = useState(false);\n  const [showReferralStatus, setShowReferralStatus] = useState(false);\n  const [fullJson, setFullJson] = useState();\n  const [currentReferralStatus, setCurrentReferralStatus] = useState(\"\");\n  //const [newReferralStatus, setNewReferralStatus] = useState(\n  //  currentReferralStatus\n  //);\n  const [editReferralId, setEditReferralId] = useState();\n\n  const toggleShowNewReferral = () => {\n    setShowNewReferral((showNewReferral) => !showNewReferral);\n  };\n\n  const onCreateReferral = (referral) => {\n    onCreate(referral);\n    toggleShowNewReferral();\n  };\n\n  const showFhirSource = (fullJson, show) => {\n    setFullJson(fullJson);\n    setShowSource(show);\n  };\n\n  const closeWindow = () => setShowSource(false);\n\n  const editReferralStatus = (referralId, currentStatus) => {\n    setShowReferralStatus(true);\n    setEditReferralId(referralId);\n    setCurrentReferralStatus(currentStatus);\n    //setNewReferralStatus(\"\");\n  };\n\n  const closeReferralStatusEdit = (newStatus) => {\n    setShowReferralStatus(false);\n    if (newStatus !== null) {\n      //setNewReferralStatus(newReferralStatus.value);\n      console.log(\"new status: \", newStatus.value, newStatus.rejectReason);\n      updateReferralStatus(editReferralId, newStatus);\n    } //else setNewReferralStatus(\"\");\n  };\n\n  return (\n    <div className=\"col-md-9 col-lg-10 px-0\">\n      <div className=\"referrals\">\n        <EncounterSummary\n          toggleShowNewReferral={toggleShowNewReferral}\n          showNewReferral={showNewReferral}\n          currentEncounter={currentEncounter}\n          sendNotificationUU={sendNotificationUU}\n          profileName={profileName}\n        />\n        {showNewReferral ? (\n          <CreateReferral\n            onCreate={onCreateReferral}\n            toggleShowNewReferral={toggleShowNewReferral}\n          />\n        ) : null}\n        <div className=\"referralList\">\n          <div className=\"h5 py-3\">\n            This encounter has{\" \"}\n            {referralList.length > 1\n              ? referralList.length + \" referrals.\"\n              : referralList.length === 1\n              ? \" 1 referral.\"\n              : \" no referrals.\"}\n          </div>\n          {referralList.length > 0 ? (\n            <table className=\"table table-hover\">\n              <thead>\n                <tr>\n                  <th>DATE SENT</th>\n                  <th>STATUS</th>\n                  <th>SERVICE TYPE</th>\n                  <th>RECEIPIENT</th>\n                  <th>EXPAND</th>\n                </tr>\n              </thead>\n              <tbody>\n                {referralList.map((referral, index) => (\n                  <ReferralSummary\n                    key={index}\n                    referral={referral}\n                    showFhirSource={showFhirSource}\n                    editReferralStatus={editReferralStatus}\n                  />\n                ))}\n              </tbody>\n            </table>\n          ) : null}\n        </div>\n      </div>\n      <Modal id=\"fhirSource\" size=\"lg\" show={showSource} onHide={closeWindow}>\n        <Modal.Header className=\"bg-light\" closeButton>\n          <Modal.Title>\n            {fullJson?.resourceType} : {fullJson?.id}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <pre id=\"json\">{JSON.stringify(fullJson, undefined, 2)}</pre>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"warning\" onClick={closeWindow}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <StatusSelector\n        showReferralStatus={showReferralStatus}\n        currentReferralStatus={currentReferralStatus}\n        closeReferralStatusEdit={closeReferralStatusEdit}\n        profileName={profileName}\n      ></StatusSelector>\n    </div>\n  );\n}\n\nexport default Referrals;\n","export const Profile_Epic = {\n  name: \"Epic\",\n\n  defaultPatient: {\n    firstName: \"Calvin\",\n    lastName: \"Ccm\",\n    gender: \"Male\",\n    dob: \"01/01/1990\",\n    mrn: \"203724\",\n    fhirId: \"e4ikKcC2Rp3EsZQh8Ac6C5A3\",\n    uuid: \"b5318891-3dc8-426a-af50-531e106ad1a1\",\n  },\n\n  defaultProvider: {\n    firstName: \"Case\",\n    lastName: \"Manager\",\n    fhirId: \"eaToFIkaJ32mO4K002q3BLw3\",\n    uuid: \"94e5f7ee-1425-42bc-8833-3474b687b125\",\n    groupId: \"bf4aa373-81eb-4da5-9980-2d3e51c57b3c\",\n    networkId: \"145ca925-ba86-490d-b404-35f4fe5ada66\",\n  },\n\n  defaultEncounter: \"eEDcHpsgsD0Pv4Ih8HnfOxA3\", //\"enZf6GWN2rMGQWF1rqqDgNg3\",\n  defaultDocumentReference: \"e1.cnazaNgltIElLYGLL4Sg3\",\n  defaultBaseUrl:\n    \"https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4\",\n  defaultNotificationUrl:\n    \"https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService\",\n  accessToken:\n    \"e2a4575581b3f57203e182b0b1f3dcea479baecd31bef125cc57f6dd4b8905ac\",\n};\n\nexport const Profile_Epic_2 = {\n  name: \"Epic2\",\n\n  defaultPatient: {\n    firstName: \"Beverly\",\n    lastName: \"Ccm\",\n    gender: \"Female\",\n    dob: \"01/01/1940\",\n    mrn: \"203722\",\n    fhirId: \"egHmZUd91rLItB1AqGV49Pg3\",\n    uuid: \"b5318891-3dc8-426a-af50-531e106ad1a1\",\n  },\n\n  defaultProvider: {\n    firstName: \"Case\",\n    lastName: \"Manager\",\n    fhirId: \"eaToFIkaJ32mO4K002q3BLw3\",\n    uuid: \"94e5f7ee-1425-42bc-8833-3474b687b125\",\n    groupId: \"bf4aa373-81eb-4da5-9980-2d3e51c57b3c\",\n    networkId: \"145ca925-ba86-490d-b404-35f4fe5ada66\",\n  },\n\n  defaultEncounter: \"eFBT3k94CLm3fCPMNlKH2DQ3\", //\"enZf6GWN2rMGQWF1rqqDgNg3\",\n  defaultDocumentReference: \"e.-1q0eXQDEZ.9mNdXwVjYA3\",\n  defaultBaseUrl:\n    \"https://apporchard.epic.com/interconnect-aocurprd-oauth/api/FHIR/R4\",\n  defaultNotificationUrl:\n    \"https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService\",\n  accessToken:\n    \"e2a4575581b3f57203e182b0b1f3dcea479baecd31bef125cc57f6dd4b8905ac\",\n};\n\nexport const Profile_Logica = {\n  name: \"Logica\",\n\n  defaultPatient: {\n    firstName: \"Beverly\",\n    lastName: \"Ccm\",\n    gender: \"Female\",\n    dob: \"01/01/1940\",\n    mrn: \"203722\",\n    fhirId: \"14730\",\n    uuid: \"b5318891-3dc8-426a-af50-531e106ad1a1\",\n  },\n  defaultProvider: {\n    firstName: \"Demo\",\n    lastName: \"Provider\",\n    fhirId: \"14734\",\n    uuid: \"94e5f7ee-1425-42bc-8833-3474b687b125\",\n    groupId: \"bf4aa373-81eb-4da5-9980-2d3e51c57b3c\",\n    networkId: \"145ca925-ba86-490d-b404-35f4fe5ada66\",\n  },\n\n  defaultEncounter: \"14732\",\n  defaultDocumentReference: \"14740\",\n\n  defaultBaseUrl: \"https://api.logicahealth.org/uufhircrn/open\",\n\n  defaultNotificationUrl:\n    \"https://fhir-crn.uniteustraining.com/rick/FhirNotificationWebService\",\n  accessToken: \"\",\n};\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Encounters from \"./components/Encounters\";\nimport Referrals from \"./components/Referrals\";\nimport { useState, useEffect } from \"react\";\nimport {\n  Profile_Epic,\n  Profile_Epic_2,\n  Profile_Logica,\n} from \"./components/Profiles\";\n\nfunction App() {\n  const defaultProfile = Profile_Epic;\n  const defaultProfileName = defaultProfile.name;\n  const [currentProfileName, setCurrentProfileName] =\n    useState(defaultProfileName);\n  //const [profile, setProfile] = useState(defaultProfile);\n  const [patient, setPatient] = useState(defaultProfile.defaultPatient);\n  const [provider, setProvider] = useState(defaultProfile.defaultProvider);\n  const [currentEncounter, setCurrentEncounter] = useState(\n    defaultProfile.defaultEncounter\n  );\n  const [accessToken, setAccessToken] = useState(defaultProfile.access_token);\n  const [baseUrl, setBaseUrl] = useState(defaultProfile.defaultBaseUrl);\n  const [notificationUrl, setNotificationUrl] = useState(\n    defaultProfile.defaultNotificationUrl\n  );\n  const [referrals, setReferrals] = useState([]);\n  const [encounters, setEncounters] = useState([]);\n\n  const [sampleDocumentReference, setSampleDocumentReference] = useState(\"\");\n\n  const [toastMessage, setToastMessage] = useState(\n    \"Retrieving FHIR resources ... \"\n  );\n  const [showMessageToast, setShowMessageToast] = useState(true);\n  const toggleShowMessageToast = () => setShowMessageToast(!showMessageToast);\n\n  const [progress, setProgress] = useState(\"0%\");\n\n  const switchProfile = async (profileName) => {\n    //if (profileName === currentProfileName) return\n    setProgress(\"0%\");\n    setShowMessageToast(true);\n\n    console.log(\"Switch to profile: \", profileName);\n    setCurrentProfileName(profileName);\n    let newProfile; //'= profileName === \"Logica\" ? Profile_Logica : Profile_Epic;\n    switch (profileName) {\n      case \"Logica\":\n        newProfile = Profile_Logica;\n        break;\n      case \"Epic2\":\n        newProfile = Profile_Epic_2;\n        break;\n      default:\n        newProfile = Profile_Epic;\n    }\n    setPatient(newProfile.defaultPatient);\n    setProvider(newProfile.defaultProvider);\n    setBaseUrl(newProfile.defaultBaseUrl);\n    setNotificationUrl(newProfile.defaultNotificationUrl);\n    if (newProfile.name === \"Logica\") {\n      setAccessToken(newProfile.accessToken);\n    } else {\n      let token = await getAccessToken();\n      setAccessToken(token);\n    }\n\n    setShowMessageToast(false);\n    setProgress(\"0%\");\n    //setToastMessage(\"\");\n  };\n\n  const refreshProfileSettings = async () => {\n    const encounterList = await getEncounters(patient.fhirId, baseUrl);\n    if (encounterList?.length > 0) {\n      await changeCurrentEncounter(encounterList[0].resource.id, baseUrl);\n    }\n  };\n\n  // Create a referral\n  const createReferral = async (referral) => {\n    setProgress(\"0%\");\n    setShowMessageToast(true);\n\n    console.log(\"create referral: \", referral);\n    const nowISO = new Date().toISOString();\n\n    // Create ServiceRequest\n    let url = baseUrl + \"/ServiceRequest\";\n    let resource = {\n      resourceType: \"ServiceRequest\",\n      status: \"active\",\n      intent: \"plan\",\n      category: [\n        {\n          coding: [\n            {\n              system: \"http://snomed.info/sct\",\n              code: \"307835004\",\n              display: \"Referral by service\",\n            },\n          ],\n          text: \"Referral by service\",\n        },\n      ],\n      priority: \"routine\",\n      subject: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + \", \" + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      authoredOn: nowISO,\n      requester: [\n        {\n          reference: `Practitioner/${provider.fhirId}`,\n          display: provider.firstName + \" \" + provider.lastName,\n        },\n      ],\n      // orderDetail: {\n      //   text: referral.serviceType.text,\n      //   coding: [\n      //     {\n      //       system: \"Unite Us\",\n      //       code: referral.serviceType.value,\n      //       display: referral.serviceType.text,\n      //     },\n      //   ],\n      // },\n    };\n\n    if (referral.attachDocument && sampleDocumentReference.length > 0) {\n      resource.supportingInfo = [\n        {\n          reference: `DocumentReference/${sampleDocumentReference}`,\n        },\n      ];\n    }\n\n    let res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(resource),\n    });\n\n    let data = await res.json();\n    let newServiceRequestId = data.id;\n    console.log(\"server request id: \", newServiceRequestId);\n\n    // Create Task\n    url = baseUrl + \"/Task\";\n    resource = {\n      resourceType: \"Task\",\n      basedOn: [\n        {\n          reference: `ServiceRequest/${newServiceRequestId}`,\n        },\n      ],\n      status: \"requested\",\n      intent: \"plan\",\n      priority: \"routine\",\n      for: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + \", \" + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      authoredOn: nowISO,\n      lastModified: nowISO,\n      requester: [\n        {\n          reference: `Practitioner/${provider.fhirId}`,\n          display: provider.firstName + \" \" + provider.lastName,\n        },\n      ],\n      // description:\n      //   referral.description +\n      //   \"/n referred to : \" +\n      //   referral.referredToGroupIds.text +\n      //   \" [\" +\n      //   referral.referredToGroupIds.value +\n      //   \"]\",\n      owner: {\n        reference: `Organization/${referral.referredToGroupIds.value}`,\n        display: referral.referredToGroupIds.text,\n      },\n    };\n\n    setProgress(\"5%\");\n\n    res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(resource),\n    });\n\n    data = await res.json();\n    let newTaskId = data.id;\n    console.log(\"Task id: \", newTaskId);\n\n    // Create initial Communication\n    url = baseUrl + \"/Communication\";\n    resource = {\n      resourceType: \"Communication\",\n      basedOn: [\n        {\n          reference: `ServiceRequest/${newServiceRequestId}`,\n        },\n      ],\n      partOf: [\n        {\n          reference: `Task/${newTaskId}`,\n        },\n      ],\n      status: \"in-progress\",\n      subject: {\n        reference: `Patient/${patient.fhirId}`,\n        display: patient.lastName + \", \" + patient.firstName,\n      },\n      encounter: {\n        reference: `Encounter/${currentEncounter}`,\n      },\n      sent: nowISO,\n      recipient: [\n        {\n          reference: `Organization/${referral.referredToGroupIds.value}`,\n          display: referral.referredToGroupIds.text,\n        },\n      ],\n      sender: {\n        reference: `Practitioner/${provider.fhirId}`,\n        display: provider.firstName + \" \" + provider.lastName,\n      },\n    };\n\n    if (referral.description.length > 0) {\n      resource.payload = [\n        {\n          contentString: referral.description,\n        },\n      ];\n    }\n\n    if (referral.attachDocument && sampleDocumentReference.length > 0) {\n      resource.payload = [\n        ...resource.payload,\n        {\n          contentReference: {\n            reference: `DocumentReference/${sampleDocumentReference}`,\n          },\n        },\n      ];\n    }\n\n    res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(resource),\n    });\n\n    data = await res.json();\n    let newCommunicationId = data.id;\n    console.log(\"Communication id: \", newCommunicationId);\n\n    await getReferrals();\n\n    setProgress(\"100%\");\n    setShowMessageToast(false);\n  };\n\n  const fetchReferrals = async (\n    encounterId = currentEncounter,\n    referralBaseUrl = baseUrl\n  ) => {\n    // fetching Task + ServiceRequest\n    //setToastMessage(\"Fetching FHIR resources: \\n Tasks ... \\n ServiceRequests ... \");\n    setProgress(\"10%\");\n\n    const url =\n      referralBaseUrl +\n      \"/Task?encounter=\" +\n      encounterId +\n      \"&_include=Task%3Apatient&_include=Task%3Aencounter&_include=Task%3Arequester&_include=Task%3A\" +\n      \"based-on\" + //(currentProfileName === \"Epic\" ? \"basedon\" : \"based-on\") + \"%3AServiceRequest\" +\n      \"&_include=Task%3Aowner%3AOrganization\";\n\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n      },\n    });\n    const data = await res.json();\n    let entryList = data.total === 0 ? [] : data.entry;\n    if (!entryList) return [];\n    console.log(\"Task bundle received: \", entryList);\n\n    // //_include works at Epic, no need to fetch ServiceRequest seperatedly\n    // const url2 = baseUrl + \"/ServiceRequest?encounter=\" + encounterId;\n    // const res2 = await fetch(url2, {\n    //   method: \"GET\",\n    //   headers: {\n    //     \"Content-type\": \"application/json\",\n    //     Accept: \"application/json\",\n    //     Authorization: accessToken.length > 0 ? \"bearer \" + accessToken : \"\",\n    //   },\n    // });\n    // const data2 = await res2.json();\n    // let entryList2 = data2.total === 0 ? [] : data2.entry;\n    // entryList = entryList.concat(entryList2);\n\n    //filter ServiceRequest and Task\n    // if (entryList.length > 0) {\n    //   entryList = entryList.filter((entry) => {\n    //     return (\n    //       entry.resource.resourceType === \"ServiceRequest\" ||\n    //       entry.resource.resourceType === \"Task\"\n    //     );\n    //   });\n    // }\n\n    // Take all the Task\n    let referralList = [];\n    entryList.forEach((entry, index) => {\n      if (entry.resource.resourceType === \"Task\") {\n        let referral = {\n          id: \"Task/\" + entry.resource.id,\n          Task: entry,\n        };\n        referralList.push(referral);\n      }\n    });\n\n    // Group the other resources with the Task\n    referralList.forEach((referral, index) => {\n      const resource = referral?.Task?.resource;\n      if (!resource) return;\n\n      const patientId = resource.for?.reference;\n      const serviceRequestId = resource.basedOn[0].reference;\n      const practitionerId = resource.requester?.reference;\n      const organizationId = resource.owner?.reference;\n\n      entryList.forEach((entry, index) => {\n        let entryId = entry.resource.id;\n        switch (entry.resource.resourceType) {\n          case \"ServiceRequest\": {\n            if (serviceRequestId === `ServiceRequest/${entryId}`)\n              referral.ServiceRequest = entry;\n            break;\n          }\n          case \"Patient\": {\n            if (patientId === `Patient/${entryId}`) referral.Patient = entry;\n            break;\n          }\n          case \"Organization\": {\n            if (organizationId === `Organization/${entryId}`)\n              referral.Organization = entry;\n            break;\n          }\n          case \"Practitioner\": {\n            if (practitionerId === `Practitioner/${entryId}`)\n              referral.Practitioner = entry;\n            break;\n          }\n          default:\n        }\n      });\n    });\n\n    // Fetch Communications for each Task\n    //setToastMessage((a) => { return a + \"\\n Communications ... \"});\n    setProgress(\"40%\");\n    for (let referral of referralList) {\n      const referralId = referral?.Task?.resource?.id;\n      const communications = await fetchCommunications(referralId);\n      referral.Communication = communications.entry;\n    }\n\n    // Fetch DocumentReferences for each ServiceRequest\n    //setToastMessage((a) => { return a + \"\\n DocumentReferences ... \"});\n    setProgress(\"70%\");\n    for (let referral of referralList) {\n      const documentReferences = await fetchDocumentReferences(referral);\n      if (documentReferences?.length > 0) {\n        referral.DocumentReference = documentReferences;\n        setSampleDocumentReference(referral.DocumentReference[0].id);\n        console.log(\"documentReference\", referral.DocumentReference);\n        console.log(\"sampleDocumentReference\", sampleDocumentReference);\n      }\n    }\n\n    // Fetch Binaries for all DocumentReferences\n    //setToastMessage((a) => { return a + \"\\nBinaries ... \"});\n    setProgress(\"95%\");\n    for (let referral of referralList) {\n      if (referral.DocumentReference?.length > 0) {\n        const binaryList = await fetchBinaries(referral.DocumentReference);\n        if (binaryList?.length > 0) {\n          referral.Binary = binaryList;\n        }\n      }\n    }\n\n    //referralList = referralList.filter((entry) => {\n    //  return entry.Task;\n    //});\n\n    // Fetch Consents\n    //if (currentProfileName === \"Epic\") {\n    //setToastMessage((a) => { return a + \"\\n Consents ... \"});\n    const consentList = await fetchConsents();\n    if (consentList?.length > 0) {\n      referralList.forEach((entry, index) => {\n        entry.Consent = consentList;\n      });\n    }\n    //}\n\n    console.log(\"referral list\", referralList);\n    referralList.sort((a, b) => {\n      const timeA = new Date(a.ServiceRequest.resource.authoredOn).getTime();\n      const timeB = new Date(b.ServiceRequest.resource.authoredOn).getTime();\n      return timeB - timeA;\n    });\n\n    setProgress(\"100%\");\n    return referralList;\n  };\n\n  const fetchEncounters = async (\n    patientId = patient.fhirId,\n    encounterBaseUrl = baseUrl\n  ) => {\n    const url = encounterBaseUrl + \"/Encounter?patient=\" + patientId;\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization:\n          accessToken?.length > 0 && currentProfileName !== \"Logica\"\n            ? \"bearer \" + accessToken\n            : \"\",\n      },\n    });\n    const data = await res.json();\n\n    const encounterList = data.total > 0 ? data.entry : [];\n\n    encounterList.sort((a, b) => {\n      const timeA = new Date(a.resource.period.start).getTime();\n      const timeB = new Date(b.resource.period.start).getTime();\n      return timeB - timeA;\n    });\n    console.log(\"encounter\", encounterList);\n    return encounterList;\n  };\n\n  // Fetch Communications for a Task\n  const fetchCommunications = async (taskId) => {\n    const url = baseUrl + \"/Communication?part-of=\" + taskId;\n\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n      },\n    });\n    const data = await res.json();\n    console.log(\"communications: \", data);\n    return data;\n  };\n\n  // Fetch DocumentReferences for a ServiceRequest\n  const fetchDocumentReferences = async (referral) => {\n    const documentList = [];\n    const supportingInfo = referral?.ServiceRequest?.resource?.supportingInfo;\n\n    if (!supportingInfo) return documentList;\n\n    for (let entry of supportingInfo) {\n      const url = baseUrl + \"/\" + entry.reference;\n      const res = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n        },\n      });\n      const data = await res.json();\n      console.log(\"documentReference: \", data);\n      if (data?.resourceType === \"DocumentReference\") documentList.push(data);\n    }\n\n    return documentList;\n  };\n\n  // Fetch DocumentReferences for a ServiceRequest\n  const fetchBinaries = async (documentReferenceList) => {\n    const binaryList = [];\n\n    if (!documentReferenceList) return binaryList;\n\n    for (let entry of documentReferenceList) {\n      const url = baseUrl + \"/\" + entry.content[0]?.attachment?.url;\n      const res = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Accept: \"application/fhir+json\",\n          Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n        },\n      });\n      const data = await res.json();\n      if (data?.resourceType === \"Binary\") {\n        binaryList.push(data);\n      }\n    }\n\n    return binaryList;\n  };\n\n  // Fetch Consent for a Patient\n  const fetchConsents = async (\n    patientFhirId = patient.fhirId,\n    category = currentProfileName === \"Logica\"\n      ? \"64292-6\"\n      : \"http://loinc.org|64292-6\",\n    status = \"active\"\n  ) => {\n    const url = `${baseUrl}/Consent?patient=${patientFhirId}&category=${category}&status=${status}`;\n    const res = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: accessToken?.length > 0 ? \"bearer \" + accessToken : \"\",\n      },\n    });\n    const data = await res.json();\n    console.log(\"consent: \", data);\n    return data.entry;\n  };\n\n  const changeCurrentEncounter = async (encounterSelected, currentBaseUrl) => {\n    //if (encounterSelected === currentEncounter) return;\n    setProgress(\"0%\");\n    setShowMessageToast(true);\n\n    setCurrentEncounter(encounterSelected);\n    await getReferrals(encounterSelected, currentBaseUrl);\n\n    setShowMessageToast(false);\n    setProgress(\"0%\");\n    //setToastMessage(\"\");\n\n    return;\n  };\n\n  const getReferrals = async (encounterSelected, referralBaseUrl) => {\n    const data = await fetchReferrals(encounterSelected, referralBaseUrl);\n    setReferrals(data);\n  };\n\n  const getEncounters = async (patientId, encounterBaseUrl) => {\n    setProgress(\"0%\");\n    setShowMessageToast(true);\n\n    const data = await fetchEncounters(patientId, encounterBaseUrl);\n    setEncounters(data);\n\n    setShowMessageToast(false);\n    setProgress(\"0%\");\n    //setToastMessage(\"\");\n\n    return data;\n  };\n\n  const sendNotificationUU = async () => {\n    const url = notificationUrl;\n    const notification = {\n      resourceType: \"Bundle\",\n      type: \"Event\",\n      entry: [\n        {\n          fullUrl: baseUrl + \"/Encounter/\" + currentEncounter,\n        },\n      ],\n    };\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"x-api-key\": \"sfsdfddfdsfsdfs32342343\", //\"wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03\",\n      },\n      body: JSON.stringify(notification),\n    });\n    const data = await res.json();\n    console.log(\"notification response: \", data);\n    return data;\n  };\n\n  const getAccessToken = async () => {\n    const url =\n      \"https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/authentication/token\";\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        \"x-api-key\": \"sfsdfddfdsfsdfs32342343\", //\"wOvYlZbrIW6THlB68QcJk6UlCwNPKYHfibNCMj03\",\n      },\n      body: JSON.stringify({\n        privateKey: null,\n      }),\n    });\n    const data = await res.json();\n    const token = data.body.access_token;\n    console.log(\"access token \", token);\n    return token;\n  };\n\n  const updateReferralStatus = async (taskFhirId, newStatus) => {\n    console.log(\"new status: \", newStatus);\n    setProgress(\"0%\");\n    setToastMessage(\"Updating Task Status ...\");\n    setShowMessageToast(true);\n\n    // fetch the Task first\n    let url =\n      \"https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/request/read\";\n    let res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        \"x-api-key\": \"sfsdfddfdsfsdfs32342343\",\n      },\n      body: JSON.stringify({\n        baseUrl: baseUrl,\n        resourceType: \"Task\",\n        resourceId: taskFhirId,\n      }),\n    });\n    let data = await res.json();\n    let task = data.response.body;\n    let headers = data.response.headers;\n    let eTag =\n      currentProfileName === \"Logica\"\n        ? headers[\"etag\"][0]\n        : headers[\"e-tag\"][0];\n    console.log(\"task: \", task);\n    console.log(\"headers\", headers);\n\n    setProgress(\"5%\");\n    // update status and match header\n    task.status = newStatus.value;\n    let epicCode = mapToEpicCode(newStatus.rejectReason.reason.text);\n    if (newStatus.value === \"rejected\") {\n      task.statusReason = {\n        coding: [\n          {\n            system:\n              currentProfileName === \"Logica\"\n                ? \"HTTPS://UNITEUS.COM/IO/STRUCTUREDEFINITION/STATUS-REASON\"\n                : \"urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025\",\n            code: epicCode.code,\n            display: epicCode.display,\n          },\n        ],\n        text: `${newStatus.rejectReason.reason.value}. ${newStatus.rejectReason.note}`,\n      };\n    }\n    console.log(\"new task: \", task);\n\n    // send Task update requester\n    url =\n      \"https://5yhugddpmk.execute-api.us-east-1.amazonaws.com/rick/mockapi/request/update\";\n    res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        \"x-api-key\": \"sfsdfddfdsfsdfs32342343\",\n      },\n      body: JSON.stringify({\n        baseUrl: baseUrl,\n        resourceType: \"Task\",\n        resourceId: taskFhirId,\n        etag: eTag,\n        resource: task,\n      }),\n    });\n\n    setProgress(\"10%\");\n    setToastMessage(\"Retrieving FHIR Resources ...\");\n    await getReferrals(currentEncounter, baseUrl);\n    setShowMessageToast(false);\n    setProgress(\"0%\");\n    return;\n  };\n\n  const mapToEpicCode = (uuCode) => {\n    switch (uuCode) {\n      case \"Not Eligible\":\n        return {\n          system: \"urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025\",\n          code: \"104\",\n          display:\n            \"Patient does not meet the level of care required for admission\",\n        };\n      case \"No Capacity\":\n        return {\n          system: \"urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025\",\n          code: \"101\",\n          display: \"Facility Full\",\n        };\n      case \"Do Not Provide Service\":\n        return {\n          system: \"urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025\",\n          code: \"103\",\n          display: \"Facility cannot provide for patient's needs\",\n        };\n      case \"Duplicate\":\n      case \"Unable to Contact Client\":\n      case \"Other\":\n      default:\n        return {\n          system: \"urn:oid:1.2.840.114350.1.13.0.1.7.4.698084.34025\",\n          code: \"99\",\n          display: \"Other (Comment)\",\n        };\n    }\n  };\n\n  useEffect(() => {\n    const setProfile = async (profileName) => {\n      await switchProfile(profileName);\n    };\n\n    setProfile(defaultProfileName);\n  }, []);\n\n  useEffect(() => {\n    const updateFhir = async () => {\n      await refreshProfileSettings();\n    };\n\n    updateFhir();\n  }, [accessToken]);\n\n  return (\n    <div className=\"App\">\n      <Header\n        patient={patient}\n        provider={provider}\n        profileName={currentProfileName}\n        switchProfile={switchProfile}\n      />\n\n      <div\n        className={\n          showMessageToast ? \"toast bg-warning text-secondary show\" : \"toast\"\n        }\n        role=\"alert\"\n        aria-live=\"assertive\"\n        aria-atomic=\"true\"\n        id=\"messageToast\"\n      >\n        <div className=\"toast-header\">\n          <strong className=\"me-auto\">Please Wait ...</strong>\n        </div>\n        <div className=\"toast-body\">\n          {toastMessage}\n          <div className=\"spinner-border text-warning\" role=\"status\">\n            <span className=\"visually-hidden\">...</span>\n          </div>\n          <div className=\"progress my-2\">\n            <div\n              className=\"progress-bar bg-warning progress-bar-striped progress-bar-animated\"\n              role=\"progressbar\"\n              style={{ width: progress }}\n              aria-valuenow=\"0\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            ></div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container-fluid\">\n        <div className=\"row mt-1 mx-0\">\n          <Encounters\n            encounterList={encounters}\n            currentEncounter={currentEncounter}\n            changeCurrentEncounter={changeCurrentEncounter}\n            refreshEncounters={getEncounters}\n          />\n          <Referrals\n            onCreate={createReferral}\n            referralList={referrals}\n            currentEncounter={currentEncounter}\n            sendNotificationUU={sendNotificationUU}\n            profileName={currentProfileName}\n            updateReferralStatus={updateReferralStatus}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}